{
  "validator_task_id": "a99612f2-dd85-4dcd-b3f1-efaee88d72bf",
  "validator_hotkey": "5DWuP51n8GYLRrYfmyEgKxRgeNGiXLN7mBdLvyeqTeKgBnXb",
  "completions": [
    {
      "id": "d45865c2-356e-4965-8a65-8423a2498b04",
      "completion_id": "3ff4756e-233c-4a23-9aa1-f8bd01ec220f",
      "validator_task_id": "a99612f2-dd85-4dcd-b3f1-efaee88d72bf",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width,initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Interactive Garden</title><style>body{margin:0;display:flex;flex-direction:column;align-items:center;justify-content:center;min-height:100vh;background:#87CEEB;transition:background 2s;font-family:Arial,sans-serif;overflow:hidden}#garden{display:grid;grid-template-columns:repeat(6,80px);gap:10px;padding:20px;background:rgba(139,69,19,0.3);border-radius:10px}#controls{position:fixed;bottom:20px;background:rgba(255,255,255,0.2);padding:15px;border-radius:10px;display:flex;gap:20px;align-items:center}.cell{width:80px;height:80px;background:rgba(139,69,19,0.2);border-radius:5px;cursor:pointer;position:relative}.control-group{display:flex;flex-direction:column;align-items:center;gap:5px}label{color:#fff;text-shadow:1px 1px 2px rgba(0,0,0,0.5);font-size:12px}input[type=\\\"range\\\"]{width:100px}.instructions{position:fixed;top:20px;color:#fff;text-shadow:1px 1px 2px rgba(0,0,0,0.5);font-size:14px;text-align:center;opacity:0.8}</style></head><body><div id=\\\"garden\\\"></div><div id=\\\"controls\\\"><div class=\\\"control-group\\\"><label>Time of Day</label><input id=\\\"timeSlider\\\" max=\\\"100\\\" min=\\\"0\\\" type=\\\"range\\\" value=\\\"50\\\"/></div><div class=\\\"control-group\\\"><label>Wind Strength</label><input id=\\\"windSlider\\\" max=\\\"100\\\" min=\\\"0\\\" type=\\\"range\\\" value=\\\"20\\\"/></div><div class=\\\"control-group\\\"><label>Growth Speed</label><input id=\\\"speedSlider\\\" max=\\\"100\\\" min=\\\"1\\\" type=\\\"range\\\" value=\\\"50\\\"/></div></div><script src=\\\"index.js\\\"></script><script>const garden=document.getElementById('garden');const timeSlider=document.getElementById('timeSlider');const windSlider=document.getElementById('windSlider');const speedSlider=document.getElementById('speedSlider');const GRID_SIZE=6;const cells=[];let time=50;let wind=20;let particles=[];class Plant{constructor(cell){this.cell=cell;this.growth=0;this.maxGrowth=100;this.stem=[];this.leaves=[];this.petals=[];this.stamens=[];this.openness=1;this.swayOffset=Math.random()*Math.PI*2;this.color=`hsl(${120+Math.random()*40},${70+Math.random()*30}%,${40+Math.random()*20}%)`;this.flowerColor=`hsl(${Math.random()*360},${70+Math.random()*30}%,${70+Math.random()*20}%)`}update(dt){if(this.growth<this.maxGrowth){this.growth+=dt*parseFloat(speedSlider.value)/500}const timeOfDay=parseFloat(timeSlider.value)/100;const targetOpenness=Math.sin(timeOfDay*Math.PI);this.openness+=(targetOpenness-this.openness)*0.1;const windStrength=parseFloat(windSlider.value)/100;this.swayOffset+=dt*windStrength*0.01;if(Math.random()<0.01&&this.growth>=this.maxGrowth&&this.openness>0.5){createParticle(this.cell,'pollen')}}draw(ctx){const height=70*Math.min(1,this.growth/this.maxGrowth);const stemSegments=10;const segmentHeight=height/stemSegments;ctx.save();ctx.translate(40,80);const windEffect=Math.sin(this.swayOffset)*parseFloat(windSlider.value)/50;ctx.rotate(windEffect);ctx.beginPath();ctx.moveTo(0,0);let x=0;for(let i=0;i<stemSegments;i++){x=Math.sin(i/2+this.swayOffset)*3;ctx.lineTo(x,-i*segmentHeight)}ctx.strokeStyle=this.color;ctx.lineWidth=3;ctx.stroke();if(this.growth>20){for(let i=2;i<stemSegments-2;i+=2){const leafSize=10*(1-i/stemSegments)*Math.min(1,(this.growth-20)/30);ctx.save();ctx.translate(x,-i*segmentHeight);ctx.rotate((i%4-1.5)*0.5+windEffect);ctx.beginPath();ctx.ellipse(0,0,leafSize,leafSize/2,0,0,Math.PI*2);ctx.fillStyle=this.color;ctx.fill();ctx.restore()}}if(this.growth>50){const flowerSize=15*Math.min(1,(this.growth-50)/50)*this.openness;const petalCount=12;for(let i=0;i<petalCount;i++){const angle=i*(Math.PI*2/petalCount);const petalX=Math.cos(angle)*flowerSize;const petalY=Math.sin(angle)*flowerSize;ctx.save();ctx.translate(x,-height+5);ctx.rotate(angle+windEffect);ctx.beginPath();ctx.ellipse(petalX/2,-petalY/2,flowerSize/2,flowerSize/4,angle,0,Math.PI*2);ctx.fillStyle=this.color;ctx.fill();ctx.restore()}ctx.save();ctx.translate(x,-height+5);ctx.beginPath();ctx.arc(0,0,flowerSize/3,0,Math.PI*2);ctx.fillStyle='#FFD700';ctx.fill();for(let i=0;i<8;i++){const angle=i*(Math.PI*2/8);const stamenLength=flowerSize/4;ctx.save();ctx.rotate(angle);ctx.beginPath();ctx.moveTo(0,0);ctx.lineTo(stamenLength,0);ctx.strokeStyle='#FFD700';ctx.lineWidth=2;ctx.stroke();ctx.restore()}ctx.restore()}ctx.restore()}}function createParticle(cell,type){const rect=cell.getBoundingClientRect();const particle={x:rect.left+rect.width/2,y:rect.top+rect.height/2,type:type,life:1,velocity:{x:(Math.random()-0.5)*2,y:type==='pollen'?-1:2}};particles.push(particle)}function updateParticles(){particles=particles.filter(p=>{p.life-=0.01;p.x+=p.velocity.x;p.y+=p.velocity.y;return p.life>0})}function drawParticles(){const canvas=document.createElement('canvas');canvas.width=window.innerWidth;canvas.height=window.innerHeight;const ctx=canvas.getContext('2d');particles.forEach(p=>{ctx.beginPath();ctx.arc(p.x,p.y,p.type==='pollen'?2:3,0,Math.PI*2);ctx.fillStyle=p.type==='pollen'?`rgba(255, 255, 0, ${p.life})`:`rgba(139, 69, 19, ${p.life})`;ctx.fill()})}for(let i=0;i<GRID_SIZE*GRID_SIZE;i++){const cell=document.createElement('div');cell.className='cell';cell.onclick=()=>{if(!cells[i].plant){cells[i].plant=new Plant(cell)}};cell.ondblclick=()=>{if(cells[i].plant&&cells[i].plant.growth>=100){for(let j=0;j<10;j++){createParticle(cell,'seed')}cells[i].plant=null}};garden.appendChild(cell);cells.push({element:cell,plant:null})}function update(){const canvas=document.createElement('canvas');canvas.width=80;canvas.height=80;const ctx=canvas.getContext('2d');const dt=16;time=parseFloat(timeSlider.value);document.body.style.background=`hsl(200,80%,${50-time/4}%)`;cells.forEach((cell,index)=>{if(cell.plant){cell.plant.update(dt);ctx.clearRect(0,0,80,80);cell.plant.draw(ctx);cell.element.style.background=`url(${canvas.toDataURL()})`}else{cell.element.style.background='rgba(139, 69, 19, 0.2)'}});updateParticles();drawParticles()}setInterval(update,16);const instructions=document.createElement('div');instructions.className='instructions';instructions.textContent='Click to plant a seed. Double-click mature plants to harvest.';document.body.appendChild(instructions);</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:41:25.015000Z",
      "updated_at": "2025-02-08T13:41:25.015000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "59e1af64-0e37-412c-a65b-32f636439e8f",
          "completion_id": "d45865c2-356e-4965-8a65-8423a2498b04",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:41:25.015000Z",
          "updated_at": "2025-02-08T13:41:25.015000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    },
    {
      "id": "f27c66eb-aa57-4b2d-a4bc-1d9ab6e9b51e",
      "completion_id": "603c4a27-d3d6-4681-a7b2-c3673837f610",
      "validator_task_id": "a99612f2-dd85-4dcd-b3f1-efaee88d72bf",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width,initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Interactive Garden</title><style>body{margin:0;overflow:hidden;background:#87CEEB;display:flex;flex-direction:column;align-items:center;justify-content:center;height:100vh;font-family:Arial,sans-serif}#garden{background:#654321;border-radius:10px;padding:10px;box-shadow:0 0 20px rgba(0,0,0,0.3)}#controls{position:fixed;bottom:20px;background:rgba(255,255,255,0.1);padding:10px;border-radius:10px;display:flex;gap:20px;align-items:center}.control{display:flex;flex-direction:column;align-items:center;color:#fff;font-size:12px}input[type=range]{width:100px}.instructions{position:fixed;top:20px;color:#fff;font-size:14px;text-align:center;background:rgba(0,0,0,0.2);padding:10px;border-radius:5px}</style></head><body><canvas id=\\\"garden\\\"></canvas><div class=\\\"instructions\\\">Click to plant seeds. Double-click mature plants to collect seeds.</div><div id=\\\"controls\\\"><div class=\\\"control\\\"><label>Time of Day</label><input id=\\\"timeSlider\\\" max=\\\"100\\\" min=\\\"0\\\" type=\\\"range\\\" value=\\\"50\\\"/></div><div class=\\\"control\\\"><label>Wind Strength</label><input id=\\\"windSlider\\\" max=\\\"100\\\" min=\\\"0\\\" type=\\\"range\\\" value=\\\"20\\\"/></div><div class=\\\"control\\\"><label>Growth Speed</label><input id=\\\"speedSlider\\\" max=\\\"100\\\" min=\\\"1\\\" type=\\\"range\\\" value=\\\"50\\\"/></div></div><script src=\\\"index.js\\\"></script><script>const canvas=document.getElementById('garden'),ctx=canvas.getContext('2d');let width=canvas.width=600,height=canvas.height=600;const GRID_SIZE=6,CELL_SIZE=width/GRID_SIZE,plants=[],timeSlider=document.getElementById('timeSlider'),windSlider=document.getElementById('windSlider'),speedSlider=document.getElementById('speedSlider');let time=0.5,wind=0.2,growthSpeed=0.5;class Plant{constructor(x,y){this.x=x;this.y=y;this.growth=0;this.stemPoints=[];this.leaves=[];this.petals=[];this.alive=true;this.swayOffset=Math.random()*Math.PI*2;this.color={stem:'#2d5a27',leaf:'#3a7a3a',petal:this.getRandomPetalColor()}}getRandomPetalColor(){const colors=['#ff69b4','#ff1493','#da70d6','#ba55d3','#9370db'];return colors[Math.floor(Math.random()*colors.length)]}update(dt){if(!this.alive)return;this.growth+=dt*growthSpeed;if(this.growth>1)this.growth=1;const windEffect=Math.sin(time*2+this.swayOffset)*wind;this.generateStem(windEffect);if(this.growth>0.3)this.generateLeaves(windEffect);if(this.growth>0.7)this.generatePetals(windEffect)}generateStem(windEffect){this.stemPoints=[];let currentY=CELL_SIZE;const segments=10;for(let i=0;i<=segments;i++){const progress=i/segments;const x=CELL_SIZE/2+Math.sin(progress*3+time+this.swayOffset)*10*windEffect;const y=CELL_SIZE-progress*CELL_SIZE*this.growth;this.stemPoints.push({x,y})}}generateLeaves(windEffect){this.leaves=[];if(this.growth<0.3)return;const leafCount=3;for(let i=0;i<leafCount;i++){const progress=(i+1)/(leafCount+1);const basePoint=this.stemPoints[Math.floor(progress*this.stemPoints.length)];if(basePoint){const angle=Math.sin(time+this.swayOffset)*0.5*windEffect;const size=15*this.growth;this.leaves.push({x:basePoint.x,y:basePoint.y,angle:angle+(i%2?1:-1)*Math.PI/4,size})}}}generatePetals(windEffect){this.petals=[];if(this.growth<0.7)return;const petalCount=12;const openness=Math.sin(time*Math.PI)*.5+.5;for(let i=0;i<petalCount;i++){const angle=i*(Math.PI*2/petalCount)+Math.sin(time+this.swayOffset)*0.1*windEffect;const distance=15*this.growth*openness;const x=this.stemPoints[0].x+Math.cos(angle)*distance;const y=this.stemPoints[0].y+Math.sin(angle)*distance;this.petals.push({x,y,angle})}}draw(){if(!this.alive)return;ctx.strokeStyle=this.color.stem;ctx.lineWidth=3;ctx.beginPath();this.stemPoints.forEach((point,i)=>{if(i===0)ctx.moveTo(this.x+point.x,this.y+point.y);else ctx.lineTo(this.x+point.x,this.y+point.y)});ctx.stroke();this.leaves.forEach(leaf=>{ctx.save();ctx.translate(this.x+leaf.x,this.y+leaf.y);ctx.rotate(leaf.angle);ctx.fillStyle=this.color.leaf;ctx.beginPath();ctx.ellipse(0,0,leaf.size,leaf.size/2,0,0,Math.PI*2);ctx.fill();ctx.restore()});if(this.growth>0.7){ctx.fillStyle='#ffd700';ctx.beginPath();ctx.arc(this.x+this.stemPoints[0].x,this.y+this.stemPoints[0].y,5,0,Math.PI*2);ctx.fill()}this.petals.forEach(petal=>{ctx.save();ctx.translate(this.x+petal.x,this.y+petal.y);ctx.rotate(petal.angle);ctx.fillStyle=this.color.petal;ctx.beginPath();ctx.ellipse(0,0,10,5,0,0,Math.PI*2);ctx.fill();ctx.restore()})}}function update(){time+=0.01;wind=windSlider.value/100;growthSpeed=speedSlider.value/100;const dayProgress=timeSlider.value/100;const skyColor=`hsl(200,60%,${Math.max(5,dayProgress*70)}%)`;document.body.style.background=skyColor;plants.forEach(plant=>plant.update(0.016));draw();requestAnimationFrame(update)}function draw(){ctx.clearRect(0,0,width,height);for(let y=0;y<GRID_SIZE;y++){for(let x=0;x<GRID_SIZE;x++){ctx.fillStyle='#3d2616';ctx.fillRect(x*CELL_SIZE,y*CELL_SIZE,CELL_SIZE,CELL_SIZE);ctx.strokeStyle='#2a1a0f';ctx.strokeRect(x*CELL_SIZE,y*CELL_SIZE,CELL_SIZE,CELL_SIZE)}}plants.forEach(plant=>plant.draw())}canvas.addEventListener('click',e=>{const rect=canvas.getBoundingClientRect();const x=Math.floor((e.clientX-rect.left)/CELL_SIZE)*CELL_SIZE;const y=Math.floor((e.clientY-rect.top)/CELL_SIZE)*CELL_SIZE;if(!plants.some(p=>p.x===x&&p.y===y)){plants.push(new Plant(x,y))}});canvas.addEventListener('dblclick',e=>{const rect=canvas.getBoundingClientRect();const x=Math.floor((e.clientX-rect.left)/CELL_SIZE)*CELL_SIZE;const y=Math.floor((e.clientY-rect.top)/CELL_SIZE)*CELL_SIZE;const index=plants.findIndex(p=>p.x===x&&p.y===y);if(index!==-1&&plants[index].growth>0.9){plants[index].alive=false;setTimeout(()=>plants.splice(index,1),1000);createSeedParticles(x+CELL_SIZE/2,y+CELL_SIZE/2)}});function createSeedParticles(x,y){for(let i=0;i<20;i++){const angle=Math.random()*Math.PI*2;const speed=2+Math.random()*2;const particle={x,y,vx:Math.cos(angle)*speed,vy:Math.sin(angle)*speed,life:1};setTimeout(()=>{ctx.fillStyle=`rgba(255,215,0,${particle.life})`;ctx.beginPath();ctx.arc(particle.x,particle.y,2,0,Math.PI*2);ctx.fill();particle.x+=particle.vx;particle.y+=particle.vy;particle.life-=0.02},i*50)}}window.addEventListener('resize',()=>{width=canvas.width=Math.min(600,window.innerWidth-40);height=canvas.height=width});update();</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:41:25.015000Z",
      "updated_at": "2025-02-08T13:41:25.015000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "07a7e1ac-e376-496c-badd-1cbd37014749",
          "completion_id": "f27c66eb-aa57-4b2d-a4bc-1d9ab6e9b51e",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:41:25.015000Z",
          "updated_at": "2025-02-08T13:41:25.015000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    },
    {
      "id": "268d6a1e-0c52-4f86-9b03-59f16d3b6cec",
      "completion_id": "5f257537-9d91-49ae-8724-3e710dac0fef",
      "validator_task_id": "a99612f2-dd85-4dcd-b3f1-efaee88d72bf",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width,initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Interactive Garden</title><style>body{margin:0;overflow:hidden;background:#87CEEB;font-family:Arial,sans-serif;display:flex;flex-direction:column;align-items:center;justify-content:center;height:100vh}#garden{background:#654321;border-radius:8px;margin:20px}.controls{position:fixed;bottom:20px;background:rgba(255,255,255,0.9);padding:15px;border-radius:8px;display:flex;gap:20px;align-items:center}.control-group{display:flex;flex-direction:column;align-items:center;gap:5px}label{font-size:12px;color:#333}.slider{width:100px}select{padding:5px;border-radius:4px}#info{position:fixed;top:20px;color:#fff;text-align:center;font-size:14px;text-shadow:1px 1px 2px rgba(0,0,0,0.5)}</style></head><body><canvas id=\\\"garden\\\"></canvas><div class=\\\"controls\\\"><div class=\\\"control-group\\\"><label>Time of Day</label><input class=\\\"slider\\\" id=\\\"timeSlider\\\" max=\\\"100\\\" min=\\\"0\\\" type=\\\"range\\\" value=\\\"50\\\"/></div><div class=\\\"control-group\\\"><label>Wind Strength</label><input class=\\\"slider\\\" id=\\\"windSlider\\\" max=\\\"100\\\" min=\\\"0\\\" type=\\\"range\\\" value=\\\"20\\\"/></div><div class=\\\"control-group\\\"><label>Growth Speed</label><input class=\\\"slider\\\" id=\\\"speedSlider\\\" max=\\\"100\\\" min=\\\"1\\\" type=\\\"range\\\" value=\\\"50\\\"/></div><div class=\\\"control-group\\\"><label>Weather</label><select id=\\\"weather\\\"><option value=\\\"sunny\\\">Sunny</option><option value=\\\"rainy\\\">Rainy</option><option value=\\\"cloudy\\\">Cloudy</option></select></div></div><div id=\\\"info\\\">Click to plant seeds. Double-click mature plants to collect seeds.</div><script src=\\\"index.js\\\"></script><script>const canvas=document.getElementById('garden'),ctx=canvas.getContext('2d');let width=canvas.width=600,height=canvas.height=600;const GRID_SIZE=6,CELL_SIZE=width/GRID_SIZE,plants=[],particles=[];let time=50,wind=20,growthSpeed=50,weather='sunny',frame=0;class Plant{constructor(x,y){this.x=x*CELL_SIZE+CELL_SIZE/2;this.y=(y+1)*CELL_SIZE;this.gridX=x;this.gridY=y;this.height=0;this.maxHeight=CELL_SIZE*.8;this.growth=0;this.leaves=[];this.petals=[];this.stamens=[];this.swayOffset=Math.random()*Math.PI*2;this.alive=true}update(){if(!this.alive)return;this.growth+=growthSpeed/1000;if(this.growth>1)this.growth=1;this.height=this.maxHeight*Math.min(this.growth,1);if(this.growth>.3&&this.leaves.length<3){this.leaves.push({height:this.height*.3+this.leaves.length*20,angle:this.leaves.length%2?-.3:.3,size:10})}if(this.growth>.7&&this.petals.length<8){const angle=this.petals.length*(Math.PI*2/8);this.petals.push({angle,openness:0})}if(this.growth>.8&&this.stamens.length<5){this.stamens.push({angle:Math.random()*Math.PI*2,length:5})}this.petals.forEach(p=>{const targetOpen=time>50&&weather!=='rainy'?1:0;p.openness+=(targetOpen-p.openness)*.1})}draw(){const windOffset=Math.sin(this.swayOffset+frame/20)*wind/500;ctx.save();ctx.translate(this.x,this.y);ctx.rotate(windOffset);ctx.beginPath();ctx.moveTo(0,0);ctx.quadraticCurveTo(windOffset*50,-this.height/2,0,-this.height);ctx.strokeStyle='#228B22';ctx.lineWidth=3;ctx.stroke();this.leaves.forEach(leaf=>{ctx.save();ctx.translate(0,-leaf.height);ctx.rotate(leaf.angle+windOffset);ctx.beginPath();ctx.ellipse(0,0,leaf.size,leaf.size/2,0,0,Math.PI*2);ctx.fillStyle='#32CD32';ctx.fill();ctx.restore()});if(this.growth>.7){ctx.save();ctx.translate(0,-this.height);this.petals.forEach(petal=>{ctx.save();ctx.rotate(petal.angle);ctx.translate(10*petal.openness,0);ctx.beginPath();ctx.ellipse(0,0,15,8,0,0,Math.PI*2);ctx.fillStyle='#FF69B4';ctx.fill();ctx.restore()});this.stamens.forEach(stamen=>{ctx.save();ctx.rotate(stamen.angle);ctx.beginPath();ctx.moveTo(0,0);ctx.lineTo(stamen.length,0);ctx.strokeStyle='#FFD700';ctx.lineWidth=2;ctx.stroke();ctx.beginPath();ctx.arc(stamen.length,0,2,0,Math.PI*2);ctx.fillStyle='#FFD700';ctx.fill();ctx.restore()});ctx.restore()}ctx.restore()}remove(){this.alive=false}}class Particle{constructor(x,y,type){this.x=x;this.y=y;this.type=type;this.life=1;this.vx=(Math.random()-.5)*2;this.vy=-Math.random()*2;if(type==='rain'){this.x=Math.random()*width;this.y=0;this.vy=5+Math.random()*5;this.life=.7}}update(){this.x+=this.vx+wind/20;this.y+=this.vy;if(this.type==='rain')this.life-=.01;else this.life-=.02;return this.life>0}draw(){ctx.beginPath();if(this.type==='rain'){ctx.moveTo(this.x,this.y);ctx.lineTo(this.x+wind/20,this.y+10);ctx.strokeStyle=`rgba(200, 200, 255, ${this.life})`;ctx.stroke()}else{ctx.arc(this.x,this.y,2,0,Math.PI*2);ctx.fillStyle=this.type==='pollen'?`rgba(255, 255, 0, ${this.life})`:`rgba(255, 255, 255, ${this.life})`;ctx.fill()}}}function createGrid(){const grid=[];for(let i=0;i<GRID_SIZE;i++){grid[i]=[];for(let j=0;j<GRID_SIZE;j++)grid[i][j]=null}return grid}let grid=createGrid();function addPlant(x,y){if(!grid[x][y]){const plant=new Plant(x,y);plants.push(plant);grid[x][y]=plant}}function update(){frame++;const daytime=(Math.sin(frame/200)+1)/2;time=daytime*100;if(weather==='rainy'&&frame%5===0)particles.push(new Particle(0,0,'rain'));plants.forEach(plant=>{if(plant.growth>.9&&Math.random()<.01)particles.push(new Particle(plant.x,plant.y-plant.height,'pollen'));plant.update()});particles.forEach((p,i)=>{if(!p.update())particles.splice(i,1)})}function draw(){ctx.fillStyle=`rgb(${time/2+30}, ${time/2+30}, ${time/2+50})`;ctx.fillRect(0,0,width,height);if(weather==='cloudy'){ctx.fillStyle='rgba(255, 255, 255, 0.3)';for(let i=0;i<3;i++){const x=((frame/100)+i*200)%800-100;ctx.beginPath();ctx.ellipse(x,100,50,30,0,0,Math.PI*2);ctx.fill()}}particles.forEach(p=>p.draw());plants.forEach(p=>p.draw())}function animate(){update();draw();requestAnimationFrame(animate)}canvas.addEventListener('click',e=>{const rect=canvas.getBoundingClientRect();const x=Math.floor((e.clientX-rect.left)/CELL_SIZE);const y=Math.floor((e.clientY-rect.top)/CELL_SIZE);if(x>=0&&x<GRID_SIZE&&y>=0&&y<GRID_SIZE)addPlant(x,y)});canvas.addEventListener('dblclick',e=>{const rect=canvas.getBoundingClientRect();const x=Math.floor((e.clientX-rect.left)/CELL_SIZE);const y=Math.floor((e.clientY-rect.top)/CELL_SIZE);if(grid[x][y]&&grid[x][y].growth>.7){for(let i=0;i<10;i++)particles.push(new Particle(grid[x][y].x,grid[x][y].y-grid[x][y].height,'seed'));grid[x][y].remove();grid[x][y]=null}});document.getElementById('timeSlider').addEventListener('input',e=>time=parseInt(e.target.value));document.getElementById('windSlider').addEventListener('input',e=>wind=parseInt(e.target.value));document.getElementById('speedSlider').addEventListener('input',e=>growthSpeed=parseInt(e.target.value));document.getElementById('weather').addEventListener('change',e=>weather=e.target.value);window.addEventListener('resize',()=>{width=canvas.width=600;height=canvas.height=600});animate();</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:41:25.015000Z",
      "updated_at": "2025-02-08T13:41:25.015000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "38ab2a18-9513-4f23-9558-14eccf2715cf",
          "completion_id": "268d6a1e-0c52-4f86-9b03-59f16d3b6cec",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:41:25.015000Z",
          "updated_at": "2025-02-08T13:41:25.015000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    },
    {
      "id": "cc6197d8-80cf-47d3-8559-91a32987bffa",
      "completion_id": "40142db7-1e1d-4e29-bd78-bf26e1fa7972",
      "validator_task_id": "a99612f2-dd85-4dcd-b3f1-efaee88d72bf",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width,initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Coral Reef Simulation</title><style>body{margin:0;overflow:hidden;background:#04264D;font-family:Arial,sans-serif;display:flex;justify-content:center;align-items:center;min-height:100vh}.container{position:relative;width:600px;height:600px}.grid{display:grid;grid-template-columns:repeat(6,1fr);gap:2px;width:100%;height:100%;background:rgba(4,38,77,0.5);border-radius:8px;overflow:hidden}.cell{position:relative;background:rgba(255,255,255,0.05);cursor:pointer;transition:background 0.3s}.cell:hover{background:rgba(255,255,255,0.1)}.controls{position:fixed;bottom:20px;background:rgba(0,20,40,0.8);padding:15px;border-radius:10px;color:#fff}.control-group{margin:10px 0}.control-label{display:block;margin-bottom:5px;font-size:12px}.slider{width:200px;margin:5px 0}.instructions{position:fixed;top:20px;color:#fff;font-size:14px;text-align:center;background:rgba(0,20,40,0.8);padding:10px;border-radius:5px;opacity:0.8}</style></head><body><div class=\\\"instructions\\\">Click to place coral larvae. Use controls below to adjust environment.</div><div class=\\\"container\\\"><div class=\\\"grid\\\" id=\\\"coralGrid\\\"></div></div><div class=\\\"controls\\\"><div class=\\\"control-group\\\"><label class=\\\"control-label\\\">Time of Day</label><input class=\\\"slider\\\" id=\\\"timeSlider\\\" max=\\\"100\\\" min=\\\"0\\\" type=\\\"range\\\" value=\\\"50\\\"/></div><div class=\\\"control-group\\\"><label class=\\\"control-label\\\">Current Strength</label><input class=\\\"slider\\\" id=\\\"currentSlider\\\" max=\\\"100\\\" min=\\\"0\\\" type=\\\"range\\\" value=\\\"30\\\"/></div><div class=\\\"control-group\\\"><label class=\\\"control-label\\\">Growth Speed</label><input class=\\\"slider\\\" id=\\\"speedSlider\\\" max=\\\"100\\\" min=\\\"1\\\" type=\\\"range\\\" value=\\\"50\\\"/></div></div><canvas id=\\\"particleCanvas\\\" style=\\\"position:fixed;top:0;left:0;pointer-events:none\\\"></canvas><script src=\\\"index.js\\\"></script><script>const grid=document.getElementById('coralGrid'),canvas=document.getElementById('particleCanvas'),ctx=canvas.getContext('2d');let width=canvas.width=window.innerWidth,height=canvas.height=window.innerHeight;const timeSlider=document.getElementById('timeSlider'),currentSlider=document.getElementById('currentSlider'),speedSlider=document.getElementById('speedSlider'),cells=new Array(36).fill(null),particles=[],corals=[];class Coral{constructor(cell){this.cell=cell;this.growth=0;this.tentacles=[];this.polyp={size:0,tentacles:[]};this.position={x:cell.offsetLeft+cell.offsetWidth/2,y:cell.offsetTop+cell.offsetHeight/2};this.baseHeight=0;this.color=`hsl(${Math.random()*60+180},70%,50%)`;this.glowColor=`hsl(${Math.random()*60+180},90%,70%)`;this.swayOffset=Math.random()*Math.PI*2;this.maturity=0}update(deltaTime,timeOfDay,currentStrength){const growthRate=parseFloat(speedSlider.value)/1000;this.growth=Math.min(1,this.growth+growthRate*deltaTime);if(this.growth>0.3&&this.baseHeight<30){this.baseHeight+=growthRate*20*deltaTime}if(this.growth>0.5&&this.tentacles.length<5&&Math.random()<0.05){this.tentacles.push({length:0,angle:Math.random()*Math.PI*2})}this.tentacles.forEach(t=>{if(t.length<15){t.length+=growthRate*10*deltaTime}});if(this.growth>0.8){this.polyp.size=Math.min(10,this.polyp.size+growthRate*5*deltaTime);if(this.polyp.tentacles.length<8&&Math.random()<0.1){this.polyp.tentacles.push({length:0,angle:Math.random()*Math.PI*2})}}this.polyp.tentacles.forEach(t=>{if(t.length<5){t.length+=growthRate*3*deltaTime}});if(this.growth>=1){this.maturity=Math.min(1,this.maturity+growthRate*deltaTime)}const openness=Math.cos(timeOfDay*Math.PI*2)*0.5+0.5;const sway=Math.sin(Date.now()/1000+this.swayOffset)*currentStrength/100*5;this.currentSway=sway;if(Math.random()<0.01*openness&&this.maturity>0.5){createParticle(this.position.x,this.position.y-this.baseHeight,'plankton')}}draw(ctx){const{x,y}=this.position;ctx.save();ctx.translate(x,y);ctx.rotate(this.currentSway*0.1);ctx.beginPath();ctx.moveTo(0,0);ctx.lineTo(Math.sin(this.currentSway*0.2)*5,-this.baseHeight);ctx.strokeStyle=this.color;ctx.lineWidth=3;ctx.stroke();this.tentacles.forEach(t=>{ctx.save();ctx.rotate(t.angle+this.currentSway*0.2);ctx.beginPath();ctx.moveTo(0,-this.baseHeight*0.7);ctx.lineTo(Math.sin(this.currentSway*0.3)*3,-this.baseHeight*0.7-t.length);ctx.strokeStyle=this.color;ctx.lineWidth=2;ctx.stroke();ctx.restore()});if(this.polyp.size>0){ctx.save();ctx.translate(Math.sin(this.currentSway*0.2)*5,-this.baseHeight);this.polyp.tentacles.forEach(t=>{ctx.save();ctx.rotate(t.angle+this.currentSway*0.3);ctx.beginPath();ctx.moveTo(0,0);ctx.lineTo(Math.sin(this.currentSway*0.4)*2,-t.length);ctx.strokeStyle=this.glowColor;ctx.lineWidth=1;ctx.stroke();ctx.restore()});ctx.beginPath();ctx.arc(0,0,this.polyp.size/3,0,Math.PI*2);ctx.fillStyle=this.glowColor;ctx.fill();ctx.restore()}ctx.restore()}}class Particle{constructor(x,y,type){this.x=x;this.y=y;this.type=type;this.vx=(Math.random()-0.5)*2;this.vy=-Math.random()*2;this.life=1;this.size=type==='larvae'?3:1}update(){this.x+=this.vx+Math.sin(Date.now()/1000)*0.5;this.y+=this.vy;this.vy+=0.02;this.life-=0.01;return this.life>0}draw(ctx){ctx.beginPath();ctx.arc(this.x,this.y,this.size,0,Math.PI*2);ctx.fillStyle=this.type==='larvae'?'rgba(255,220,150,'+this.life+')':'rgba(255,255,255,'+this.life+')';ctx.fill()}}function createParticle(x,y,type){particles.push(new Particle(x,y,type))}function init(){for(let i=0;i<36;i++){const cell=document.createElement('div');cell.className='cell';cell.addEventListener('click',()=>handleCellClick(i));grid.appendChild(cell)}animate()}function handleCellClick(index){if(!cells[index]){const cell=grid.children[index];cells[index]=new Coral(cell)}}function animate(){const timeOfDay=timeSlider.value/100;const currentStrength=currentSlider.value;document.body.style.background=`rgb(${4+timeOfDay*20},${38+timeOfDay*20},${77+timeOfDay*20})`;ctx.clearRect(0,0,width,height);const now=Date.now();const deltaTime=1/60;cells.forEach((coral,i)=>{if(coral){coral.update(deltaTime,timeOfDay,currentStrength);coral.draw(ctx)}});particles.forEach((particle,i)=>{if(!particle.update()){particles.splice(i,1)}else{particle.draw(ctx)}});if(timeOfDay>0.4&&timeOfDay<0.6){for(let i=0;i<3;i++){const x=Math.random()*width;ctx.beginPath();ctx.moveTo(x,0);ctx.lineTo(x+100,height);ctx.strokeStyle='rgba(255,255,255,0.1)';ctx.stroke()}}requestAnimationFrame(animate)}window.addEventListener('resize',()=>{width=canvas.width=window.innerWidth;height=canvas.height=window.innerHeight});init();</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:41:25.015000Z",
      "updated_at": "2025-02-08T13:41:25.015000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "0992fc91-26a8-409c-8ca8-1fd124947926",
          "completion_id": "cc6197d8-80cf-47d3-8559-91a32987bffa",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:41:25.015000Z",
          "updated_at": "2025-02-08T13:41:25.015000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    }
  ],
  "ground_truths": [
    {
      "id": "a69de40a-331d-40b2-a37b-51ae539371e9",
      "validator_task_id": "a99612f2-dd85-4dcd-b3f1-efaee88d72bf",
      "obfuscated_model_id": "3ff4756e-233c-4a23-9aa1-f8bd01ec220f",
      "real_model_id": "3ff4756e-233c-4a23-9aa1-f8bd01ec220f",
      "rank_id": 0,
      "ground_truth_score": 0.0,
      "created_at": "2025-02-08T13:41:25.015000Z",
      "updated_at": "2025-02-08T13:41:25.015000Z",
      "validator_task_relation": null
    },
    {
      "id": "4a492434-ec0d-45d4-8e9c-4b88ba88fa9d",
      "validator_task_id": "a99612f2-dd85-4dcd-b3f1-efaee88d72bf",
      "obfuscated_model_id": "603c4a27-d3d6-4681-a7b2-c3673837f610",
      "real_model_id": "603c4a27-d3d6-4681-a7b2-c3673837f610",
      "rank_id": 1,
      "ground_truth_score": 1.0,
      "created_at": "2025-02-08T13:41:25.015000Z",
      "updated_at": "2025-02-08T13:41:25.015000Z",
      "validator_task_relation": null
    },
    {
      "id": "a591a018-f6f9-4c2c-8fc3-f3cbe9c319d6",
      "validator_task_id": "a99612f2-dd85-4dcd-b3f1-efaee88d72bf",
      "obfuscated_model_id": "5f257537-9d91-49ae-8724-3e710dac0fef",
      "real_model_id": "5f257537-9d91-49ae-8724-3e710dac0fef",
      "rank_id": 2,
      "ground_truth_score": 2.0,
      "created_at": "2025-02-08T13:41:25.015000Z",
      "updated_at": "2025-02-08T13:41:25.015000Z",
      "validator_task_relation": null
    },
    {
      "id": "ecb1d7c1-0159-4507-afed-d294ebdfef8a",
      "validator_task_id": "a99612f2-dd85-4dcd-b3f1-efaee88d72bf",
      "obfuscated_model_id": "40142db7-1e1d-4e29-bd78-bf26e1fa7972",
      "real_model_id": "40142db7-1e1d-4e29-bd78-bf26e1fa7972",
      "rank_id": 3,
      "ground_truth_score": 3.0,
      "created_at": "2025-02-08T13:41:25.015000Z",
      "updated_at": "2025-02-08T13:41:25.015000Z",
      "validator_task_relation": null
    }
  ],
  "miner_responses": [
    {
      "id": "e0f10bfe-a27f-4582-95a7-1bc810c66dd3",
      "validator_task_id": "a99612f2-dd85-4dcd-b3f1-efaee88d72bf",
      "dojo_task_id": "a55af4e7-7908-4d2b-8a70-7681ba52969a",
      "hotkey": "5HBm7gmcyrqjCpyFwMBM6HzZrNmM3JBHKJHW2HsDUvwNFJUS",
      "coldkey": "5HU3tezTitX4gq5emvpbspqFzzV9dfuR2BEkx3SG4Zf1ucym",
      "task_result": "{}",
      "created_at": "2025-02-08T13:41:25.015000Z",
      "updated_at": "2025-02-08T13:41:25.015000Z",
      "validator_task_relation": null,
      "scores": []
    },
    {
      "id": "b5ce9134-7ef3-4e44-9f1a-d28ed4ff0c3c",
      "validator_task_id": "a99612f2-dd85-4dcd-b3f1-efaee88d72bf",
      "dojo_task_id": "c86afb3a-9229-47ef-a007-45727a84d020",
      "hotkey": "5DyMoTsYaP1cjoYahSHtGKmwu6bRva6XJ3ha6i1uMpm5oSS2",
      "coldkey": "5D8ARXP7kza9qrdNgGtXgMHTf6SxsLLeVjE8cf3C4FAhEpNe",
      "task_result": "{}",
      "created_at": "2025-02-08T13:41:25.015000Z",
      "updated_at": "2025-02-08T13:41:25.015000Z",
      "validator_task_relation": null,
      "scores": []
    }
  ],
  "created_at": "2025-02-08T13:41:25.015000+00:00",
  "metadata": null
}
{
  "validator_task_id": "f9204589-9e3f-4b2c-b64a-c8ec3554f0ef",
  "validator_hotkey": "5DWuP51n8GYLRrYfmyEgKxRgeNGiXLN7mBdLvyeqTeKgBnXb",
  "completions": [
    {
      "id": "befc9f86-f05f-4ee2-98e1-ee70967f900b",
      "completion_id": "41dee05a-9b2e-4c45-a448-044a38f91c01",
      "validator_task_id": "f9204589-9e3f-4b2c-b64a-c8ec3554f0ef",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width,initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Project Pipeline</title><style>body,html{margin:0;padding:0;height:100%;overflow:hidden;font-family:Arial,sans-serif;background:#E0E0E0}#gameContainer{position:relative;width:100vmin;height:75vmin;margin:auto}#gameCanvas{position:absolute;top:0;left:0;width:100%;height:100%;background:#F0F0F0}#gameOver{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);background:rgba(255,255,255,0.95);padding:20px;border-radius:10px;text-align:center;display:none;flex-direction:column;align-items:center;box-shadow:0 0 20px rgba(0,0,0,0.1)}#restartButton{margin-top:20px;padding:10px 20px;font-size:16px;background:#4A90E2;color:white;border:none;border-radius:5px;cursor:pointer}#restartButton:hover{background:#357ABD}#controls{position:absolute;bottom:10px;left:50%;transform:translateX(-50%);color:#666;font-size:14px;text-align:center}</style></head><body><div id=\\\"gameContainer\\\"><canvas id=\\\"gameCanvas\\\"></canvas><div id=\\\"gameOver\\\"><h2>Game Over</h2><p>Team morale has dropped to zero!</p><button id=\\\"restartButton\\\">Try Again</button></div><div id=\\\"controls\\\">\\u2191/\\u2193 - Move Tasks | SPACE - Mentor Mode</div></div><script src=\\\"index.js\\\"></script><script>const canvas=document.getElementById('gameCanvas');const ctx=canvas.getContext('2d');const LANE_HEIGHT=150;const CARD_WIDTH=80;const CARD_HEIGHT=100;const GAME_WIDTH=800;const GAME_HEIGHT=600;let scale=1;function resizeCanvas(){const container=document.getElementById('gameContainer');const containerWidth=container.clientWidth;const containerHeight=container.clientHeight;scale=Math.min(containerWidth/GAME_WIDTH,containerHeight/GAME_HEIGHT);canvas.width=GAME_WIDTH*scale;canvas.height=GAME_HEIGHT*scale;ctx.scale(scale,scale);}window.addEventListener('resize',resizeCanvas);resizeCanvas();class Task{constructor(){this.x=0;this.y=LANE_HEIGHT+LANE_HEIGHT/2;this.width=CARD_WIDTH;this.height=CARD_HEIGHT;this.lane=1;this.speed=2+Math.random()*2;this.priority=Math.floor(Math.random()*3);this.colors=['#4A90E2','#50C878','#FFB347'];this.color=this.colors[this.priority];}update(){this.x+=this.speed;}draw(){ctx.fillStyle=this.color;ctx.fillRect(this.x,this.y-this.height/2,this.width,this.height);ctx.strokeStyle='#FFFFFF';ctx.strokeRect(this.x,this.y-this.height/2,this.width,this.height);ctx.fillStyle='#FFFFFF';ctx.font='20px Arial';ctx.fillText('Task',this.x+10,this.y);}}class Blocker{constructor(lane){this.x=GAME_WIDTH;this.y=lane*LANE_HEIGHT+LANE_HEIGHT/2;this.width=40;this.height=40;this.lane=lane;}update(){this.x-=1;}draw(){ctx.fillStyle='#FF4444';ctx.beginPath();ctx.moveTo(this.x,this.y-this.height/2);ctx.lineTo(this.x+this.width,this.y);ctx.lineTo(this.x,this.y+this.height/2);ctx.closePath();ctx.fill();}}class Game{constructor(){this.tasks=[];this.blockers=[];this.score=0;this.multiplier=1;this.morale=100;this.mentorCooldown=0;this.lastTaskTime=0;this.lastBlockerTime=0;this.gameOver=false;}spawnTask(){if(Date.now()-this.lastTaskTime>2000){this.tasks.push(new Task());this.lastTaskTime=Date.now();}}spawnBlocker(){if(Date.now()-this.lastBlockerTime>3000){const lane=Math.floor(Math.random()*3);this.blockers.push(new Blocker(lane));this.lastBlockerTime=Date.now();}}checkCollisions(){this.tasks.forEach(task=>{this.blockers.forEach(blocker=>{if(task.lane===blocker.lane&&Math.abs(task.x-blocker.x)<40){this.morale-=10;this.multiplier=1;this.tasks=this.tasks.filter(t=>t!==task);}});if(task.x>GAME_WIDTH-100){this.score+=100*this.multiplier;this.multiplier+=0.1;this.tasks=this.tasks.filter(t=>t!==task);}});}drawBackground(){ctx.fillStyle='#F0F0F0';ctx.fillRect(0,0,GAME_WIDTH,GAME_HEIGHT);for(let i=0;i<3;i++){ctx.fillStyle=i%2===0?'#E8E8E8':'#F8F8F8';ctx.fillRect(0,i*LANE_HEIGHT,GAME_WIDTH,LANE_HEIGHT);}ctx.strokeStyle='#CCCCCC';ctx.setLineDash([5,5]);for(let i=1;i<3;i++){ctx.beginPath();ctx.moveTo(0,i*LANE_HEIGHT);ctx.lineTo(GAME_WIDTH,i*LANE_HEIGHT);ctx.stroke();}ctx.setLineDash([]);}drawHUD(){ctx.fillStyle='#333333';ctx.font='20px Arial';ctx.fillText(`Score: ${Math.floor(this.score)}`,GAME_WIDTH-150,30);ctx.fillText(`Multiplier: x${this.multiplier.toFixed(1)}`,GAME_WIDTH-150,60);ctx.fillStyle='#4A90E2';ctx.fillRect(10,10,200*(this.morale/100),20);ctx.strokeStyle='#333333';ctx.strokeRect(10,10,200,20);if(this.mentorCooldown>0){ctx.fillStyle='#333333';ctx.fillText(`Mentor: ${Math.ceil(this.mentorCooldown/60)}s`,10,60);}}update(){if(!this.gameOver){this.spawnTask();this.spawnBlocker();this.tasks.forEach(task=>task.update());this.blockers=this.blockers.filter(blocker=>{blocker.update();return blocker.x>-50;});this.checkCollisions();if(this.mentorCooldown>0)this.mentorCooldown--;let laneCounts=[0,0,0];this.tasks.forEach(task=>laneCounts[task.lane]++);laneCounts.forEach(count=>{if(count>5)this.morale-=0.1;});if(this.morale<=0){this.gameOver=true;document.getElementById('gameOver').style.display='flex';}}}draw(){this.drawBackground();this.tasks.forEach(task=>task.draw());this.blockers.forEach(blocker=>blocker.draw());this.drawHUD();}}const game=new Game();function gameLoop(){game.update();game.draw();requestAnimationFrame(gameLoop);}document.addEventListener('keydown',e=>{if(!game.gameOver){if(e.code==='ArrowUp'||e.code==='ArrowDown'){e.preventDefault();game.tasks.forEach(task=>{if(task.x<GAME_WIDTH/4){if(e.code==='ArrowUp'&&task.lane>0){task.lane--;task.y-=LANE_HEIGHT;}if(e.code==='ArrowDown'&&task.lane<2){task.lane++;task.y+=LANE_HEIGHT;}}})}if(e.code==='Space'&&game.mentorCooldown===0){e.preventDefault();game.mentorCooldown=1200;game.tasks.forEach(task=>task.speed*=2);setTimeout(()=>game.tasks.forEach(task=>task.speed/=2),3000);game.blockers=[];}}});document.getElementById('restartButton').addEventListener('click',()=>{game.tasks=[];game.blockers=[];game.score=0;game.multiplier=1;game.morale=100;game.mentorCooldown=0;game.gameOver=false;document.getElementById('gameOver').style.display='none';});gameLoop();</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:40:20.315000Z",
      "updated_at": "2025-02-08T13:40:20.315000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "d5a66545-0cad-4c28-ba6f-b1550ee1f1ad",
          "completion_id": "befc9f86-f05f-4ee2-98e1-ee70967f900b",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:40:20.315000Z",
          "updated_at": "2025-02-08T13:40:20.315000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    },
    {
      "id": "236fe0e2-4b33-464c-966f-bc7594f2a044",
      "completion_id": "2def7a7c-587b-45b4-83eb-0b90bb6813d9",
      "validator_task_id": "f9204589-9e3f-4b2c-b64a-c8ec3554f0ef",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width,initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Project Pipeline</title><style>body,html{margin:0;padding:0;height:100%;overflow:hidden;font-family:'Segoe UI',Arial,sans-serif;background:#E8E8E8}#gameContainer{position:relative;width:100vmin;height:100vmin;margin:auto;background:#FFF;box-shadow:0 0 20px rgba(0,0,0,0.1)}#gameCanvas{position:absolute;top:0;left:0;width:100%;height:100%}#hud{position:absolute;top:10px;left:10px;right:10px;display:flex;justify-content:space-between;align-items:center;padding:10px;font-size:18px;color:#333}#moraleContainer{flex:1;height:20px;background:#DDD;border-radius:10px;margin-right:20px;overflow:hidden}#moraleBar{height:100%;width:100%;background:#4CAF50;transition:width 0.3s,background-color 0.3s}#scoreContainer{display:flex;align-items:center;gap:10px}#multiplier{color:#4A90E2;font-weight:bold}#mentorCooldown{color:#666;font-size:14px}#gameOver{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);background:rgba(255,255,255,0.95);padding:30px;border-radius:10px;text-align:center;display:none;flex-direction:column;align-items:center;box-shadow:0 0 20px rgba(0,0,0,0.2)}#tryAgain{margin-top:20px;padding:10px 20px;font-size:18px;background:#4A90E2;color:white;border:none;border-radius:5px;cursor:pointer;transition:background 0.3s}#tryAgain:hover{background:#357ABD}#controls{position:absolute;bottom:10px;left:50%;transform:translateX(-50%);color:#666;font-size:14px;text-align:center}</style></head><body><div id=\\\"gameContainer\\\"><canvas id=\\\"gameCanvas\\\"></canvas><div id=\\\"hud\\\"><div id=\\\"moraleContainer\\\"><div id=\\\"moraleBar\\\"></div></div><div id=\\\"scoreContainer\\\"><span id=\\\"score\\\">Score: 0</span><span id=\\\"multiplier\\\">\\u00d71.0</span></div><span id=\\\"mentorCooldown\\\">Mentor Ready</span></div><div id=\\\"gameOver\\\"><h2>Project Deadline Missed!</h2><p>Final Score: <span id=\\\"finalScore\\\">0</span></p><button id=\\\"tryAgain\\\">Try Again</button></div><div id=\\\"controls\\\">\\u2191/\\u2193 - Move Tasks | SPACE - Activate Mentor Mode</div></div><script src=\\\"index.js\\\"></script><script>const canvas=document.getElementById('gameCanvas');const ctx=canvas.getContext('2d');const moraleBar=document.getElementById('moraleBar');const scoreElement=document.getElementById('score');const multiplierElement=document.getElementById('multiplier');const gameOverScreen=document.getElementById('gameOver');const finalScoreElement=document.getElementById('finalScore');const tryAgainButton=document.getElementById('tryAgain');const mentorCooldownElement=document.getElementById('mentorCooldown');let canvasWidth=800;let canvasHeight=800;let scale=1;function resizeCanvas(){const container=document.getElementById('gameContainer');const containerWidth=container.clientWidth;const containerHeight=container.clientHeight;scale=Math.min(containerWidth/canvasWidth,containerHeight/canvasHeight);canvas.width=canvasWidth*scale;canvas.height=canvasHeight*scale;ctx.scale(scale,scale);}window.addEventListener('resize',resizeCanvas);resizeCanvas();const LANE_HEIGHT=canvasHeight/3;const TASK_WIDTH=60;const TASK_HEIGHT=40;const TASK_COLORS=['#4A90E2','#50C878','#FFB347'];const COMPLETION_ZONE_WIDTH=100;class Task{constructor(){this.x=0;this.y=LANE_HEIGHT/2+Math.floor(Math.random()*3)*LANE_HEIGHT;this.lane=Math.floor(this.y/LANE_HEIGHT);this.width=TASK_WIDTH;this.height=TASK_HEIGHT;this.speed=2+Math.random()*2;this.color=TASK_COLORS[Math.floor(Math.random()*TASK_COLORS.length)];this.trail=[];}update(){this.trail.push({x:this.x,y:this.y});if(this.trail.length>10)this.trail.shift();this.x+=this.speed;}draw(){this.trail.forEach((pos,i)=>{ctx.fillStyle=`${this.color}${Math.floor(i/this.trail.length*99).toString(16)}`;ctx.fillRect(pos.x,pos.y-this.height/2,this.width,this.height);});ctx.fillStyle=this.color;ctx.fillRect(this.x,this.y-this.height/2,this.width,this.height);ctx.strokeStyle='#FFFFFF';ctx.strokeRect(this.x,this.y-this.height/2,this.width,this.height);ctx.fillStyle='#FFFFFF';ctx.fillRect(this.x+10,this.y-this.height/4,this.width-20,2);ctx.fillRect(this.x+10,this.y,this.width-20,2);}}class Blocker{constructor(lane){this.x=Math.random()*(canvasWidth-400)+200;this.lane=lane;this.y=LANE_HEIGHT/2+lane*LANE_HEIGHT;this.width=30;this.height=30;this.warning=true;this.warningTime=60;}update(){if(this.warning){this.warningTime--;if(this.warningTime<=0)this.warning=false;}}draw(){if(this.warning){ctx.fillStyle=`rgba(255,0,0,${0.3+Math.sin(Date.now()/200)*0.2})`;ctx.beginPath();ctx.moveTo(this.x,this.y-20);ctx.lineTo(this.x+20,this.y+10);ctx.lineTo(this.x-20,this.y+10);ctx.closePath();ctx.fill();}else{ctx.fillStyle='#FF0000';ctx.beginPath();ctx.arc(this.x,this.y,15,0,Math.PI*2);ctx.fill();}}}class PowerUp{constructor(){this.x=Math.random()*(canvasWidth-400)+200;this.lane=Math.floor(Math.random()*3);this.y=LANE_HEIGHT/2+this.lane*LANE_HEIGHT;this.width=30;this.height=30;this.rotation=0;}update(){this.rotation+=0.05;}draw(){ctx.save();ctx.translate(this.x,this.y);ctx.rotate(this.rotation);ctx.fillStyle='#FFD700';ctx.beginPath();for(let i=0;i<5;i++){ctx.lineTo(Math.cos((i*4*Math.PI)/5)*15,Math.sin((i*4*Math.PI)/5)*15);ctx.lineTo(Math.cos((i*4*Math.PI)/5+Math.PI/5)*7,Math.sin((i*4*Math.PI)/5+Math.PI/5)*7);}ctx.closePath();ctx.fill();ctx.restore();}}class Game{constructor(){this.tasks=[];this.blockers=[];this.powerUps=[];this.score=0;this.multiplier=1;this.morale=100;this.lastTaskTime=0;this.lastBlockerTime=0;this.lastPowerUpTime=0;this.mentorCooldown=0;this.gameOver=false;}spawnTask(){if(Date.now()-this.lastTaskTime>2000&&this.tasks.length<10){this.tasks.push(new Task());this.lastTaskTime=Date.now();}}spawnBlocker(){if(Date.now()-this.lastBlockerTime>5000){for(let i=0;i<3;i++){if(Math.random()<0.3){this.blockers.push(new Blocker(i));}}this.lastBlockerTime=Date.now();}}spawnPowerUp(){if(Date.now()-this.lastPowerUpTime>10000){this.powerUps.push(new PowerUp());this.lastPowerUpTime=Date.now();}}checkCollisions(){this.tasks.forEach(task=>{this.blockers.forEach(blocker=>{if(!blocker.warning&&task.lane===blocker.lane&&Math.abs(task.x-blocker.x)<20){this.morale-=10;this.multiplier=1;this.tasks=this.tasks.filter(t=>t!==task);}});this.powerUps.forEach(powerUp=>{if(task.lane===powerUp.lane&&Math.abs(task.x-powerUp.x)<20){this.activateMentorMode(task.lane);this.powerUps=this.powerUps.filter(p=>p!==powerUp);}});});}activateMentorMode(lane){if(this.mentorCooldown===0){this.tasks.forEach(task=>{if(task.lane===lane)task.speed*=2;});this.blockers=this.blockers.filter(b=>b.lane!==lane);this.mentorCooldown=1200;}}checkLaneOvercrowding(){const laneCounts=[0,0,0];this.tasks.forEach(task=>laneCounts[task.lane]++);laneCounts.forEach(count=>{if(count>4)this.morale-=0.1;});}update(){if(!this.gameOver){this.spawnTask();this.spawnBlocker();this.spawnPowerUp();this.tasks.forEach(task=>task.update());this.blockers.forEach(blocker=>blocker.update());this.powerUps.forEach(powerUp=>powerUp.update());this.checkCollisions();this.checkLaneOvercrowding();if(this.mentorCooldown>0)this.mentorCooldown--;this.tasks=this.tasks.filter(task=>{if(task.x>canvasWidth-COMPLETION_ZONE_WIDTH){this.score+=100*this.multiplier;this.multiplier+=0.1;this.morale=Math.min(100,this.morale+5);return false;}return task.x<canvasWidth;});if(this.morale<=0)this.endGame();}}draw(){ctx.fillStyle='#F0F0F0';ctx.fillRect(0,0,canvasWidth,canvasHeight);for(let i=0;i<3;i++){ctx.fillStyle=i%2===0?'#FFFFFF':'#F8F8F8';ctx.fillRect(0,i*LANE_HEIGHT,canvasWidth,LANE_HEIGHT);ctx.strokeStyle='#E0E0E0';ctx.setLineDash([5,5]);ctx.beginPath();ctx.moveTo(0,(i+1)*LANE_HEIGHT);ctx.lineTo(canvasWidth,(i+1)*LANE_HEIGHT);ctx.stroke();ctx.setLineDash([]);}ctx.fillStyle='rgba(0,255,0,0.1)';ctx.fillRect(canvasWidth-COMPLETION_ZONE_WIDTH,0,COMPLETION_ZONE_WIDTH,canvasHeight);ctx.strokeStyle='#00FF00';ctx.setLineDash([5,5]);ctx.strokeRect(canvasWidth-COMPLETION_ZONE_WIDTH,0,COMPLETION_ZONE_WIDTH,canvasHeight);ctx.setLineDash([]);this.tasks.forEach(task=>task.draw());this.blockers.forEach(blocker=>blocker.draw());this.powerUps.forEach(powerUp=>powerUp.draw());}endGame(){this.gameOver=true;finalScoreElement.textContent=Math.floor(this.score);gameOverScreen.style.display='flex';}reset(){this.tasks=[];this.blockers=[];this.powerUps=[];this.score=0;this.multiplier=1;this.morale=100;this.lastTaskTime=0;this.lastBlockerTime=0;this.lastPowerUpTime=0;this.mentorCooldown=0;this.gameOver=false;gameOverScreen.style.display='none';}}const game=new Game;function gameLoop(){game.update();game.draw();moraleBar.style.width=`${game.morale}%`;moraleBar.style.backgroundColor=`hsl(${game.morale},70%,50%)`;scoreElement.textContent=`Score: ${Math.floor(game.score)}`;multiplierElement.textContent=`\\u00d7${game.multiplier.toFixed(1)}`;mentorCooldownElement.textContent=game.mentorCooldown>0?`Mentor: ${Math.ceil(game.mentorCooldown/60)}s`:'Mentor Ready';requestAnimationFrame(gameLoop);}document.addEventListener('keydown',e=>{if(['ArrowUp','ArrowDown','Space'].includes(e.code)){e.preventDefault();if(e.code==='ArrowUp'){game.tasks.forEach(task=>{if(task.lane>0){task.lane--;task.y-=LANE_HEIGHT;}});}else if(e.code==='ArrowDown'){game.tasks.forEach(task=>{if(task.lane<2){task.lane++;task.y+=LANE_HEIGHT;}});}else if(e.code==='Space'){game.activateMentorMode(Math.floor(game.tasks[0]?.lane||0));}}});tryAgainButton.addEventListener('click',()=>{game.reset();});gameLoop();</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:40:20.315000Z",
      "updated_at": "2025-02-08T13:40:20.315000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "46b975be-5c58-4120-8818-4700ddf19002",
          "completion_id": "236fe0e2-4b33-464c-966f-bc7594f2a044",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:40:20.315000Z",
          "updated_at": "2025-02-08T13:40:20.315000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    },
    {
      "id": "f596bd2f-bbb8-4d02-ad2f-500031bfb5e1",
      "completion_id": "264b6423-1b8d-46a8-91b3-27a3d22290a8",
      "validator_task_id": "f9204589-9e3f-4b2c-b64a-c8ec3554f0ef",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width,initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Project Pipeline</title><style>body,html{margin:0;padding:0;height:100%;overflow:hidden;font-family:Arial,sans-serif;background:#f0f0f0}#gameContainer{position:relative;width:100vmin;height:100vmin;margin:auto}#gameCanvas{position:absolute;top:0;left:0;width:100%;height:100%;box-shadow:0 0 10px rgba(0,0,0,0.1)}#gameOver{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);background:rgba(255,255,255,0.95);padding:20px;border-radius:10px;text-align:center;display:none;flex-direction:column;align-items:center;box-shadow:0 0 20px rgba(0,0,0,0.2)}#finalScore{font-size:24px;color:#2196F3;margin:10px 0}#playAgain{margin-top:20px;padding:10px 20px;font-size:18px;background:#2196F3;color:white;border:none;border-radius:5px;cursor:pointer;transition:background 0.3s}#playAgain:hover{background:#1976D2}#controls{position:absolute;bottom:10px;left:50%;transform:translateX(-50%);color:#666;font-size:14px;text-align:center}</style></head><body><div id=\\\"gameContainer\\\"><canvas id=\\\"gameCanvas\\\"></canvas><div id=\\\"gameOver\\\"><h2>Project Deadline Missed!</h2><p>Final Score: <span id=\\\"finalScore\\\">0</span></p><button id=\\\"playAgain\\\">Try Again</button></div><div id=\\\"controls\\\">\\u2191/\\u2193 - Move Tasks | SPACE - Mentor Mode | 1,2,3 - Assign Team Members</div></div><script src=\\\"index.js\\\"></script><script>const canvas=document.getElementById(\\\"gameCanvas\\\"),ctx=canvas.getContext(\\\"2d\\\");let canvasWidth=800,canvasHeight=800,scale=1;function resizeCanvas(){const e=document.getElementById(\\\"gameContainer\\\"),t=e.clientWidth,n=e.clientHeight;scale=Math.min(t/canvasWidth,n/canvasHeight),canvas.width=canvasWidth*scale,canvas.height=canvasHeight*scale,ctx.scale(scale,scale)}window.addEventListener(\\\"resize\\\",resizeCanvas),resizeCanvas();const LANE_HEIGHT=canvasHeight/3,TASK_WIDTH=60,TASK_HEIGHT=40,TEAM_MEMBER_SIZE=30,COMPLETION_ZONE_WIDTH=100;class Task{constructor(e){this.x=0,this.y=LANE_HEIGHT*e+LANE_HEIGHT/2-TASK_HEIGHT/2,this.width=TASK_WIDTH,this.height=TASK_HEIGHT,this.lane=e,this.speed=2+Math.random(),this.priority=Math.floor(3*Math.random()),this.color=[\\\"#4CAF50\\\",\\\"#FFC107\\\",\\\"#F44336\\\"][this.priority],this.trail=[]}update(){this.x+=this.speed,this.trail.unshift({x:this.x,y:this.y}),this.trail.length>10&&this.trail.pop()}draw(){ctx.fillStyle=this.color,this.trail.forEach((e,t)=>{ctx.globalAlpha=(10-t)/20,ctx.fillRect(e.x,e.y,this.width,this.height)}),ctx.globalAlpha=1,ctx.fillRect(this.x,this.y,this.width,this.height),ctx.strokeStyle=\\\"#fff\\\",ctx.strokeRect(this.x,this.y,this.width,this.height),ctx.fillStyle=\\\"#fff\\\",ctx.font=\\\"20px Arial\\\",ctx.fillText(\\\"\\ud83d\\udcc4\\\",this.x+this.width/4,this.y+this.height/1.5)}}class Blocker{constructor(e){this.x=canvasWidth*(.3+.4*Math.random()),this.y=LANE_HEIGHT*e+LANE_HEIGHT/2-TASK_HEIGHT/2,this.width=40,this.height=40,this.lane=e}draw(){ctx.fillStyle=\\\"#FF0000\\\",ctx.beginPath(),ctx.moveTo(this.x+this.width/2,this.y),ctx.lineTo(this.x+this.width,this.y+this.height),ctx.lineTo(this.x,this.y+this.height),ctx.closePath(),ctx.fill(),ctx.fillStyle=\\\"#fff\\\",ctx.font=\\\"20px Arial\\\",ctx.fillText(\\\"\\u26a0\\ufe0f\\\",this.x+5,this.y+30)}}class TeamMember{constructor(e){this.lane=e,this.x=50,this.y=LANE_HEIGHT*e+LANE_HEIGHT/2}draw(){ctx.fillStyle=\\\"#2196F3\\\",ctx.beginPath(),ctx.arc(this.x,this.y,TEAM_MEMBER_SIZE/2,0,2*Math.PI),ctx.fill(),ctx.fillStyle=\\\"#fff\\\",ctx.font=\\\"20px Arial\\\",ctx.fillText(\\\"\\ud83d\\udc64\\\",this.x-10,this.y+7)}}class Game{constructor(){this.tasks=[],this.blockers=[],this.teamMembers=[new TeamMember(0),new TeamMember(1),new TeamMember(2)],this.score=0,this.multiplier=1,this.morale=100,this.lastTaskTime=0,this.lastBlockerTime=0,this.mentorModeActive=!1,this.mentorModeCooldown=0,this.gameOver=!1}spawnTask(){Date.now()-this.lastTaskTime>2e3&&(this.tasks.push(new Task(Math.floor(3*Math.random()))),this.lastTaskTime=Date.now())}spawnBlocker(){Date.now()-this.lastBlockerTime>3e3&&(this.blockers.push(new Blocker(Math.floor(3*Math.random()))),this.lastBlockerTime=Date.now())}moveTask(e,t){const n=this.tasks.find(t=>t.lane===e);n&&(n.lane=t,n.y=LANE_HEIGHT*t+LANE_HEIGHT/2-TASK_HEIGHT/2)}moveTeamMember(e,t){const n=this.teamMembers.find(t=>t.lane===e);n&&(n.lane=t,n.y=LANE_HEIGHT*t+LANE_HEIGHT/2)}activateMentorMode(){0===this.mentorModeCooldown&&(this.mentorModeActive=!0,setTimeout(()=>{this.mentorModeActive=!1},5e3),this.mentorModeCooldown=1200)}checkCollisions(){this.tasks.forEach(e=>{this.blockers.forEach(t=>{t.lane===e.lane&&Math.abs(e.x-t.x)<TASK_WIDTH&&(this.morale-=10,this.multiplier=1,this.tasks=this.tasks.filter(t=>t!==e))})})}update(){if(!this.gameOver){this.spawnTask(),this.spawnBlocker(),this.mentorModeCooldown>0&&this.mentorModeCooldown--,this.checkCollisions();const e={};this.tasks.forEach(t=>{e[t.lane]=(e[t.lane]||0)+1,e[t.lane]>5&&(this.morale-=.1)}),this.tasks.forEach(e=>{e.update(),this.mentorModeActive&&(e.speed*=1.5),e.x>canvasWidth-COMPLETION_ZONE_WIDTH&&(this.score+=100*this.multiplier,this.morale=Math.min(100,this.morale+5),this.multiplier+=.1,this.tasks=this.tasks.filter(t=>t!==e))}),this.morale<=0&&this.endGame()}}drawBackground(){ctx.fillStyle=\\\"#F5F5F5\\\",ctx.fillRect(0,0,canvasWidth,canvasHeight);for(let e=1;e<3;e++){const t=e*LANE_HEIGHT;ctx.strokeStyle=\\\"#E0E0E0\\\",ctx.beginPath(),ctx.moveTo(0,t),ctx.lineTo(canvasWidth,t),ctx.stroke()}ctx.strokeStyle=\\\"#90CAF9\\\",ctx.setLineDash([5,5]);for(let e=0;e<3;e++){const t=canvasWidth-COMPLETION_ZONE_WIDTH,n=e*LANE_HEIGHT;ctx.strokeRect(t,n,COMPLETION_ZONE_WIDTH,LANE_HEIGHT)}ctx.setLineDash([])}drawHUD(){ctx.fillStyle=\\\"#2196F3\\\",ctx.fillRect(10,10,200*this.morale/100,20),ctx.strokeStyle=\\\"#1976D2\\\",ctx.strokeRect(10,10,200,20),ctx.fillStyle=\\\"#333\\\",ctx.font=\\\"20px Arial\\\",ctx.fillText(`Score: ${Math.floor(this.score)} (x${this.multiplier.toFixed(1)})`,canvasWidth-200,30),ctx.fillText(this.mentorModeCooldown>0?`Mentor Mode: ${Math.ceil(this.mentorModeCooldown/60)}s`:\\\"Mentor Mode Ready\\\",10,50)}draw(){this.drawBackground(),this.teamMembers.forEach(e=>e.draw()),this.tasks.forEach(e=>e.draw()),this.blockers.forEach(e=>e.draw()),this.drawHUD()}endGame(){this.gameOver=!0,document.getElementById(\\\"finalScore\\\").textContent=Math.floor(this.score),document.getElementById(\\\"gameOver\\\").style.display=\\\"flex\\\"}reset(){this.tasks=[],this.blockers=[],this.teamMembers=[new TeamMember(0),new TeamMember(1),new TeamMember(2)],this.score=0,this.multiplier=1,this.morale=100,this.lastTaskTime=0,this.lastBlockerTime=0,this.mentorModeActive=!1,this.mentorModeCooldown=0,this.gameOver=!1,document.getElementById(\\\"gameOver\\\").style.display=\\\"none\\\"}}const game=new Game;function gameLoop(){game.update(),game.draw(),requestAnimationFrame(gameLoop)}document.addEventListener(\\\"keydown\\\",e=>{if([\\\"ArrowUp\\\",\\\"ArrowDown\\\",\\\"Space\\\",\\\"Digit1\\\",\\\"Digit2\\\",\\\"Digit3\\\"].includes(e.code)&&e.preventDefault(),!game.gameOver)if(\\\"ArrowUp\\\"===e.code){const e=game.tasks.findIndex(e=>e.x<canvasWidth-COMPLETION_ZONE_WIDTH);if(-1!==e){const t=game.tasks[e].lane;t>0&&game.moveTask(t,t-1)}}else if(\\\"ArrowDown\\\"===e.code){const e=game.tasks.findIndex(e=>e.x<canvasWidth-COMPLETION_ZONE_WIDTH);if(-1!==e){const t=game.tasks[e].lane;t<2&&game.moveTask(t,t+1)}}else if(\\\"Space\\\"===e.code)game.activateMentorMode();else if(e.code.startsWith(\\\"Digit\\\")){const t=parseInt(e.code.slice(-1))-1;t>=0&&t<=2&&game.teamMembers.length>0&&game.moveTeamMember(game.teamMembers[0].lane,t)}}),document.getElementById(\\\"playAgain\\\").addEventListener(\\\"click\\\",()=>{game.reset()}),gameLoop();</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:40:20.315000Z",
      "updated_at": "2025-02-08T13:40:20.315000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "a4cbf3e2-d013-46d4-9df9-833d3cabf7e1",
          "completion_id": "f596bd2f-bbb8-4d02-ad2f-500031bfb5e1",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:40:20.315000Z",
          "updated_at": "2025-02-08T13:40:20.315000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    },
    {
      "id": "7bc8c324-8e2e-4f3c-8652-c70e1f2962cc",
      "completion_id": "93e02928-dc5d-4902-aa95-d36321d0a47b",
      "validator_task_id": "f9204589-9e3f-4b2c-b64a-c8ec3554f0ef",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width,initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Hospital Flow</title><style>body,html{margin:0;padding:0;height:100%;overflow:hidden;font-family:'Arial',sans-serif;background:#f0f0f0}#gameContainer{position:relative;width:100vmin;height:100vmin;margin:auto}#gameCanvas{position:absolute;top:0;left:0;width:100%;height:100%}#satisfactionMeter{position:absolute;top:10px;left:10px;width:200px;height:20px;background-color:rgba(255,255,255,0.5);border:2px solid #4A90E2;border-radius:10px;overflow:hidden}#satisfactionFill{width:100%;height:100%;background:linear-gradient(90deg,#4A90E2,#57B8FF);transition:width 0.3s}#score,#multiplier{position:absolute;top:10px;right:10px;color:#4A90E2;font-size:24px;font-weight:bold}#multiplier{top:40px}#specialistCooldown{position:absolute;bottom:10px;left:10px;color:#4A90E2;font-size:18px}#gameOver{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);background:rgba(255,255,255,0.95);padding:20px;border-radius:10px;text-align:center;display:none;flex-direction:column;align-items:center;border:2px solid #4A90E2;box-shadow:0 0 20px rgba(74,144,226,0.2)}#playAgain{margin-top:20px;padding:10px 20px;font-size:18px;background:#4A90E2;color:white;border:none;border-radius:5px;cursor:pointer;transition:background 0.3s}#playAgain:hover{background:#57B8FF}</style></head><body><div id=\\\"gameContainer\\\"><canvas id=\\\"gameCanvas\\\"></canvas><div id=\\\"satisfactionMeter\\\"><div id=\\\"satisfactionFill\\\"></div></div><div id=\\\"score\\\">Score: 0</div><div id=\\\"multiplier\\\">x1.0</div><div id=\\\"specialistCooldown\\\">Specialist Mode: Ready</div><div id=\\\"gameOver\\\"><h2>Hospital Overload!</h2><p>Final Score: <span id=\\\"finalScore\\\">0</span></p><button id=\\\"playAgain\\\">Try Again</button></div></div><script src=\\\"index.js\\\"></script><script>const canvas=document.getElementById('gameCanvas'),ctx=canvas.getContext('2d'),satisfactionMeter=document.getElementById('satisfactionFill'),scoreElement=document.getElementById('score'),multiplierElement=document.getElementById('multiplier'),gameOverScreen=document.getElementById('gameOver'),finalScoreElement=document.getElementById('finalScore'),specialistCooldownElement=document.getElementById('specialistCooldown');let canvasWidth=800,canvasHeight=800,scale=1;function resizeCanvas(){const e=document.getElementById('gameContainer');scale=Math.min(e.clientWidth/canvasWidth,e.clientHeight/canvasHeight),canvas.width=canvasWidth*scale,canvas.height=canvasHeight*scale,ctx.scale(scale,scale)}window.addEventListener('resize',resizeCanvas),resizeCanvas();const LANE_HEIGHT=canvasHeight/3,lanes=[{y:0,patients:[],complications:[]},{y:LANE_HEIGHT,patients:[],complications:[]},{y:2*LANE_HEIGHT,patients:[],complications:[]}];let satisfaction=100,score=0,multiplier=1,gameOver=false,specialistMode=false,specialistTimer=0,lastTime=0;const SPECIALIST_DURATION=5e3,SPECIALIST_COOLDOWN=2e4;class Patient{constructor(e){this.x=0,this.y=e+LANE_HEIGHT/2,this.lane=Math.floor(e/LANE_HEIGHT),this.speed=2+2*Math.random(),this.urgency=Math.floor(3*Math.random()),this.size=30,this.trail=[]}}class Complication{constructor(e){this.x=canvasWidth,this.y=e+LANE_HEIGHT/2,this.lane=Math.floor(e/LANE_HEIGHT),this.size=20}}function createPatient(){const e=Math.floor(3*Math.random())*LANE_HEIGHT;lanes[Math.floor(e/LANE_HEIGHT)].patients.push(new Patient(e))}function createComplication(){const e=Math.floor(3*Math.random())*LANE_HEIGHT;lanes[Math.floor(e/LANE_HEIGHT)].complications.push(new Complication(e))}function drawPatient(e){const t=['#4A90E2','#F5A623','#D0021B'][e.urgency];ctx.fillStyle=t,ctx.beginPath(),ctx.arc(e.x,e.y,e.size/2,0,2*Math.PI),ctx.fill(),e.trail.forEach((e,n)=>{ctx.fillStyle=`${t}${Math.floor(25.5*(10-n)).toString(16)}`,ctx.beginPath(),ctx.arc(e.x,e.y,15-1.5*n,0,2*Math.PI),ctx.fill()})}function drawComplication(e){ctx.fillStyle='#D0021B',ctx.beginPath(),ctx.moveTo(e.x,e.y-e.size/2),ctx.lineTo(e.x+e.size/2,e.y+e.size/2),ctx.lineTo(e.x-e.size/2,e.y+e.size/2),ctx.closePath(),ctx.fill()}function drawLanes(){ctx.fillStyle='#F5F5F5',ctx.fillRect(0,0,canvasWidth,canvasHeight);for(let e=1;e<3;e++){const t=e*LANE_HEIGHT;ctx.strokeStyle='#E0E0E0',ctx.setLineDash([5,5]),ctx.beginPath(),ctx.moveTo(0,t),ctx.lineTo(canvasWidth,t),ctx.stroke(),ctx.setLineDash([])}ctx.strokeStyle='#4A90E2',ctx.setLineDash([10,10]);for(let e=0;e<3;e++){const t=e*LANE_HEIGHT+LANE_HEIGHT;ctx.beginPath(),ctx.moveTo(canvasWidth-50,t-LANE_HEIGHT),ctx.lineTo(canvasWidth-50,t),ctx.stroke()}ctx.setLineDash([])}function updatePatients(e){lanes.forEach((t,n)=>{t.patients.forEach((t,i)=>{t.trail.unshift({x:t.x,y:t.y}),t.trail.length>10&&t.trail.pop(),t.x+=t.speed*(specialistMode&&n===selectedLane?2:1)*e*60,t.x>canvasWidth-50&&(score+=100*multiplier,createDischargeEffect(t.x,t.y),t.patients.splice(i,1))}),t.complications.forEach((t,n)=>{t.x-=1*e*60,t.x<0&&t.complications.splice(n,1)})})}function checkCollisions(){lanes.forEach(e=>{e.patients.forEach((t,n)=>{e.complications.forEach((e,i)=>{Math.abs(t.x-e.x)<20&&Math.abs(t.y-e.y)<20&&(satisfaction-=10,e.complications.splice(i,1))})})})}function createDischargeEffect(e,t){for(let n=0;n<10;n++){const i={x:e,y:t,dx:2*Math.random()-1,dy:2*Math.random()-1,life:1};particles.push(i)}}function updateParticles(e){particles.forEach((t,n)=>{t.x+=t.dx*e*60,t.y+=t.dy*e*60,t.life-=.02*e*60,t.life<=0&&particles.splice(n,1)})}function drawParticles(){ctx.fillStyle='#4A90E2',particles.forEach(e=>{ctx.globalAlpha=e.life,ctx.beginPath(),ctx.arc(e.x,e.y,3,0,2*Math.PI),ctx.fill()}),ctx.globalAlpha=1}let selectedLane=1,particles=[];function updateGame(e){if(!gameOver){if(updatePatients(e),checkCollisions(),updateParticles(e),Math.random()<.02*e*60&&createPatient(),Math.random()<.01*e*60&&createComplication(),specialistMode?(specialistTimer-=1e3*e,specialistTimer<=0&&(specialistMode=!1,specialistTimer=SPECIALIST_COOLDOWN)):specialistTimer>0&&(specialistTimer-=1e3*e),satisfaction<=0)return void endGame();satisfaction=Math.min(100,satisfaction+.1*e*60),satisfactionMeter.style.width=`${satisfaction}%`,scoreElement.textContent=`Score: ${Math.floor(score)}`,multiplierElement.textContent=`x${multiplier.toFixed(1)}`,specialistMode?specialistCooldownElement.textContent=`Specialist Mode: ${Math.ceil(specialistTimer/1e3)}s`:specialistTimer>0?specialistCooldownElement.textContent=`Cooldown: ${Math.ceil(specialistTimer/1e3)}s`:specialistCooldownElement.textContent='Specialist Mode: Ready'}}function drawGame(){drawLanes(),lanes.forEach(e=>{e.complications.forEach(drawComplication),e.patients.forEach(drawPatient)}),drawParticles()}function gameLoop(e){0===lastTime&&(lastTime=e);const t=(e-lastTime)/1e3;lastTime=e,gameOver||(updateGame(t),drawGame()),requestAnimationFrame(gameLoop)}function startGame(){satisfaction=100,score=0,multiplier=1,gameOver=!1,specialistMode=!1,specialistTimer=0,lastTime=0,selectedLane=1,particles=[],lanes.forEach(e=>{e.patients=[],e.complications=[]}),gameOverScreen.style.display='none',requestAnimationFrame(gameLoop)}function endGame(){gameOver=!0,finalScoreElement.textContent=Math.floor(score),gameOverScreen.style.display='flex'}document.addEventListener('keydown',e=>{if(!gameOver)switch(e.code){case'ArrowUp':selectedLane=Math.max(0,selectedLane-1),e.preventDefault();break;case'ArrowDown':selectedLane=Math.min(2,selectedLane+1),e.preventDefault();break;case'Space':specialistTimer<=0&&(specialistMode=!0,specialistTimer=SPECIALIST_DURATION),e.preventDefault()}}),document.getElementById('playAgain').addEventListener('click',startGame),startGame();</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:40:20.315000Z",
      "updated_at": "2025-02-08T13:40:20.315000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "c61ce0e1-778b-4826-953d-5b47946cef22",
          "completion_id": "7bc8c324-8e2e-4f3c-8652-c70e1f2962cc",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:40:20.315000Z",
          "updated_at": "2025-02-08T13:40:20.315000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    }
  ],
  "ground_truths": [
    {
      "id": "e73837d2-8f15-46bd-a078-ba383e3f3c38",
      "validator_task_id": "f9204589-9e3f-4b2c-b64a-c8ec3554f0ef",
      "obfuscated_model_id": "41dee05a-9b2e-4c45-a448-044a38f91c01",
      "real_model_id": "41dee05a-9b2e-4c45-a448-044a38f91c01",
      "rank_id": 0,
      "ground_truth_score": 0.0,
      "created_at": "2025-02-08T13:40:20.315000Z",
      "updated_at": "2025-02-08T13:40:20.315000Z",
      "validator_task_relation": null
    },
    {
      "id": "d848a7b5-c75a-437b-98dc-52a0b0e32fa2",
      "validator_task_id": "f9204589-9e3f-4b2c-b64a-c8ec3554f0ef",
      "obfuscated_model_id": "2def7a7c-587b-45b4-83eb-0b90bb6813d9",
      "real_model_id": "2def7a7c-587b-45b4-83eb-0b90bb6813d9",
      "rank_id": 1,
      "ground_truth_score": 1.0,
      "created_at": "2025-02-08T13:40:20.315000Z",
      "updated_at": "2025-02-08T13:40:20.315000Z",
      "validator_task_relation": null
    },
    {
      "id": "e11facc8-178d-4499-953f-fce14d2f3972",
      "validator_task_id": "f9204589-9e3f-4b2c-b64a-c8ec3554f0ef",
      "obfuscated_model_id": "264b6423-1b8d-46a8-91b3-27a3d22290a8",
      "real_model_id": "264b6423-1b8d-46a8-91b3-27a3d22290a8",
      "rank_id": 2,
      "ground_truth_score": 2.0,
      "created_at": "2025-02-08T13:40:20.315000Z",
      "updated_at": "2025-02-08T13:40:20.315000Z",
      "validator_task_relation": null
    },
    {
      "id": "999f97fd-0c5a-45cb-b22e-e0169a9817a6",
      "validator_task_id": "f9204589-9e3f-4b2c-b64a-c8ec3554f0ef",
      "obfuscated_model_id": "93e02928-dc5d-4902-aa95-d36321d0a47b",
      "real_model_id": "93e02928-dc5d-4902-aa95-d36321d0a47b",
      "rank_id": 3,
      "ground_truth_score": 3.0,
      "created_at": "2025-02-08T13:40:20.315000Z",
      "updated_at": "2025-02-08T13:40:20.315000Z",
      "validator_task_relation": null
    }
  ],
  "miner_responses": [
    {
      "id": "cdb4e268-4f9a-49c6-9002-338f8b4f19b6",
      "validator_task_id": "f9204589-9e3f-4b2c-b64a-c8ec3554f0ef",
      "dojo_task_id": "119645f2-2510-4860-bc37-f81ea0edb12a",
      "hotkey": "5HBm7gmcyrqjCpyFwMBM6HzZrNmM3JBHKJHW2HsDUvwNFJUS",
      "coldkey": "5HU3tezTitX4gq5emvpbspqFzzV9dfuR2BEkx3SG4Zf1ucym",
      "task_result": "{}",
      "created_at": "2025-02-08T13:40:20.315000Z",
      "updated_at": "2025-02-08T13:40:20.315000Z",
      "validator_task_relation": null,
      "scores": []
    },
    {
      "id": "2ab86517-bbf9-4861-ad53-7b9b4269a718",
      "validator_task_id": "f9204589-9e3f-4b2c-b64a-c8ec3554f0ef",
      "dojo_task_id": "b770c419-aacf-4559-b2e9-56f4d5614e6f",
      "hotkey": "5DyMoTsYaP1cjoYahSHtGKmwu6bRva6XJ3ha6i1uMpm5oSS2",
      "coldkey": "5D8ARXP7kza9qrdNgGtXgMHTf6SxsLLeVjE8cf3C4FAhEpNe",
      "task_result": [
        {
          "id": "f5bff2da-e769-4809-ac55-dc126a4d2970",
          "status": "COMPLETED",
          "worker_id": "aea87a24-1379-4b32-93b8-d12b4e188d36",
          "created_at": "2025-02-08T13:41:18.931000+00:00",
          "updated_at": "2025-02-08T13:41:18.931000+00:00",
          "result_data": [
            {
              "model": "41dee05a-9b2e-4c45-a448-044a38f91c01",
              "criteria": [
                {
                  "max": 100,
                  "min": 1,
                  "type": "score",
                  "value": 78
                }
              ]
            },
            {
              "model": "2def7a7c-587b-45b4-83eb-0b90bb6813d9",
              "criteria": [
                {
                  "max": 100,
                  "min": 1,
                  "type": "score",
                  "value": 89
                }
              ]
            },
            {
              "model": "93e02928-dc5d-4902-aa95-d36321d0a47b",
              "criteria": [
                {
                  "max": 100,
                  "min": 1,
                  "type": "score",
                  "value": 12
                }
              ]
            },
            {
              "model": "264b6423-1b8d-46a8-91b3-27a3d22290a8",
              "criteria": [
                {
                  "max": 100,
                  "min": 1,
                  "type": "score",
                  "value": 23
                }
              ]
            }
          ],
          "dojo_task_id": "b770c419-aacf-4559-b2e9-56f4d5614e6f",
          "stake_amount": null,
          "finalised_loss": null,
          "potential_loss": null,
          "finalised_reward": null,
          "potential_reward": null
        }
      ],
      "created_at": "2025-02-08T13:40:20.315000Z",
      "updated_at": "2025-02-08T13:44:52.289000Z",
      "validator_task_relation": null,
      "scores": [
        {
          "id": "1fbfb71f-8630-4901-a759-b58c690ea244",
          "criterion_id": "d5a66545-0cad-4c28-ba6f-b1550ee1f1ad",
          "miner_response_id": "2ab86517-bbf9-4861-ad53-7b9b4269a718",
          "scores": "{\"raw_score\": 1.0, \"rank_id\": null, \"normalised_score\": 0.5, \"ground_truth_score\": 0.41314553990610325, \"cosine_similarity_score\": 0.9596034934620882, \"normalised_cosine_similarity_score\": 1.0, \"cubic_reward_score\": 0.704}",
          "created_at": "2025-02-08T13:44:52.358000Z",
          "updated_at": "2025-02-08T13:44:52.552000Z",
          "criterion_relation": null,
          "miner_response_relation": null
        },
        {
          "id": "c16e6b22-6919-425a-a91a-c5ba47d2f645",
          "criterion_id": "46b975be-5c58-4120-8818-4700ddf19002",
          "miner_response_id": "2ab86517-bbf9-4861-ad53-7b9b4269a718",
          "scores": "{\"raw_score\": 1.0, \"rank_id\": null, \"normalised_score\": 0.5, \"ground_truth_score\": 0.41314553990610325, \"cosine_similarity_score\": 0.9596034934620882, \"normalised_cosine_similarity_score\": 1.0, \"cubic_reward_score\": 0.704}",
          "created_at": "2025-02-08T13:44:52.358000Z",
          "updated_at": "2025-02-08T13:44:52.552000Z",
          "criterion_relation": null,
          "miner_response_relation": null
        },
        {
          "id": "36298d0c-8a59-43f7-a201-3ec10b0cee63",
          "criterion_id": "a4cbf3e2-d013-46d4-9df9-833d3cabf7e1",
          "miner_response_id": "2ab86517-bbf9-4861-ad53-7b9b4269a718",
          "scores": "{\"raw_score\": 1.0, \"rank_id\": null, \"normalised_score\": 0.5, \"ground_truth_score\": 0.41314553990610325, \"cosine_similarity_score\": 0.9596034934620882, \"normalised_cosine_similarity_score\": 1.0, \"cubic_reward_score\": 0.704}",
          "created_at": "2025-02-08T13:44:52.358000Z",
          "updated_at": "2025-02-08T13:44:52.552000Z",
          "criterion_relation": null,
          "miner_response_relation": null
        },
        {
          "id": "b53a9d8b-88da-4d02-bdce-3db6120150b2",
          "criterion_id": "c61ce0e1-778b-4826-953d-5b47946cef22",
          "miner_response_id": "2ab86517-bbf9-4861-ad53-7b9b4269a718",
          "scores": "{\"raw_score\": 1.0, \"rank_id\": null, \"normalised_score\": 0.5, \"ground_truth_score\": 0.41314553990610325, \"cosine_similarity_score\": 0.9596034934620882, \"normalised_cosine_similarity_score\": 1.0, \"cubic_reward_score\": 0.704}",
          "created_at": "2025-02-08T13:44:52.358000Z",
          "updated_at": "2025-02-08T13:44:52.552000Z",
          "criterion_relation": null,
          "miner_response_relation": null
        }
      ]
    }
  ],
  "created_at": "2025-02-08T13:40:20.315000+00:00",
  "metadata": null
}
{
  "validator_task_id": "01f29c1b-bacb-4fec-a7dc-3289aec296bc",
  "validator_hotkey": "5DWuP51n8GYLRrYfmyEgKxRgeNGiXLN7mBdLvyeqTeKgBnXb",
  "completions": [
    {
      "id": "bce5c8e1-18d0-4c6d-9fcb-b40b18c30ca5",
      "completion_id": "e1512471-87bd-441d-9feb-c4c9b700327e",
      "validator_task_id": "01f29c1b-bacb-4fec-a7dc-3289aec296bc",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width,initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Property Tycoon</title><style>body,html{margin:0;padding:0;height:100%;overflow:hidden;display:flex;justify-content:center;align-items:center;background:#000;font-family:Arial,sans-serif}#gameContainer{position:relative;width:100vmin;height:100vmin;max-width:800px;max-height:800px}#gameCanvas{width:100%;height:100%;background:#1a237e}#gameOver{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);background:rgba(0,0,0,0.9);padding:20px;border-radius:10px;text-align:center;display:none;flex-direction:column;align-items:center;color:#ffd700;border:2px solid #ffd700}#newGame{margin-top:20px;padding:10px 20px;font-size:18px;background:#1a237e;color:#ffd700;border:2px solid #ffd700;border-radius:5px;cursor:pointer}#newGame:hover{background:#283593}.instructions{position:absolute;bottom:10px;left:10px;color:#fff;font-size:12px;opacity:0.7}</style></head><body><div id=\\\"gameContainer\\\"><canvas id=\\\"gameCanvas\\\"></canvas><div id=\\\"gameOver\\\"><h2>BANKRUPTCY!</h2><p>Final Portfolio Value: <span id=\\\"finalValue\\\">$0M</span></p><button id=\\\"newGame\\\">New Investment</button></div><div class=\\\"instructions\\\">\\u2190 \\u2192 Move Platform | SPACE Market Analysis</div></div><script src=\\\"index.js\\\"></script><script>const canvas=document.getElementById('gameCanvas');const ctx=canvas.getContext('2d');const CANVAS_SIZE=800;const PLATFORM_HEIGHT=20;const PLATFORM_WIDTH=120;canvas.width=CANVAS_SIZE;canvas.height=CANVAS_SIZE;const game={platform:{x:CANVAS_SIZE/2-PLATFORM_WIDTH/2,width:PLATFORM_WIDTH,height:PLATFORM_HEIGHT},properties:[],marketMultiplier:1,portfolioValue:0,skillCooldown:0,gameOver:false,};const PROPERTY_TYPES=[{type:'house',width:60,height:40,value:100000,color:'#4CAF50'},{type:'apartment',width:80,height:60,value:500000,color:'#2196F3'},{type:'office',width:100,height:80,value:1000000,color:'#9C27B0'},];let fallingProperty=null;let stabilityMeter=100;let particles=[];function createProperty(){const type=PROPERTY_TYPES[Math.floor(Math.random()*PROPERTY_TYPES.length)];return{x:Math.random()*(CANVAS_SIZE-type.width),y:-type.height,width:type.width,height:type.height,value:type.value,color:type.color,velocity:2,angle:0,angularVel:0,};}function drawCityscape(){ctx.fillStyle='#1a237e';ctx.fillRect(0,0,CANVAS_SIZE,CANVAS_SIZE);ctx.fillStyle='#0d47a1';for(let i=0;i<10;i++){const height=100+Math.random()*200;const width=40+Math.random()*60;ctx.fillRect(i*100,CANVAS_SIZE-height,width,height);}}function drawPlatform(){ctx.fillStyle='#ffd700';ctx.fillRect(game.platform.x,CANVAS_SIZE-game.platform.height,game.platform.width,game.platform.height);}function drawProperty(prop){ctx.save();ctx.translate(prop.x+prop.width/2,prop.y+prop.height/2);ctx.rotate(prop.angle);ctx.fillStyle=prop.color;ctx.fillRect(-prop.width/2,-prop.height/2,prop.width,prop.height);ctx.fillStyle='#ffffff';ctx.font='12px Arial';const value=`$${(prop.value/1000).toFixed(0)}K`;const textWidth=ctx.measureText(value).width;ctx.fillText(value,-textWidth/2,5);ctx.restore();}function drawParticles(){particles.forEach((p,i)=>{p.life-=1;if(p.life<=0){particles.splice(i,1);return;}ctx.fillStyle=`rgba(255,215,0,${p.life/50})`;ctx.beginPath();ctx.arc(p.x,p.y,p.size,0,Math.PI*2);ctx.fill();p.x+=p.vx;p.y+=p.vy;});}function createParticles(x,y){for(let i=0;i<20;i++){particles.push({x,y,vx:(Math.random()-0.5)*3,vy:(Math.random()-0.5)*3,size:Math.random()*3+1,life:50});}}function drawHUD(){ctx.fillStyle='#ffffff';ctx.font='20px Arial';ctx.fillText(`Portfolio: $${(game.portfolioValue/1000000).toFixed(2)}M`,10,30);ctx.fillText(`Market: ${game.marketMultiplier.toFixed(2)}x`,10,60);ctx.fillStyle=stabilityMeter>70?'#4CAF50':stabilityMeter>30?'#FFC107':'#F44336';ctx.fillRect(CANVAS_SIZE-110,10,100*(stabilityMeter/100),20);if(game.skillCooldown>0){ctx.fillStyle='#ffffff';ctx.fillText(`Analysis: ${Math.ceil(game.skillCooldown/60)}s`,10,90);}}function updatePhysics(){if(fallingProperty){fallingProperty.y+=fallingProperty.velocity;fallingProperty.angle+=fallingProperty.angularVel;if(fallingProperty.y+fallingProperty.height>=CANVAS_SIZE-game.platform.height){if(fallingProperty.x+fallingProperty.width>=game.platform.x&&fallingProperty.x<=game.platform.x+game.platform.width){game.properties.push(fallingProperty);game.portfolioValue+=fallingProperty.value*game.marketMultiplier;createParticles(fallingProperty.x+fallingProperty.width/2,fallingProperty.y+fallingProperty.height/2);}else{stabilityMeter=Math.max(0,stabilityMeter-20);}fallingProperty=null;}}game.properties.forEach(prop=>{prop.angle+=prop.angularVel;if(Math.abs(prop.angle)>0.5){stabilityMeter=Math.max(0,stabilityMeter-0.5);}});if(stabilityMeter<=0&&!game.gameOver){gameOver();}}function gameOver(){game.gameOver=true;const gameOverScreen=document.getElementById('gameOver');gameOverScreen.style.display='flex';document.getElementById('finalValue').textContent=`$${(game.portfolioValue/1000000).toFixed(2)}M`;}function resetGame(){game.properties=[];game.portfolioValue=0;game.gameOver=false;stabilityMeter=100;game.marketMultiplier=1;game.skillCooldown=0;document.getElementById('gameOver').style.display='none';}function gameLoop(){if(!game.gameOver){ctx.clearRect(0,0,CANVAS_SIZE,CANVAS_SIZE);drawCityscape();if(!fallingProperty){fallingProperty=createProperty();game.marketMultiplier=0.5+Math.random()*1.5;}if(game.skillCooldown>0)game.skillCooldown--;updatePhysics();drawPlatform();game.properties.forEach(drawProperty);if(fallingProperty)drawProperty(fallingProperty);drawParticles();drawHUD();}requestAnimationFrame(gameLoop);}document.addEventListener('keydown',e=>{if(game.gameOver)return;if(e.code==='ArrowLeft'){e.preventDefault();game.platform.x=Math.max(0,game.platform.x-10);}else if(e.code==='ArrowRight'){e.preventDefault();game.platform.x=Math.min(CANVAS_SIZE-game.platform.width,game.platform.x+10);}else if(e.code==='Space'&&game.skillCooldown<=0){e.preventDefault();game.skillCooldown=1200;if(fallingProperty){fallingProperty.velocity=0.5;setTimeout(()=>{if(fallingProperty)fallingProperty.velocity=2;},2000);}}});document.getElementById('newGame').addEventListener('click',resetGame);gameLoop();</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:43:34.432000Z",
      "updated_at": "2025-02-08T13:43:34.432000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "e40baca0-511e-4515-83c3-151c4a8bea2c",
          "completion_id": "bce5c8e1-18d0-4c6d-9fcb-b40b18c30ca5",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:43:34.432000Z",
          "updated_at": "2025-02-08T13:43:34.432000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    },
    {
      "id": "275d5a36-4984-405b-bc6b-3ace6b5edf52",
      "completion_id": "9d04a526-a316-42c0-b332-c03bb2c9c4cf",
      "validator_task_id": "01f29c1b-bacb-4fec-a7dc-3289aec296bc",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width,initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Property Tycoon</title><style>body,html{margin:0;padding:0;height:100%;overflow:hidden;font-family:Arial,sans-serif;background:#1a1a2e}#gameContainer{position:relative;width:100vmin;height:100vmin;margin:auto}#gameCanvas{position:absolute;top:0;left:0;width:100%;height:100%}#hud{position:absolute;top:10px;left:10px;right:10px;display:flex;justify-content:space-between;color:#ffd700;font-size:18px;text-shadow:2px 2px 4px rgba(0,0,0,0.5)}#marketAnalysis{position:absolute;bottom:10px;left:50%;transform:translateX(-50%);height:4px;width:200px;background:#2a2a4a;border-radius:2px}#marketAnalysisFill{height:100%;width:0%;background:#ffd700;border-radius:2px;transition:width 0.3s}#gameOver{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);background:rgba(26,26,46,0.95);color:#ffd700;padding:20px;border-radius:10px;text-align:center;display:none}#newGame{margin-top:20px;padding:10px 20px;font-size:18px;background:#ffd700;color:#1a1a2e;border:none;border-radius:5px;cursor:pointer;transition:background 0.3s}#newGame:hover{background:#ffed4a}#stabilityMeter{position:absolute;top:50%;right:10px;width:10px;height:200px;background:#2a2a4a;border-radius:5px;transform:translateY(-50%)}#stabilityFill{position:absolute;bottom:0;width:100%;background:#ffd700;border-radius:5px;transition:height 0.3s}</style></head><body><div id=\\\"gameContainer\\\"><canvas id=\\\"gameCanvas\\\"></canvas><div id=\\\"hud\\\"><span id=\\\"portfolio\\\">Portfolio: $0</span><span id=\\\"multiplier\\\">Market: 1.0x</span></div><div id=\\\"stabilityMeter\\\"><div id=\\\"stabilityFill\\\"></div></div><div id=\\\"marketAnalysis\\\"><div id=\\\"marketAnalysisFill\\\"></div></div><div id=\\\"gameOver\\\"><h2>Bankruptcy!</h2><p>Final Portfolio Value: <span id=\\\"finalValue\\\">$0</span></p><button id=\\\"newGame\\\">New Investment</button></div></div><script src=\\\"index.js\\\"></script><script>const canvas=document.getElementById('gameCanvas');const ctx=canvas.getContext('2d');const portfolioDisplay=document.getElementById('portfolio');const multiplierDisplay=document.getElementById('multiplier');const gameOverScreen=document.getElementById('gameOver');const finalValueDisplay=document.getElementById('finalValue');const newGameButton=document.getElementById('newGame');const marketAnalysisFill=document.getElementById('marketAnalysisFill');const stabilityFill=document.getElementById('stabilityFill');let canvasWidth=800;let canvasHeight=800;let scale=1;function resizeCanvas(){const container=document.getElementById('gameContainer');const containerWidth=container.clientWidth;const containerHeight=container.clientHeight;scale=Math.min(containerWidth/canvasWidth,containerHeight/canvasHeight);canvas.width=canvasWidth*scale;canvas.height=canvasHeight*scale;ctx.scale(scale,scale);}window.addEventListener('resize',resizeCanvas);resizeCanvas();const PLATFORM_WIDTH=120;const PLATFORM_HEIGHT=20;const PROPERTY_TYPES=[{width:100,height:60,value:100000,color:'#4a90e2'},{width:140,height:80,value:500000,color:'#e6c619'},{width:80,height:120,value:1000000,color:'#9b59b6'}];const platform={x:canvasWidth/2-PLATFORM_WIDTH/2,y:canvasHeight-PLATFORM_HEIGHT-10,width:PLATFORM_WIDTH,height:PLATFORM_HEIGHT,speed:8};let properties=[];let stackedProperties=[];let marketMultiplier=1;let portfolioValue=0;let gameOver=false;let lastAnalysisTime=0;let analysisReady=true;let stability=100;let cityscape=[];function createCityscape(){for(let i=0;i<15;i++){cityscape.push({x:i*60,y:Math.random()*200+400,width:40,height:Math.random()*200+100});}}function drawCityscape(){ctx.fillStyle='#1a1a2e';ctx.fillRect(0,0,canvasWidth,canvasHeight);ctx.fillStyle='#2a2a4a';cityscape.forEach(building=>{ctx.fillRect(building.x,canvasHeight-building.height,building.width,building.height);});}function createProperty(){const type=PROPERTY_TYPES[Math.floor(Math.random()*PROPERTY_TYPES.length)];return{x:Math.random()*(canvasWidth-type.width),y:-type.height,width:type.width,height:type.height,value:type.value,color:type.color,velocity:0,rotation:0,rotationVelocity:0};}function drawProperty(property){ctx.save();ctx.translate(property.x+property.width/2,property.y+property.height/2);ctx.rotate(property.rotation);ctx.fillStyle=property.color;ctx.fillRect(-property.width/2,-property.height/2,property.width,property.height);ctx.fillStyle='#ffffff';ctx.font='bold 14px Arial';const value='$'+Math.floor(property.value*marketMultiplier/1000)+'K';ctx.textAlign='center';ctx.fillText(value,-property.width/4,0);ctx.restore();}function drawPlatform(){ctx.fillStyle='#ffd700';ctx.fillRect(platform.x,platform.y,platform.width,platform.height);}function updateProperties(){if(Math.random()<0.02&&properties.length<1){properties.push(createProperty());}properties.forEach(property=>{property.y+=2;property.rotation+=property.rotationVelocity;if(property.y>canvasHeight){properties=properties.filter(p=>p!==property);}});stackedProperties.forEach(property=>{property.y+=property.velocity;property.rotation+=property.rotationVelocity;property.velocity+=0.2;property.x+=Math.sin(property.rotation)*0.5;let landed=false;if(property.y+property.height>canvasHeight-PLATFORM_HEIGHT&&property.x+property.width>platform.x&&property.x<platform.x+platform.width){property.y=canvasHeight-PLATFORM_HEIGHT-property.height;property.velocity=0;property.rotationVelocity*=0.8;landed=true;}stackedProperties.forEach(other=>{if(property!==other&&checkCollision(property,other)){resolveCollision(property,other);landed=true;}});if(landed){property.rotation*=0.95;property.rotationVelocity*=0.95;}});stability=100-Math.min(100,stackedProperties.reduce((acc,prop)=>acc+Math.abs(prop.rotation)*10,0));stabilityFill.style.height=stability+'%';if(stability<10){gameOver=true;endGame();}}function checkCollision(prop1,prop2){return prop1.x<prop2.x+prop2.width&&prop1.x+prop1.width>prop2.x&&prop1.y<prop2.y+prop2.height&&prop1.y+prop1.height>prop2.y;}function resolveCollision(prop1,prop2){const overlap=Math.min(prop1.y+prop1.height-prop2.y,prop2.y+prop2.height-prop1.y);prop1.y-=overlap/2;prop2.y+=overlap/2;prop1.velocity*=0.5;prop2.velocity*=0.5;prop1.rotationVelocity+=prop2.rotation*0.01;prop2.rotationVelocity+=prop1.rotation*0.01;}function checkCatch(){properties.forEach(property=>{if(property.y+property.height>platform.y&&property.x+property.width>platform.x&&property.x<platform.x+platform.width){properties=properties.filter(p=>p!==property);stackedProperties.push(property);portfolioValue+=property.value*marketMultiplier;createSparkles(property.x+property.width/2,property.y+property.height/2);}});}let sparkles=[];function createSparkles(x,y){for(let i=0;i<10;i++){sparkles.push({x,y,size:Math.random()*3+1,velocity:{x:(Math.random()-0.5)*5,y:(Math.random()-0.5)*5},life:1});}}function updateSparkles(){sparkles=sparkles.filter(sparkle=>{sparkle.x+=sparkle.velocity.x;sparkle.y+=sparkle.velocity.y;sparkle.life-=0.02;return sparkle.life>0;});}function drawSparkles(){ctx.fillStyle='#ffd700';sparkles.forEach(sparkle=>{ctx.globalAlpha=sparkle.life;ctx.beginPath();ctx.arc(sparkle.x,sparkle.y,sparkle.size,0,Math.PI*2);ctx.fill();});ctx.globalAlpha=1;}function updateMarketMultiplier(){if(Math.random()<0.02){marketMultiplier=0.5+Math.random()*1.5;multiplierDisplay.textContent=`Market: ${marketMultiplier.toFixed(1)}x`;}}function updateGame(){if(!gameOver){updateProperties();checkCatch();updateSparkles();updateMarketMultiplier();portfolioDisplay.textContent=`Portfolio: $${Math.floor(portfolioValue).toLocaleString()}`;const timeSinceAnalysis=(Date.now()-lastAnalysisTime)/1000;if(timeSinceAnalysis>=20){analysisReady=true;marketAnalysisFill.style.width='100%';}}}function drawGame(){ctx.clearRect(0,0,canvasWidth,canvasHeight);drawCityscape();properties.forEach(drawProperty);stackedProperties.forEach(drawProperty);drawPlatform();drawSparkles();}function gameLoop(){updateGame();drawGame();requestAnimationFrame(gameLoop);}function startGame(){properties=[];stackedProperties=[];portfolioValue=0;marketMultiplier=1;gameOver=false;stability=100;platform.x=canvasWidth/2-PLATFORM_WIDTH/2;gameOverScreen.style.display='none';lastAnalysisTime=0;analysisReady=true;marketAnalysisFill.style.width='100%';}function endGame(){gameOver=true;gameOverScreen.style.display='block';finalValueDisplay.textContent=`$${Math.floor(portfolioValue).toLocaleString()}`;}window.addEventListener('keydown',e=>{if(['ArrowLeft','ArrowRight','Space'].includes(e.code)){e.preventDefault();}if(e.code==='ArrowLeft'){platform.x=Math.max(0,platform.x-platform.speed);}if(e.code==='ArrowRight'){platform.x=Math.min(canvasWidth-platform.width,platform.x+platform.speed);}if(e.code==='Space'&&analysisReady){lastAnalysisTime=Date.now();analysisReady=false;marketAnalysisFill.style.width='0%';properties.forEach(property=>property.y+=property.y<0?property.height:0);}});newGameButton.addEventListener('click',startGame);createCityscape();startGame();gameLoop();</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:43:34.432000Z",
      "updated_at": "2025-02-08T13:43:34.432000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "df738806-6b5c-4c53-9c73-4bdb016406ea",
          "completion_id": "275d5a36-4984-405b-bc6b-3ace6b5edf52",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:43:34.432000Z",
          "updated_at": "2025-02-08T13:43:34.432000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    },
    {
      "id": "72e764c0-f0a0-459b-b7c5-5593b62c4348",
      "completion_id": "87083c57-03f0-4cb9-95f6-30d24aa7a0ad",
      "validator_task_id": "01f29c1b-bacb-4fec-a7dc-3289aec296bc",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width,initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Property Tycoon</title><style>body,html{margin:0;padding:0;height:100%;overflow:hidden;font-family:'Segoe UI',Arial,sans-serif;background:#000033}#gameContainer{position:relative;width:100vmin;height:100vmin;margin:auto}#gameCanvas{position:absolute;top:0;left:0;width:100%;height:100%}#hud{position:absolute;top:10px;left:10px;right:10px;display:flex;justify-content:space-between;color:#FFD700;font-size:18px;font-family:'Segoe UI',Arial,sans-serif;text-shadow:0 0 10px rgba(255,215,0,0.5)}#gameOver{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);background:rgba(0,0,51,0.9);color:#FFD700;padding:20px;border-radius:10px;text-align:center;display:none;flex-direction:column;align-items:center}#restartButton{margin-top:20px;padding:10px 20px;font-size:18px;background:#FFD700;color:#000033;border:none;border-radius:5px;cursor:pointer}#restartButton:hover{background:#FFC800}#controls{position:absolute;bottom:10px;left:50%;transform:translateX(-50%);color:#FFD700;font-size:14px;text-align:center}</style></head><body><div id=\\\"gameContainer\\\"><canvas id=\\\"gameCanvas\\\"></canvas><div id=\\\"hud\\\"><span id=\\\"score\\\">Portfolio: $0M</span><span id=\\\"multiplier\\\">Market: 1.00x</span><span id=\\\"powerup\\\">Powers Ready</span></div><div id=\\\"gameOver\\\"><h2>Bankruptcy!</h2><p>Final Portfolio Value: $<span id=\\\"finalScore\\\">0</span>M</p><button id=\\\"restartButton\\\">New Investment</button></div><div id=\\\"controls\\\">\\u2190 \\u2192 Move Platform | SPACE Market Analysis</div></div><script src=\\\"index.js\\\"></script><script>const canvas=document.getElementById('gameCanvas');const ctx=canvas.getContext('2d');const scoreElement=document.getElementById('score');const multiplierElement=document.getElementById('multiplier');const powerupElement=document.getElementById('powerup');const gameOverScreen=document.getElementById('gameOver');const finalScoreElement=document.getElementById('finalScore');const restartButton=document.getElementById('restartButton');let canvasWidth=800;let canvasHeight=800;let scale=1;function resizeCanvas(){const container=document.getElementById('gameContainer');const containerWidth=container.clientWidth;const containerHeight=container.clientHeight;scale=Math.min(containerWidth/canvasWidth,containerHeight/canvasHeight);canvas.width=canvasWidth*scale;canvas.height=canvasHeight*scale;ctx.scale(scale,scale);}window.addEventListener('resize',resizeCanvas);resizeCanvas();class Platform{constructor(){this.width=120;this.height=20;this.x=canvasWidth/2-this.width/2;this.y=canvasHeight-40;this.speed=8;this.color='#FFD700';}move(direction){this.x+=direction*this.speed;this.x=Math.max(0,Math.min(canvasWidth-this.width,this.x));}draw(){ctx.fillStyle=this.color;ctx.fillRect(this.x,this.y,this.width,this.height);}}class Property{constructor(x){this.width=Math.random()*60+40;this.height=Math.random()*40+40;this.x=x;this.y=-this.height;this.value=Math.floor(Math.random()*3+1)*500000;this.color=`rgb(${Math.random()*50+150},${Math.random()*50+150},${Math.random()*50+200})`;this.fallSpeed=2;this.angle=0;this.angularVelocity=0;this.protected=false;}update(){this.y+=this.fallSpeed;this.angle+=this.angularVelocity;}draw(){ctx.save();ctx.translate(this.x+this.width/2,this.y+this.height/2);ctx.rotate(this.angle);ctx.fillStyle=this.color;ctx.fillRect(-this.width/2,-this.height/2,this.width,this.height);if(this.protected){ctx.strokeStyle='rgba(255,215,0,0.5)';ctx.lineWidth=3;ctx.strokeRect(-this.width/2,-this.height/2,this.width,this.height);}ctx.fillStyle='#FFFFFF';ctx.font='12px Arial';ctx.textAlign='center';ctx.fillText(`$${(this.value/1000).toFixed(0)}K`,-this.width/2+this.width/2,0);ctx.restore();}}class PowerUp{constructor(){this.x=-50;this.y=Math.random()*canvasHeight/2;this.width=30;this.height=30;this.speed=3;}update(){this.x+=this.speed;}draw(){ctx.fillStyle='#00FF00';ctx.beginPath();ctx.moveTo(this.x,this.y-this.height/2);ctx.lineTo(this.x+this.width,this.y);ctx.lineTo(this.x,this.y+this.height/2);ctx.closePath();ctx.fill();}}class Game{constructor(){this.platform=new Platform();this.properties=[];this.stackedProperties=[];this.powerups=[];this.score=0;this.marketMultiplier=1;this.lastPropertyTime=0;this.lastPowerupTime=0;this.protectedProperties=0;this.protectionTimer=0;this.analysisActive=false;this.analysisCooldown=0;this.gameOver=false;this.createCityscape();}createCityscape(){this.cityscape=[];for(let i=0;i<20;i++){this.cityscape.push({x:i*40,height:Math.random()*100+50});}}drawBackground(){ctx.fillStyle='#000033';ctx.fillRect(0,0,canvasWidth,canvasHeight);ctx.fillStyle='#000066';for(const building of this.cityscape){ctx.fillRect(building.x,canvasHeight-building.height,35,building.height);}ctx.fillStyle='rgba(255,255,255,0.1)';for(let i=0;i<50;i++){ctx.fillRect(Math.random()*canvasWidth,Math.random()*canvasHeight,2,2);}}spawnProperty(){if(Date.now()-this.lastPropertyTime>2000){this.properties.push(new Property(Math.random()*(canvasWidth-100)+50));this.lastPropertyTime=Date.now();}}spawnPowerup(){if(Date.now()-this.lastPowerupTime>10000&&Math.random()<0.3){this.powerups.push(new PowerUp());this.lastPowerupTime=Date.now();}}updateMarketMultiplier(){this.marketMultiplier=0.5+Math.random()*1.5;}checkCollisions(){for(const property of this.properties){if(property.y+property.height>this.platform.y&&property.x<this.platform.x+this.platform.width&&property.x+property.width>this.platform.x){this.stackProperty(property);this.properties=this.properties.filter(p=>p!==property);}}for(const powerup of this.powerups){if(powerup.x>this.platform.x&&powerup.x<this.platform.x+this.platform.width&&powerup.y>this.platform.y-20&&powerup.y<this.platform.y+20){this.activateInsurance();this.powerups=this.powerups.filter(p=>p!==powerup);}}}stackProperty(property){property.y=this.platform.y-property.height;if(this.stackedProperties.length>0){const lastProperty=this.stackedProperties[this.stackedProperties.length-1];const overlap=Math.min(property.width,Math.max(0,Math.min(property.x+property.width-lastProperty.x,lastProperty.x+lastProperty.width-property.x)));if(overlap<Math.min(property.width,lastProperty.width)*0.3&&!property.protected){this.gameOver=true;return;}}this.stackedProperties.push(property);this.score+=property.value*this.marketMultiplier;this.createSparkles(property);}createSparkles(property){for(let i=0;i<10;i++){setTimeout(()=>{ctx.fillStyle='#FFD700';ctx.beginPath();ctx.arc(property.x+Math.random()*property.width,property.y+Math.random()*property.height,2,0,Math.PI*2);ctx.fill();},i*100);}}activateInsurance(){this.protectedProperties=3;this.protectionTimer=15;for(let i=Math.max(0,this.stackedProperties.length-3);i<this.stackedProperties.length;i++){this.stackedProperties[i].protected=true;}}activateAnalysis(){if(this.analysisCooldown===0){this.analysisActive=true;setTimeout(()=>{this.analysisActive=false;this.analysisCooldown=20;},5000);}}update(){if(!this.gameOver){this.spawnProperty();this.spawnPowerup();this.updateMarketMultiplier();this.checkCollisions();this.properties.forEach(p=>p.update());this.powerups.forEach(p=>p.update());this.powerups=this.powerups.filter(p=>p.x<canvasWidth);if(this.protectionTimer>0){this.protectionTimer-=1/60;if(this.protectionTimer<=0){this.stackedProperties.forEach(p=>p.protected=false);}}if(this.analysisCooldown>0){this.analysisCooldown-=1/60;}}}draw(){this.drawBackground();if(this.analysisActive){ctx.fillStyle='rgba(255,215,0,0.2)';ctx.fillRect(0,0,canvasWidth,canvasHeight);}this.platform.draw();this.properties.forEach(p=>p.draw());this.powerups.forEach(p=>p.draw());this.stackedProperties.forEach(p=>p.draw());scoreElement.textContent=`Portfolio: $${(this.score/1000000).toFixed(2)}M`;multiplierElement.textContent=`Market: ${this.marketMultiplier.toFixed(2)}x`;powerupElement.textContent=this.protectionTimer>0?`Insurance: ${Math.ceil(this.protectionTimer)}s`:this.analysisCooldown>0?`Analysis: ${Math.ceil(this.analysisCooldown)}s`:'Powers Ready';}reset(){this.platform=new Platform();this.properties=[];this.stackedProperties=[];this.powerups=[];this.score=0;this.marketMultiplier=1;this.lastPropertyTime=0;this.lastPowerupTime=0;this.protectedProperties=0;this.protectionTimer=0;this.analysisActive=false;this.analysisCooldown=0;this.gameOver=false;gameOverScreen.style.display='none';}}const game=new Game();function gameLoop(){if(!game.gameOver){game.update();game.draw();requestAnimationFrame(gameLoop);}else{finalScoreElement.textContent=(game.score/1000000).toFixed(2);gameOverScreen.style.display='flex';}}document.addEventListener('keydown',e=>{if(e.code==='ArrowLeft'){game.platform.move(-1);e.preventDefault();}else if(e.code==='ArrowRight'){game.platform.move(1);e.preventDefault();}else if(e.code==='Space'){game.activateAnalysis();e.preventDefault();}});restartButton.addEventListener('click',()=>{game.reset();gameLoop();});gameLoop();</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:43:34.432000Z",
      "updated_at": "2025-02-08T13:43:34.432000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "3425c5d7-d9ed-4731-95f2-6482d2e9f74e",
          "completion_id": "72e764c0-f0a0-459b-b7c5-5593b62c4348",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:43:34.432000Z",
          "updated_at": "2025-02-08T13:43:34.432000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    },
    {
      "id": "76965318-911d-4d7f-bbc9-6378e36a2007",
      "completion_id": "94204f80-595f-40e9-98d9-83090f2bc065",
      "validator_task_id": "01f29c1b-bacb-4fec-a7dc-3289aec296bc",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width,initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Gem Empire</title><style>body,html{margin:0;padding:0;height:100%;overflow:hidden;font-family:Arial,sans-serif;background:#000}#gameContainer{position:relative;width:100vmin;height:100vmin;margin:auto}#gameCanvas{position:absolute;top:0;left:0;width:100%;height:100%}#hud{position:absolute;top:10px;left:10px;right:10px;display:flex;justify-content:space-between;color:#FFD700;font-size:18px;text-shadow:0 0 5px rgba(255,215,0,0.5);font-family:Arial,sans-serif}#gameOver{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);background:rgba(26,35,126,0.9);color:#FFD700;padding:20px;border-radius:10px;text-align:center;display:none;flex-direction:column;align-items:center}#newGame{margin-top:20px;padding:10px 20px;font-size:18px;background:#FFD700;color:#1A237E;border:none;border-radius:5px;cursor:pointer}#newGame:hover{background:#FFC107}#controls{position:absolute;bottom:10px;left:50%;transform:translateX(-50%);color:#FFD700;font-size:14px;text-align:center}</style></head><body><div id=\\\"gameContainer\\\"><canvas id=\\\"gameCanvas\\\"></canvas><div id=\\\"hud\\\"><span id=\\\"score\\\">Collection Value: $0</span><span id=\\\"stability\\\">Stability: 100%</span><span id=\\\"analysis\\\">Analysis Ready</span></div><div id=\\\"gameOver\\\"><h2>Bankruptcy!</h2><p>Final Collection Value: <span id=\\\"finalScore\\\">$0</span></p><button id=\\\"newGame\\\">New Collection</button></div><div id=\\\"controls\\\">\\u2190 \\u2192 Move Platform | SPACE Analyze Gems</div></div><script src=\\\"index.js\\\"></script><script>const canvas=document.getElementById('gameCanvas');const ctx=canvas.getContext('2d');const scoreElement=document.getElementById('score');const multiplierElement=document.getElementById('multiplier');const stabilityElement=document.getElementById('stability');const gameOverScreen=document.getElementById('gameOver');const finalScoreElement=document.getElementById('finalScore');const newGameButton=document.getElementById('newGame');const analysisElement=document.getElementById('analysis');let canvasWidth=800;let canvasHeight=800;let scale=1;function resizeCanvas(){const container=document.getElementById('gameContainer');const containerWidth=container.clientWidth;const containerHeight=container.clientHeight;scale=Math.min(containerWidth/canvasWidth,containerHeight/canvasHeight);canvas.width=canvasWidth*scale;canvas.height=canvasHeight*scale;ctx.scale(scale,scale)}window.addEventListener('resize',resizeCanvas);resizeCanvas();const PLATFORM_WIDTH=120;const PLATFORM_HEIGHT=20;const GEM_TYPES=[{color:'#B9F2FF',value:100000,name:'Diamond'},{color:'#FF1744',value:500000,name:'Ruby'},{color:'#00C853',value:1000000,name:'Emerald'}];class Platform{constructor(){this.width=PLATFORM_WIDTH;this.height=PLATFORM_HEIGHT;this.x=canvasWidth/2-this.width/2;this.y=canvasHeight-50;this.speed=8;this.movingLeft=false;this.movingRight=false}move(){if(this.movingLeft)this.x=Math.max(0,this.x-this.speed);if(this.movingRight)this.x=Math.min(canvasWidth-this.width,this.x+this.speed)}draw(){ctx.fillStyle='#FFD700';ctx.fillRect(this.x,this.y,this.width,this.height);ctx.strokeStyle='#B8860B';ctx.strokeRect(this.x,this.y,this.width,this.height)}}class Gem{constructor(){const type=GEM_TYPES[Math.floor(Math.random()*GEM_TYPES.length)];this.width=40+Math.random()*40;this.height=30+Math.random()*20;this.x=Math.random()*(canvasWidth-this.width);this.y=-this.height;this.color=type.color;this.value=type.value;this.speed=2;this.rotation=0;this.rotationSpeed=(Math.random()-0.5)*0.1;this.settled=false;this.marketMultiplier=0.5+Math.random()*1.5}update(){if(!this.settled){this.y+=this.speed;this.rotation+=this.rotationSpeed}}draw(){ctx.save();ctx.translate(this.x+this.width/2,this.y+this.height/2);ctx.rotate(this.rotation);ctx.fillStyle=this.color;ctx.fillRect(-this.width/2,-this.height/2,this.width,this.height);ctx.strokeStyle='rgba(255,255,255,0.5)';ctx.strokeRect(-this.width/2,-this.height/2,this.width,this.height);if(!this.settled){const value=(this.value*this.marketMultiplier).toLocaleString('en-US',{style:'currency',currency:'USD',maximumFractionDigits:0});ctx.fillStyle='white';ctx.font='12px Arial';ctx.textAlign='center';ctx.fillText(value,0,0)}ctx.restore()}}class Game{constructor(){this.platform=new Platform();this.gems=[];this.stackedGems=[];this.totalValue=0;this.stability=100;this.lastGemTime=0;this.spawnInterval=2000;this.gameOver=false;this.analysisMode=false;this.analysisCooldown=0;this.effects=[];this.createBackground()}createBackground(){this.background=document.createElement('canvas');this.background.width=canvasWidth;this.background.height=canvasHeight;const bgCtx=this.background.getContext('2d');bgCtx.fillStyle='#1A237E';bgCtx.fillRect(0,0,canvasWidth,canvasHeight);for(let i=0;i<50;i++){bgCtx.fillStyle=`rgba(255,215,0,${Math.random()*0.1})`;bgCtx.beginPath();bgCtx.arc(Math.random()*canvasWidth,Math.random()*canvasHeight,Math.random()*3,0,Math.PI*2);bgCtx.fill()}const gradient=bgCtx.createLinearGradient(0,0,0,canvasHeight);gradient.addColorStop(0,'rgba(26,35,126,0.8)');gradient.addColorStop(1,'rgba(26,35,126,0.2)');bgCtx.fillStyle=gradient;bgCtx.fillRect(0,0,canvasWidth,canvasHeight)}spawnGem(){if(Date.now()-this.lastGemTime>this.spawnInterval&&!this.gameOver){this.gems.push(new Gem());this.lastGemTime=Date.now();this.spawnInterval=Math.max(1000,this.spawnInterval*0.995)}}addSparkleEffect(x,y){for(let i=0;i<10;i++){this.effects.push({x:x,y:y,size:Math.random()*4+2,speed:{x:(Math.random()-0.5)*5,y:-Math.random()*5-2},alpha:1})}}updateEffects(){this.effects=this.effects.filter(e=>{e.x+=e.speed.x;e.y+=e.speed.y;e.alpha-=0.02;return e.alpha>0})}drawEffects(){ctx.save();this.effects.forEach(e=>{ctx.fillStyle=`rgba(255,215,0,${e.alpha})`;ctx.beginPath();ctx.arc(e.x,e.y,e.size,0,Math.PI*2);ctx.fill()});ctx.restore()}checkCollisions(){this.gems.forEach(gem=>{if(!gem.settled){const platformCollision=gem.y+gem.height>this.platform.y&&gem.x<this.platform.x+this.platform.width&&gem.x+gem.width>this.platform.x;const stackCollision=this.stackedGems.some(stacked=>gem.y+gem.height>stacked.y&&gem.y<stacked.y+stacked.height&&gem.x<stacked.x+stacked.width&&gem.x+gem.width>stacked.x);if(platformCollision||stackCollision){gem.settled=true;this.stackedGems.push(gem);this.totalValue+=gem.value*gem.marketMultiplier;this.addSparkleEffect(gem.x+gem.width/2,gem.y+gem.height/2);this.updateStability()}}})}updateStability(){let totalWidth=0;let totalHeight=0;this.stackedGems.forEach(gem=>{totalWidth+=gem.width;totalHeight+=gem.height});const averageWidth=totalWidth/this.stackedGems.length;const heightToWidthRatio=totalHeight/averageWidth;this.stability=Math.max(0,100-heightToWidthRatio*10);if(this.stability<=0)this.endGame()}update(){if(!this.gameOver){this.platform.move();this.spawnGem();this.gems.forEach(gem=>{if(!gem.settled)gem.update()});this.checkCollisions();if(this.analysisCooldown>0)this.analysisCooldown--;this.updateEffects();if(this.analysisMode){this.gems.forEach(gem=>{if(!gem.settled)gem.speed=1})}}}draw(){ctx.drawImage(this.background,0,0);this.platform.draw();[...this.stackedGems,...this.gems].forEach(gem=>gem.draw());this.drawEffects();if(this.analysisMode&&!this.gameOver){ctx.fillStyle='rgba(255,255,255,0.2)';ctx.fillRect(0,0,canvasWidth,canvasHeight)}}endGame(){this.gameOver=true;finalScoreElement.textContent=this.totalValue.toLocaleString('en-US',{style:'currency',currency:'USD',maximumFractionDigits:0});gameOverScreen.style.display='flex'}reset(){this.platform=new Platform();this.gems=[];this.stackedGems=[];this.totalValue=0;this.stability=100;this.lastGemTime=0;this.spawnInterval=2000;this.gameOver=false;this.analysisMode=false;this.analysisCooldown=0;this.effects=[];gameOverScreen.style.display='none'}toggleAnalysis(){if(this.analysisCooldown===0&&!this.gameOver){this.analysisMode=true;this.analysisCooldown=1200;setTimeout(()=>{this.analysisMode=false;this.gems.forEach(gem=>{if(!gem.settled)gem.speed=2})},3000)}}}const game=new Game();function gameLoop(){if(!game.gameOver){game.update();game.draw();scoreElement.textContent=`Collection Value: ${game.totalValue.toLocaleString('en-US',{style:'currency',currency:'USD',maximumFractionDigits:0})}`;stabilityElement.textContent=`Stability: ${Math.round(game.stability)}%`;analysisElement.textContent=game.analysisCooldown>0?`Analysis: ${Math.ceil(game.analysisCooldown/60)}s`:'Analysis Ready'}requestAnimationFrame(gameLoop)}document.addEventListener('keydown',e=>{if(['ArrowLeft','ArrowRight','Space'].includes(e.code)){e.preventDefault();if(e.code==='ArrowLeft')game.platform.movingLeft=true;if(e.code==='ArrowRight')game.platform.movingRight=true;if(e.code==='Space')game.toggleAnalysis()}});document.addEventListener('keyup',e=>{if(e.code==='ArrowLeft')game.platform.movingLeft=false;if(e.code==='ArrowRight')game.platform.movingRight=false});newGameButton.addEventListener('click',()=>{game.reset();gameLoop()});gameLoop();</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:43:34.432000Z",
      "updated_at": "2025-02-08T13:43:34.432000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "ee24afc1-63b2-47dd-90bf-53c433f8b3a8",
          "completion_id": "76965318-911d-4d7f-bbc9-6378e36a2007",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:43:34.432000Z",
          "updated_at": "2025-02-08T13:43:34.432000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    }
  ],
  "ground_truths": [
    {
      "id": "1fd585d7-1ba4-4de4-a406-a7d2c5ac6092",
      "validator_task_id": "01f29c1b-bacb-4fec-a7dc-3289aec296bc",
      "obfuscated_model_id": "e1512471-87bd-441d-9feb-c4c9b700327e",
      "real_model_id": "e1512471-87bd-441d-9feb-c4c9b700327e",
      "rank_id": 0,
      "ground_truth_score": 0.0,
      "created_at": "2025-02-08T13:43:34.432000Z",
      "updated_at": "2025-02-08T13:43:34.432000Z",
      "validator_task_relation": null
    },
    {
      "id": "27f2d130-c68e-4acd-b423-ea1907dd2e04",
      "validator_task_id": "01f29c1b-bacb-4fec-a7dc-3289aec296bc",
      "obfuscated_model_id": "9d04a526-a316-42c0-b332-c03bb2c9c4cf",
      "real_model_id": "9d04a526-a316-42c0-b332-c03bb2c9c4cf",
      "rank_id": 1,
      "ground_truth_score": 1.0,
      "created_at": "2025-02-08T13:43:34.432000Z",
      "updated_at": "2025-02-08T13:43:34.432000Z",
      "validator_task_relation": null
    },
    {
      "id": "2583a321-db4e-41c6-bc0c-9573e7030207",
      "validator_task_id": "01f29c1b-bacb-4fec-a7dc-3289aec296bc",
      "obfuscated_model_id": "87083c57-03f0-4cb9-95f6-30d24aa7a0ad",
      "real_model_id": "87083c57-03f0-4cb9-95f6-30d24aa7a0ad",
      "rank_id": 2,
      "ground_truth_score": 2.0,
      "created_at": "2025-02-08T13:43:34.432000Z",
      "updated_at": "2025-02-08T13:43:34.432000Z",
      "validator_task_relation": null
    },
    {
      "id": "598d2dd0-8f42-49f7-b421-283799ebf450",
      "validator_task_id": "01f29c1b-bacb-4fec-a7dc-3289aec296bc",
      "obfuscated_model_id": "94204f80-595f-40e9-98d9-83090f2bc065",
      "real_model_id": "94204f80-595f-40e9-98d9-83090f2bc065",
      "rank_id": 3,
      "ground_truth_score": 3.0,
      "created_at": "2025-02-08T13:43:34.432000Z",
      "updated_at": "2025-02-08T13:43:34.432000Z",
      "validator_task_relation": null
    }
  ],
  "miner_responses": [
    {
      "id": "7d49faf5-fe21-451b-a6a2-76f15f183aeb",
      "validator_task_id": "01f29c1b-bacb-4fec-a7dc-3289aec296bc",
      "dojo_task_id": "84e72fcd-8ce2-42f1-a4a0-b18d4d772a8f",
      "hotkey": "5HBm7gmcyrqjCpyFwMBM6HzZrNmM3JBHKJHW2HsDUvwNFJUS",
      "coldkey": "5HU3tezTitX4gq5emvpbspqFzzV9dfuR2BEkx3SG4Zf1ucym",
      "task_result": "{}",
      "created_at": "2025-02-08T13:43:34.432000Z",
      "updated_at": "2025-02-08T13:43:34.432000Z",
      "validator_task_relation": null,
      "scores": []
    },
    {
      "id": "3d60487b-c72d-4710-8026-820d5e7ecaeb",
      "validator_task_id": "01f29c1b-bacb-4fec-a7dc-3289aec296bc",
      "dojo_task_id": "bc5b40fe-db5b-4e11-bce6-c7b7d66af8fa",
      "hotkey": "5DyMoTsYaP1cjoYahSHtGKmwu6bRva6XJ3ha6i1uMpm5oSS2",
      "coldkey": "5D8ARXP7kza9qrdNgGtXgMHTf6SxsLLeVjE8cf3C4FAhEpNe",
      "task_result": "{}",
      "created_at": "2025-02-08T13:43:34.432000Z",
      "updated_at": "2025-02-08T13:43:34.432000Z",
      "validator_task_relation": null,
      "scores": []
    }
  ],
  "created_at": "2025-02-08T13:43:34.432000+00:00",
  "metadata": null
}
{
  "validator_task_id": "58351fbf-a626-445f-8d01-96801797aa57",
  "validator_hotkey": "5DWuP51n8GYLRrYfmyEgKxRgeNGiXLN7mBdLvyeqTeKgBnXb",
  "completions": [
    {
      "id": "b1b406fc-0998-4d66-9ff4-d884778340de",
      "completion_id": "2bb54602-fbb0-44ab-8bfb-3020422cbb9e",
      "validator_task_id": "58351fbf-a626-445f-8d01-96801797aa57",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width,initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Insurance Claims Network Analysis</title><style>body{margin:0;overflow:hidden;background:#1a1a1a;font-family:Arial,sans-serif}#canvas{display:block}#controls{position:fixed;bottom:20px;left:20px;background:rgba(0,0,0,0.7);padding:15px;border-radius:8px;color:#fff}#stats{position:fixed;top:20px;left:20px;background:rgba(0,0,0,0.7);padding:15px;border-radius:8px;color:#fff}.slider-container{margin-top:10px}.slider{width:200px;height:5px;-webkit-appearance:none;background:#2c3e50;outline:none;border-radius:3px}.slider::-webkit-slider-thumb{-webkit-appearance:none;width:15px;height:15px;border-radius:50%;background:#3498db;cursor:pointer}.instructions{position:fixed;top:20px;right:20px;background:rgba(0,0,0,0.7);padding:15px;border-radius:8px;color:#fff;font-size:14px}</style></head><body><canvas id=\\\"canvas\\\"></canvas><div id=\\\"controls\\\"><div>Pattern Detection Sensitivity</div><div class=\\\"slider-container\\\"><input class=\\\"slider\\\" id=\\\"sensitivity\\\" max=\\\"100\\\" min=\\\"1\\\" type=\\\"range\\\" value=\\\"50\\\"/></div></div><div id=\\\"stats\\\">Total Claims: 0<br/>Suspicious Connections: 0<br/>Risk Score: 0</div><div class=\\\"instructions\\\">Click and drag to create nodes<br/>Connect nodes by dragging between them</div><script src=\\\"index.js\\\"></script><script>const canvas=document.getElementById(\\\"canvas\\\");const ctx=canvas.getContext(\\\"2d\\\");const sensitivity=document.getElementById(\\\"sensitivity\\\");let width=canvas.width=window.innerWidth;let height=canvas.height=window.innerHeight;const nodes=[];const connections=[];let isDragging=false;let selectedNode=null;let connectingNode=null;let mouseX=0;let mouseY=0;let totalRiskScore=0;let suspiciousConnections=0;const riskLevels={LOW:{color:\\\"#2ecc71\\\",value:1},MEDIUM:{color:\\\"#f1c40f\\\",value:2},HIGH:{color:\\\"#e74c3c\\\",value:3}};class Node{constructor(x,y){this.x=x;this.y=y;this.vx=0;this.vy=0;this.radius=20;this.connections=[];this.riskLevel=Object.values(riskLevels)[Math.floor(Math.random()*3)];this.pulsePhase=Math.random()*Math.PI*2;this.spawnTime=Date.now();this.floatOffset=Math.random()*Math.PI*2}}class Connection{constructor(nodeA,nodeB){this.nodeA=nodeA;this.nodeB=nodeB;this.pulsePosition=0;this.suspicionLevel=0}}function createNode(x,y){const node=new Node(x,y);nodes.push(node);updateStats()}function connectNodes(nodeA,nodeB){if(nodeA&&nodeB&&nodeA!==nodeB&&!areNodesConnected(nodeA,nodeB)){const connection=new Connection(nodeA,nodeB);connections.push(connection);nodeA.connections.push(connection);nodeB.connections.push(connection);calculateSuspicion(connection)}}function areNodesConnected(nodeA,nodeB){return connections.some(conn=>(conn.nodeA===nodeA&&conn.nodeB===nodeB)||(conn.nodeA===nodeB&&conn.nodeB===nodeA))}function calculateSuspicion(connection){const sensitivityValue=sensitivity.value/100;const riskDifference=Math.abs(connection.nodeA.riskLevel.value-connection.nodeB.riskLevel.value);connection.suspicionLevel=Math.min(1,(3-riskDifference)*sensitivityValue);if(connection.suspicionLevel>0.7){suspiciousConnections++}updateStats()}function updateStats(){totalRiskScore=nodes.reduce((sum,node)=>sum+node.riskLevel.value,0);document.getElementById(\\\"stats\\\").innerHTML=`Total Claims: ${nodes.length}<br>Suspicious Connections: ${suspiciousConnections}<br>Risk Score: ${totalRiskScore}`}function drawNode(node){const age=Date.now()-node.spawnTime;const spawnScale=Math.min(1,age/500);ctx.save();const floatY=Math.sin(Date.now()*0.001+node.floatOffset)*3;ctx.translate(node.x,node.y+floatY);ctx.scale(spawnScale,spawnScale);const pulse=Math.sin(Date.now()*0.005+node.pulsePhase)*0.2+0.8;const glowIntensity=0.1+node.connections.length*0.05;ctx.beginPath();ctx.arc(0,0,node.radius+5,0,Math.PI*2);ctx.fillStyle=`rgba(${hexToRgb(node.riskLevel.color).join(\\\",\\\")},${glowIntensity})`;ctx.fill();ctx.beginPath();ctx.arc(0,0,node.radius*pulse,0,Math.PI*2);ctx.fillStyle=node.riskLevel.color;ctx.fill();ctx.restore()}function drawConnection(conn){const dx=conn.nodeB.x-conn.nodeA.x;const dy=conn.nodeB.y-conn.nodeA.y;const dist=Math.sqrt(dx*dx+dy*dy);const angle=Math.atan2(dy,dx);ctx.save();ctx.translate(conn.nodeA.x,conn.nodeA.y);ctx.rotate(angle);const gradient=ctx.createLinearGradient(0,0,dist,0);gradient.addColorStop(0,conn.nodeA.riskLevel.color);gradient.addColorStop(1,conn.nodeB.riskLevel.color);ctx.strokeStyle=gradient;ctx.lineWidth=2;ctx.beginPath();ctx.moveTo(0,0);ctx.lineTo(dist,0);ctx.stroke();if(conn.suspicionLevel>0.7){const particleCount=Math.floor(conn.suspicionLevel*10);for(let i=0;i<particleCount;i++){const pos=(Date.now()*0.1+i*50)%dist;const size=2+Math.sin(Date.now()*0.01+i)*2;ctx.beginPath();ctx.arc(pos,0,size,0,Math.PI*2);ctx.fillStyle=\\\"rgba(255,255,255,0.5)\\\";ctx.fill()}}ctx.restore()}function update(){nodes.forEach(node=>{node.x+=node.vx;node.y+=node.vy;node.vx*=0.95;node.vy*=0.95;if(node.x<node.radius)node.x=node.radius;if(node.x>width-node.radius)node.x=width-node.radius;if(node.y<node.radius)node.y=node.radius;if(node.y>height-node.radius)node.y=height-node.radius})}function draw(){ctx.clearRect(0,0,width,height);connections.forEach(drawConnection);nodes.forEach(drawNode);if(connectingNode){ctx.beginPath();ctx.moveTo(connectingNode.x,connectingNode.y);ctx.lineTo(mouseX,mouseY);ctx.strokeStyle=\\\"rgba(255,255,255,0.5)\\\";ctx.stroke()}}function animate(){update();draw();requestAnimationFrame(animate)}function hexToRgb(hex){const result=/^#?([a-f\\\\d]{2})([a-f\\\\d]{2})([a-f\\\\d]{2})$/i.exec(hex);return result?[parseInt(result[1],16),parseInt(result[2],16),parseInt(result[3],16)]:null}canvas.addEventListener(\\\"mousedown\\\",e=>{const rect=canvas.getBoundingClientRect();mouseX=e.clientX-rect.left;mouseY=e.clientY-rect.top;const clickedNode=nodes.find(node=>{const dx=node.x-mouseX;const dy=node.y-mouseY;return Math.sqrt(dx*dx+dy*dy)<node.radius});if(clickedNode){isDragging=true;selectedNode=clickedNode;connectingNode=clickedNode}else{createNode(mouseX,mouseY)}});canvas.addEventListener(\\\"mousemove\\\",e=>{const rect=canvas.getBoundingClientRect();mouseX=e.clientX-rect.left;mouseY=e.clientY-rect.top;if(isDragging&&selectedNode){selectedNode.x=mouseX;selectedNode.y=mouseY}});canvas.addEventListener(\\\"mouseup\\\",e=>{if(connectingNode){const rect=canvas.getBoundingClientRect();mouseX=e.clientX-rect.left;mouseY=e.clientY-rect.top;const targetNode=nodes.find(node=>{const dx=node.x-mouseX;const dy=node.y-mouseY;return Math.sqrt(dx*dx+dy*dy)<node.radius});if(targetNode&&targetNode!==connectingNode){connectNodes(connectingNode,targetNode)}}isDragging=false;selectedNode=null;connectingNode=null});window.addEventListener(\\\"resize\\\",()=>{width=canvas.width=window.innerWidth;height=canvas.height=window.innerHeight});sensitivity.addEventListener(\\\"input\\\",()=>{connections.forEach(calculateSuspicion)});animate();</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:42:29.623000Z",
      "updated_at": "2025-02-08T13:42:29.623000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "b9c3b171-e870-4863-a1ea-2f09f1415f17",
          "completion_id": "b1b406fc-0998-4d66-9ff4-d884778340de",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:42:29.623000Z",
          "updated_at": "2025-02-08T13:42:29.623000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    },
    {
      "id": "22be2e17-35d0-49e2-9a0d-a7f1dcd35174",
      "completion_id": "010d51b7-30a3-4afb-9b07-5b0fd12b9f8a",
      "validator_task_id": "58351fbf-a626-445f-8d01-96801797aa57",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width, initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Insurance Claims Investigation Board</title><style>body{margin:0;overflow:hidden;background-color:#1a1a2e;font-family:Arial,sans-serif}#canvas{display:block}#controls{position:fixed;bottom:20px;left:20px;background:rgba(0,0,0,0.7);padding:15px;border-radius:10px;color:#fff;z-index:100}#stats{position:fixed;top:20px;right:20px;background:rgba(0,0,0,0.7);padding:15px;border-radius:10px;color:#fff;text-align:right}.slider-container{margin:10px 0}.slider{width:200px}#instructions{position:fixed;top:20px;left:20px;background:rgba(0,0,0,0.7);padding:15px;border-radius:10px;color:#fff;font-size:14px}</style></head><body><canvas id=\\\"canvas\\\"></canvas><div id=\\\"controls\\\"><div class=\\\"slider-container\\\"><label>Pattern Detection Sensitivity<input class=\\\"slider\\\" id=\\\"sensitivitySlider\\\" max=\\\"100\\\" min=\\\"1\\\" type=\\\"range\\\" value=\\\"50\\\"/></label></div></div><div id=\\\"stats\\\"><div>Total Claims: <span id=\\\"totalClaims\\\">0</span></div><div>Suspicious Connections: <span id=\\\"suspiciousCount\\\">0</span></div><div>Total Risk Score: <span id=\\\"riskScore\\\">0</span></div></div><div id=\\\"instructions\\\">Click and drag to create nodes<br/>Drag between nodes to connect</div><script src=\\\"index.js\\\"></script><script>const canvas=document.getElementById('canvas');const ctx=canvas.getContext('2d');let width=canvas.width=window.innerWidth;let height=canvas.height=window.innerHeight;const nodes=[];const connections=[];let isDragging=false;let dragStartNode=null;let dragEndPos={x:0,y:0};let sensitivity=50;const sensitivitySlider=document.getElementById('sensitivitySlider');const totalClaimsEl=document.getElementById('totalClaims');const suspiciousCountEl=document.getElementById('suspiciousCount');const riskScoreEl=document.getElementById('riskScore');class Node{constructor(x,y){this.x=x;this.y=y;this.vx=0;this.vy=0;this.radius=30;this.riskLevel=Math.random();this.connections=[];this.pulsePhase=Math.random()*Math.PI*2;this.spawnProgress=0}update(){this.pulsePhase+=0.05;this.spawnProgress=Math.min(1,this.spawnProgress+0.05);this.x+=this.vx;this.y+=this.vy;this.vx*=0.95;this.vy*=0.95;if(this.x<this.radius)this.x=this.radius;if(this.x>width-this.radius)this.x=width-this.radius;if(this.y<this.radius)this.y=this.radius;if(this.y>height-this.radius)this.y=height-this.radius}draw(){const pulseRadius=this.radius*(1+0.1*Math.sin(this.pulsePhase));const spawnScale=this.spawnProgress*(1+0.2*Math.sin(this.pulsePhase));ctx.beginPath();ctx.arc(this.x,this.y,pulseRadius*spawnScale,0,Math.PI*2);let color;if(this.riskLevel<0.33){color='#4CAF50'}else if(this.riskLevel<0.66){color='#FFC107'}else{color='#f44336'}ctx.fillStyle=color;ctx.fill();ctx.strokeStyle='rgba(255,255,255,0.5)';ctx.lineWidth=2;ctx.stroke();if(this.connections.length>0){ctx.beginPath();ctx.arc(this.x,this.y,pulseRadius*1.2,0,Math.PI*2);ctx.strokeStyle=`rgba(255,255,255,${0.1*this.connections.length})`;ctx.stroke()}}}class Connection{constructor(nodeA,nodeB){this.nodeA=nodeA;this.nodeB=nodeB;this.flowPhase=0;this.suspicionLevel=0}update(){this.flowPhase+=0.02;this.suspicionLevel=Math.min(1,(this.nodeA.riskLevel+this.nodeB.riskLevel)/2*(sensitivity/50))}draw(){const gradient=ctx.createLinearGradient(this.nodeA.x,this.nodeA.y,this.nodeB.x,this.nodeB.y);const flowPos=(Math.sin(this.flowPhase)+1)/2;gradient.addColorStop(0,'rgba(255,255,255,0.1)');gradient.addColorStop(flowPos,'rgba(255,255,255,0.5)');gradient.addColorStop(1,'rgba(255,255,255,0.1)');ctx.beginPath();ctx.moveTo(this.nodeA.x,this.nodeA.y);ctx.lineTo(this.nodeB.x,this.nodeB.y);ctx.strokeStyle=gradient;ctx.lineWidth=2;ctx.stroke();if(this.suspicionLevel>0.7){this.drawParticles()}}}Connection.prototype.drawParticles=function(){const particleCount=5;const dx=this.nodeB.x-this.nodeA.x;const dy=this.nodeB.y-this.nodeA.y;for(let i=0;i<particleCount;i++){const t=((this.flowPhase*2+i/particleCount)%1);const x=this.nodeA.x+dx*t;const y=this.nodeA.y+dy*t;ctx.beginPath();ctx.arc(x,y,3,0,Math.PI*2);ctx.fillStyle=`rgba(255,100,100,${1-t})`;ctx.fill()}};function createNode(x,y){const node=new Node(x,y);nodes.push(node);updateStats()}function createConnection(nodeA,nodeB){if(nodeA&&nodeB&&nodeA!==nodeB&&!nodeA.connections.includes(nodeB)){const connection=new Connection(nodeA,nodeB);connections.push(connection);nodeA.connections.push(nodeB);nodeB.connections.push(nodeA);nodeA.vx+=(nodeB.x-nodeA.x)*0.05;nodeA.vy+=(nodeB.y-nodeA.y)*0.05;nodeB.vx+=(nodeA.x-nodeB.x)*0.05;nodeB.vy+=(nodeA.y-nodeB.y)*0.05;updateStats()}}function findNodeAtPosition(x,y){return nodes.find(node=>{const dx=node.x-x;const dy=node.y-y;return dx*dx+dy*dy<node.radius*node.radius})}function updateStats(){const totalClaims=nodes.length;const suspiciousConnections=connections.filter(conn=>conn.suspicionLevel>0.7).length;const totalRisk=nodes.reduce((sum,node)=>sum+node.riskLevel,0);totalClaimsEl.textContent=totalClaims;suspiciousCountEl.textContent=suspiciousConnections;riskScoreEl.textContent=Math.round(totalRisk*100)/100}function animate(){ctx.fillStyle='rgba(26,26,46,0.1)';ctx.fillRect(0,0,width,height);nodes.forEach(node=>node.update());connections.forEach(conn=>conn.update());connections.forEach(conn=>conn.draw());nodes.forEach(node=>node.draw());if(isDragging&&dragStartNode){ctx.beginPath();ctx.moveTo(dragStartNode.x,dragStartNode.y);ctx.lineTo(dragEndPos.x,dragEndPos.y);ctx.strokeStyle='rgba(255,255,255,0.5)';ctx.stroke()}requestAnimationFrame(animate)}canvas.addEventListener('mousedown',e=>{const rect=canvas.getBoundingClientRect();const x=e.clientX-rect.left;const y=e.clientY-rect.top;dragStartNode=findNodeAtPosition(x,y);if(!dragStartNode){createNode(x,y)}isDragging=true;dragEndPos={x,y}});canvas.addEventListener('mousemove',e=>{if(isDragging){const rect=canvas.getBoundingClientRect();dragEndPos.x=e.clientX-rect.left;dragEndPos.y=e.clientY-rect.top}});canvas.addEventListener('mouseup',e=>{if(isDragging){const rect=canvas.getBoundingClientRect();const x=e.clientX-rect.left;const y=e.clientY-rect.top;const endNode=findNodeAtPosition(x,y);if(dragStartNode&&endNode){createConnection(dragStartNode,endNode)}}isDragging=false;dragStartNode=null});sensitivitySlider.addEventListener('input',e=>{sensitivity=parseInt(e.target.value)});window.addEventListener('resize',()=>{width=canvas.width=window.innerWidth;height=canvas.height=window.innerHeight});animate();</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:42:29.623000Z",
      "updated_at": "2025-02-08T13:42:29.623000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "c9ead758-0aaa-4517-81fe-edaf73359922",
          "completion_id": "22be2e17-35d0-49e2-9a0d-a7f1dcd35174",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:42:29.623000Z",
          "updated_at": "2025-02-08T13:42:29.623000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    },
    {
      "id": "eb5f4f01-4e0e-4eb0-aa55-faacb32aefa1",
      "completion_id": "dedcac8e-193e-431e-81a7-4f186731b2ca",
      "validator_task_id": "58351fbf-a626-445f-8d01-96801797aa57",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width,initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Insurance Claims Network Analysis</title><style>body{margin:0;overflow:hidden;background:#1a1a1a;font-family:Arial,sans-serif}#canvas{background:#1a1a1a;border:2px solid #333;border-radius:10px}#controls{position:fixed;top:10px;right:10px;background:rgba(0,0,0,0.7);padding:15px;border-radius:8px;color:#fff}#stats{position:fixed;top:10px;left:10px;background:rgba(0,0,0,0.7);padding:15px;border-radius:8px;color:#fff}.slider{width:200px;margin:10px 0}.label{font-size:12px;color:#aaa}</style></head><body><canvas id=\\\"canvas\\\"></canvas><div id=\\\"controls\\\"><div class=\\\"label\\\">Pattern Detection Sensitivity</div><input class=\\\"slider\\\" id=\\\"sensitivity\\\" max=\\\"100\\\" min=\\\"1\\\" type=\\\"range\\\" value=\\\"50\\\"/></div><div id=\\\"stats\\\">Total Claims: <span id=\\\"totalClaims\\\">0</span><br/>Suspicious Connections: <span id=\\\"suspiciousCount\\\">0</span><br/>Risk Score: <span id=\\\"riskScore\\\">0</span></div><script src=\\\"index.js\\\"></script><script>const canvas=document.getElementById(\\\"canvas\\\"),ctx=canvas.getContext(\\\"2d\\\");let width=canvas.width=window.innerWidth,height=canvas.height=window.innerHeight;const nodes=[],connections=[],sensitivity=document.getElementById(\\\"sensitivity\\\"),totalClaimsEl=document.getElementById(\\\"totalClaims\\\"),suspiciousCountEl=document.getElementById(\\\"suspiciousCount\\\"),riskScoreEl=document.getElementById(\\\"riskScore\\\");let isDragging=!1,selectedNode=null,mouseX=0,mouseY=0,connectionStart=null,time=0;class Node{constructor(e,t){this.x=e,this.y=t,this.vx=0,this.vy=0,this.radius=20,this.riskLevel=Math.random(),this.connections=0,this.phase=Math.random()*Math.PI*2,this.lastPulse=0}update(){this.x+=this.vx,this.y+=this.vy,this.vx*=.95,this.vy*=.95;const e=Math.sin(time/50+this.phase)*2;this.y+=e*.1,this.x=Math.max(this.radius,Math.min(width-this.radius,this.x)),this.y=Math.max(this.radius,Math.min(height-this.radius,this.y))}draw(){ctx.beginPath(),ctx.arc(this.x,this.y,this.radius,0,2*Math.PI);const e=time-this.lastPulse<20?1-.05*(time-this.lastPulse):0,t=this.riskLevel<.33?\\\"#4CAF50\\\":this.riskLevel<.66?\\\"#FFC107\\\":\\\"#F44336\\\";ctx.fillStyle=t,ctx.strokeStyle=t,ctx.lineWidth=2,ctx.fill(),ctx.stroke(),this.connections>0&&(ctx.beginPath(),ctx.arc(this.x,this.y,this.radius+5+5*e,0,2*Math.PI),ctx.strokeStyle=`rgba(${this.connections>2?255:150}, ${this.connections>1?255:150}, 255, ${.2+.1*this.connections})`,ctx.stroke())}}class Connection{constructor(e,t){this.nodeA=e,this.nodeB=t,this.strength=1,this.pulsePosition=0,this.suspicious=Math.random()<.3&&e.riskLevel>.5&&t.riskLevel>.5}update(){this.strength*=.995,this.pulsePosition=(this.pulsePosition+.02)%1,this.strength<.1&&connections.splice(connections.indexOf(this),1)}draw(){const e=ctx.createLinearGradient(this.nodeA.x,this.nodeA.y,this.nodeB.x,this.nodeB.y);e.addColorStop(0,`rgba(150, 150, 255, ${this.strength*(.2+.3*this.pulsePosition)})`),e.addColorStop(1,`rgba(150, 150, 255, ${this.strength*(.2+.3*(1-this.pulsePosition))})`),ctx.beginPath(),ctx.moveTo(this.nodeA.x,this.nodeA.y),ctx.lineTo(this.nodeB.x,this.nodeB.y),ctx.strokeStyle=e,ctx.lineWidth=2,ctx.stroke(),this.suspicious&&(ctx.strokeStyle=`rgba(255, 100, 100, ${.3*this.strength})`,ctx.lineWidth=4,ctx.stroke())}}function createParticles(e,t,n){for(let r=0;r<10;r++){const i=Math.random()*Math.PI*2,s=Math.random()*2,o={x:e,y:t,vx:Math.cos(i)*s,vy:Math.sin(i)*s,life:1,color:n};particles.push(o)}}const particles=[];function updateParticles(){for(let e=particles.length-1;e>=0;e--){const t=particles[e];t.x+=t.vx,t.y+=t.vy,t.life-=.02,t.life<=0&&particles.splice(e,1)}}function drawParticles(){ctx.save();for(const e of particles)ctx.beginPath(),ctx.arc(e.x,e.y,2,0,2*Math.PI),ctx.fillStyle=`rgba(${e.color}, ${e.life})`,ctx.fill();ctx.restore()}function update(){time++,ctx.clearRect(0,0,width,height);for(const e of nodes)e.update();for(const e of connections)e.update();updateParticles();let e=0,t=0;for(const n of connections)n.suspicious&&(t++,e+=.1*(n.nodeA.riskLevel+n.nodeB.riskLevel));for(const e of connections)e.draw();for(const e of nodes)e.draw();drawParticles(),totalClaimsEl.textContent=nodes.length,suspiciousCountEl.textContent=t,riskScoreEl.textContent=Math.round(100*e),requestAnimationFrame(update)}canvas.addEventListener(\\\"mousedown\\\",e=>{const t=e.clientX,n=e.clientY,r=nodes.find(e=>Math.hypot(e.x-t,e.y-n)<e.radius);r?(selectedNode=r,connectionStart=r):(nodes.push(new Node(t,n)),selectedNode=nodes[nodes.length-1]),isDragging=!0}),canvas.addEventListener(\\\"mousemove\\\",e=>{mouseX=e.clientX,mouseY=e.clientY,isDragging&&selectedNode&&(selectedNode.x=mouseX,selectedNode.y=mouseY)}),canvas.addEventListener(\\\"mouseup\\\",()=>{if(connectionStart&&selectedNode&&connectionStart!==selectedNode){const e=new Connection(connectionStart,selectedNode);connections.push(e),connectionStart.connections++,selectedNode.connections++}isDragging=!1,selectedNode=null,connectionStart=null}),window.addEventListener(\\\"resize\\\",()=>{width=canvas.width=window.innerWidth,height=canvas.height=window.innerHeight}),update();</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:42:29.623000Z",
      "updated_at": "2025-02-08T13:42:29.623000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "60157eb7-9caf-4c3c-a299-cd56413a9b95",
          "completion_id": "eb5f4f01-4e0e-4eb0-aa55-faacb32aefa1",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:42:29.623000Z",
          "updated_at": "2025-02-08T13:42:29.623000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    },
    {
      "id": "058b417f-6e6f-4e4a-9df5-20e57126c4d8",
      "completion_id": "acec4b81-0bd3-41d5-a302-4dc8989de393",
      "validator_task_id": "58351fbf-a626-445f-8d01-96801797aa57",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width, initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Cybersecurity Network Visualization</title><style>body{margin:0;overflow:hidden;background-color:#0a0a1a;font-family:Arial,sans-serif}#canvas{display:block}#dashboard{position:absolute;top:10px;left:10px;color:#00ff88;font-size:14px;background:rgba(0,20,40,0.8);padding:15px;border-radius:5px;border:1px solid #00ff8855}#controls{position:absolute;bottom:10px;left:10px;background:rgba(0,20,40,0.8);padding:15px;border-radius:5px;border:1px solid #00ff8855;display:flex;flex-direction:column;gap:10px}#threatMeter{width:200px;height:20px;background:#001;border:1px solid #00ff8855;border-radius:10px;overflow:hidden}#threatFill{width:0%;height:100%;background:linear-gradient(90deg,#00ff88,#ff0000);transition:width 0.3s}label{color:#00ff88;font-size:14px}input[type=\\\"range\\\"]{width:200px;-webkit-appearance:none;background:rgba(0,255,136,0.1);height:8px;border-radius:4px;outline:none}input[type=\\\"range\\\"]::-webkit-slider-thumb{-webkit-appearance:none;width:16px;height:16px;background:#00ff88;border-radius:50%;cursor:pointer}.instructions{position:absolute;bottom:80px;left:10px;color:#00ff88;font-size:12px;background:rgba(0,20,40,0.8);padding:10px;border-radius:5px;border:1px solid #00ff8855}</style></head><body><canvas id=\\\"canvas\\\"></canvas><div id=\\\"dashboard\\\"><div>Total Events: <span id=\\\"eventCount\\\">0</span></div><div>Suspicious Connections: <span id=\\\"suspiciousCount\\\">0</span></div><div>Threat Score: <span id=\\\"threatScore\\\">0</span></div><div id=\\\"threatMeter\\\"><div id=\\\"threatFill\\\"></div></div></div><div id=\\\"controls\\\"><label>Pattern Detection Sensitivity<input id=\\\"sensitivity\\\" max=\\\"100\\\" min=\\\"1\\\" type=\\\"range\\\" value=\\\"50\\\"/></label></div><div class=\\\"instructions\\\">Click and drag to create nodes<br/>Drag between nodes to connect</div><script src=\\\"index.js\\\"></script><script>const canvas = document.getElementById('canvas');const ctx = canvas.getContext('2d');const sensitivity = document.getElementById('sensitivity');const eventCountEl = document.getElementById('eventCount');const suspiciousCountEl = document.getElementById('suspiciousCount');const threatScoreEl = document.getElementById('threatScore');const threatFill = document.getElementById('threatFill');let width = canvas.width = window.innerWidth;let height = canvas.height = window.innerHeight;const nodes = [];const connections = [];let isDragging = false;let dragStartNode = null;let dragEndPos = null;let mousePos = {x: 0, y: 0};class Node {constructor(x, y) {this.x = x;this.y = y;this.vx = (Math.random() - 0.5) * 0.5;this.vy = (Math.random() - 0.5) * 0.5;this.radius = 20;this.threatLevel = Math.floor(Math.random() * 3);this.connections = 0;this.pulsePhase = Math.random() * Math.PI * 2;this.spawnProgress = 0;}getColor() {const colors = ['#00ff88', '#ffff00', '#ff4444'];return colors[this.threatLevel];}update() {this.x += this.vx;this.y += this.vy;if (this.x < this.radius || this.x > width - this.radius) this.vx *= -0.9;if (this.y < this.radius || this.y > height - this.radius) this.vy *= -0.9;this.pulsePhase += 0.05;this.spawnProgress = Math.min(1, this.spawnProgress + 0.05);}draw() {const pulse = Math.sin(this.pulsePhase) * 0.2 + 0.8;const radius = this.radius * this.spawnProgress;ctx.beginPath();ctx.arc(this.x, this.y, radius, 0, Math.PI * 2);const gradient = ctx.createRadialGradient(this.x, this.y, 0, this.x, this.y, radius * 1.5);gradient.addColorStop(0, this.getColor() + '88');gradient.addColorStop(1, this.getColor() + '00');ctx.fillStyle = gradient;ctx.fill();ctx.lineWidth = 2 * pulse;ctx.strokeStyle = this.getColor();ctx.stroke();}}class Connection {constructor(nodeA, nodeB) {this.nodeA = nodeA;this.nodeB = nodeB;this.flowOffset = 0;this.suspicious = false;}update() {this.flowOffset = (this.flowOffset + 0.01) % 1;const sensitivity = parseInt(document.getElementById('sensitivity').value);this.suspicious = (this.nodeA.threatLevel + this.nodeB.threatLevel) > sensitivity / 33;}draw() {const dx = this.nodeB.x - this.nodeA.x;const dy = this.nodeB.y - this.nodeA.y;const gradient = ctx.createLinearGradient(this.nodeA.x, this.nodeA.y, this.nodeB.x, this.nodeB.y);const color = this.suspicious ? '#ff4444' : '#00ff88';gradient.addColorStop(this.flowOffset, color + '00');gradient.addColorStop((this.flowOffset + 0.5) % 1, color + '88');gradient.addColorStop((this.flowOffset + 1) % 1, color + '00');ctx.beginPath();ctx.moveTo(this.nodeA.x, this.nodeA.y);ctx.lineTo(this.nodeB.x, this.nodeB.y);ctx.strokeStyle = gradient;ctx.lineWidth = 3;ctx.stroke();if (this.suspicious) {createParticles(this.nodeA.x, this.nodeA.y);createParticles(this.nodeB.x, this.nodeB.y);}}}const particles = [];function createParticles(x, y) {if (Math.random() > 0.1) return;for (let i = 0; i < 3; i++) {particles.push({x, y,vx: (Math.random() - 0.5) * 2,vy: (Math.random() - 0.5) * 2,life: 1});}}function updateParticles() {for (let i = particles.length - 1; i >= 0; i--) {const p = particles[i];p.x += p.vx;p.y += p.vy;p.life -= 0.02;if (p.life <= 0) particles.splice(i, 1);else {ctx.beginPath();ctx.arc(p.x, p.y, 2, 0, Math.PI * 2);ctx.fillStyle = `rgba(255, 68, 68, ${p.life})`;ctx.fill();}}}function updateStats() {eventCountEl.textContent = nodes.length;let suspicious = 0;let threatScore = 0;connections.forEach(conn => {if (conn.suspicious) suspicious++;threatScore += (conn.nodeA.threatLevel + conn.nodeB.threatLevel) / 2;});suspiciousCountEl.textContent = suspicious;threatScoreEl.textContent = Math.round(threatScore);threatFill.style.width = `${Math.min(100, (threatScore / nodes.length) * 50)}%`;}function animate() {ctx.fillStyle = 'rgba(10, 10, 26, 0.1)';ctx.fillRect(0, 0, width, height);nodes.forEach(node => node.update());connections.forEach(conn => conn.update());connections.forEach(conn => conn.draw());nodes.forEach(node => node.draw());updateParticles();updateStats();if (isDragging && dragStartNode && dragEndPos) {ctx.beginPath();ctx.moveTo(dragStartNode.x, dragStartNode.y);ctx.lineTo(dragEndPos.x, dragEndPos.y);ctx.strokeStyle = '#00ff8844';ctx.lineWidth = 2;ctx.stroke();}requestAnimationFrame(animate);}canvas.addEventListener('mousedown', e => {const rect = canvas.getBoundingClientRect();const x = e.clientX - rect.left;const y = e.clientY - rect.top;isDragging = true;dragStartNode = nodes.find(node => {const dx = node.x - x;const dy = node.y - y;return Math.sqrt(dx * dx + dy * dy) < node.radius;});if (!dragStartNode) {const node = new Node(x, y);nodes.push(node);dragStartNode = node;}mousePos = {x, y};});canvas.addEventListener('mousemove', e => {const rect = canvas.getBoundingClientRect();mousePos = {x: e.clientX - rect.left,y: e.clientY - rect.top};if (isDragging) {dragEndPos = mousePos;}});canvas.addEventListener('mouseup', () => {if (dragStartNode && dragEndPos) {const endNode = nodes.find(node => {const dx = node.x - dragEndPos.x;const dy = node.y - dragEndPos.y;return Math.sqrt(dx * dx + dy * dy) < node.radius;});if (endNode && endNode !== dragStartNode) {const exists = connections.some(conn => (conn.nodeA === dragStartNode && conn.nodeB === endNode) ||(conn.nodeA === endNode && conn.nodeB === dragStartNode));if (!exists) {connections.push(new Connection(dragStartNode, endNode));dragStartNode.connections++;endNode.connections++;}}}isDragging = false;dragStartNode = null;dragEndPos = null;});window.addEventListener('resize', () => {width = canvas.width = window.innerWidth;height = canvas.height = window.innerHeight;});animate();</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:42:29.623000Z",
      "updated_at": "2025-02-08T13:42:29.623000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "b0f0b515-2b29-495d-ae6a-bcb27e7d6007",
          "completion_id": "058b417f-6e6f-4e4a-9df5-20e57126c4d8",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:42:29.623000Z",
          "updated_at": "2025-02-08T13:42:29.623000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    }
  ],
  "ground_truths": [
    {
      "id": "a2e86d7a-e60c-4d2d-99d7-1493cd383ecc",
      "validator_task_id": "58351fbf-a626-445f-8d01-96801797aa57",
      "obfuscated_model_id": "2bb54602-fbb0-44ab-8bfb-3020422cbb9e",
      "real_model_id": "2bb54602-fbb0-44ab-8bfb-3020422cbb9e",
      "rank_id": 0,
      "ground_truth_score": 0.0,
      "created_at": "2025-02-08T13:42:29.623000Z",
      "updated_at": "2025-02-08T13:42:29.623000Z",
      "validator_task_relation": null
    },
    {
      "id": "2000ff6e-d32d-4563-9c98-b2acf44dc422",
      "validator_task_id": "58351fbf-a626-445f-8d01-96801797aa57",
      "obfuscated_model_id": "010d51b7-30a3-4afb-9b07-5b0fd12b9f8a",
      "real_model_id": "010d51b7-30a3-4afb-9b07-5b0fd12b9f8a",
      "rank_id": 1,
      "ground_truth_score": 1.0,
      "created_at": "2025-02-08T13:42:29.623000Z",
      "updated_at": "2025-02-08T13:42:29.623000Z",
      "validator_task_relation": null
    },
    {
      "id": "764eb941-69d0-419e-b223-0d4f6eb12be5",
      "validator_task_id": "58351fbf-a626-445f-8d01-96801797aa57",
      "obfuscated_model_id": "dedcac8e-193e-431e-81a7-4f186731b2ca",
      "real_model_id": "dedcac8e-193e-431e-81a7-4f186731b2ca",
      "rank_id": 2,
      "ground_truth_score": 2.0,
      "created_at": "2025-02-08T13:42:29.623000Z",
      "updated_at": "2025-02-08T13:42:29.623000Z",
      "validator_task_relation": null
    },
    {
      "id": "26b5c7e2-5776-41e9-9481-ac480a897d60",
      "validator_task_id": "58351fbf-a626-445f-8d01-96801797aa57",
      "obfuscated_model_id": "acec4b81-0bd3-41d5-a302-4dc8989de393",
      "real_model_id": "acec4b81-0bd3-41d5-a302-4dc8989de393",
      "rank_id": 3,
      "ground_truth_score": 3.0,
      "created_at": "2025-02-08T13:42:29.623000Z",
      "updated_at": "2025-02-08T13:42:29.623000Z",
      "validator_task_relation": null
    }
  ],
  "miner_responses": [
    {
      "id": "7ce6af3d-3965-4d85-8489-b6c5243cba5a",
      "validator_task_id": "58351fbf-a626-445f-8d01-96801797aa57",
      "dojo_task_id": "88ff2274-6201-4030-ac38-1e2406310f4e",
      "hotkey": "5HBm7gmcyrqjCpyFwMBM6HzZrNmM3JBHKJHW2HsDUvwNFJUS",
      "coldkey": "5HU3tezTitX4gq5emvpbspqFzzV9dfuR2BEkx3SG4Zf1ucym",
      "task_result": "{}",
      "created_at": "2025-02-08T13:42:29.623000Z",
      "updated_at": "2025-02-08T13:42:29.623000Z",
      "validator_task_relation": null,
      "scores": []
    },
    {
      "id": "cb4d4c3b-78be-4c99-8fa1-b2286f1e7c5d",
      "validator_task_id": "58351fbf-a626-445f-8d01-96801797aa57",
      "dojo_task_id": "1f940de9-dd28-4753-a049-3233eac2d193",
      "hotkey": "5DyMoTsYaP1cjoYahSHtGKmwu6bRva6XJ3ha6i1uMpm5oSS2",
      "coldkey": "5D8ARXP7kza9qrdNgGtXgMHTf6SxsLLeVjE8cf3C4FAhEpNe",
      "task_result": "{}",
      "created_at": "2025-02-08T13:42:29.623000Z",
      "updated_at": "2025-02-08T13:42:29.623000Z",
      "validator_task_relation": null,
      "scores": []
    }
  ],
  "created_at": "2025-02-08T13:42:29.623000+00:00",
  "metadata": null
}
{
  "validator_task_id": "a99612f2-dd85-4dcd-b3f1-efaee88d72bf",
  "validator_hotkey": "5DWuP51n8GYLRrYfmyEgKxRgeNGiXLN7mBdLvyeqTeKgBnXb",
  "completions": [
    {
      "id": "d45865c2-356e-4965-8a65-8423a2498b04",
      "completion_id": "3ff4756e-233c-4a23-9aa1-f8bd01ec220f",
      "validator_task_id": "a99612f2-dd85-4dcd-b3f1-efaee88d72bf",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width,initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Interactive Garden</title><style>body{margin:0;display:flex;flex-direction:column;align-items:center;justify-content:center;min-height:100vh;background:#87CEEB;transition:background 2s;font-family:Arial,sans-serif;overflow:hidden}#garden{display:grid;grid-template-columns:repeat(6,80px);gap:10px;padding:20px;background:rgba(139,69,19,0.3);border-radius:10px}#controls{position:fixed;bottom:20px;background:rgba(255,255,255,0.2);padding:15px;border-radius:10px;display:flex;gap:20px;align-items:center}.cell{width:80px;height:80px;background:rgba(139,69,19,0.2);border-radius:5px;cursor:pointer;position:relative}.control-group{display:flex;flex-direction:column;align-items:center;gap:5px}label{color:#fff;text-shadow:1px 1px 2px rgba(0,0,0,0.5);font-size:12px}input[type=\\\"range\\\"]{width:100px}.instructions{position:fixed;top:20px;color:#fff;text-shadow:1px 1px 2px rgba(0,0,0,0.5);font-size:14px;text-align:center;opacity:0.8}</style></head><body><div id=\\\"garden\\\"></div><div id=\\\"controls\\\"><div class=\\\"control-group\\\"><label>Time of Day</label><input id=\\\"timeSlider\\\" max=\\\"100\\\" min=\\\"0\\\" type=\\\"range\\\" value=\\\"50\\\"/></div><div class=\\\"control-group\\\"><label>Wind Strength</label><input id=\\\"windSlider\\\" max=\\\"100\\\" min=\\\"0\\\" type=\\\"range\\\" value=\\\"20\\\"/></div><div class=\\\"control-group\\\"><label>Growth Speed</label><input id=\\\"speedSlider\\\" max=\\\"100\\\" min=\\\"1\\\" type=\\\"range\\\" value=\\\"50\\\"/></div></div><script src=\\\"index.js\\\"></script><script>const garden=document.getElementById('garden');const timeSlider=document.getElementById('timeSlider');const windSlider=document.getElementById('windSlider');const speedSlider=document.getElementById('speedSlider');const GRID_SIZE=6;const cells=[];let time=50;let wind=20;let particles=[];class Plant{constructor(cell){this.cell=cell;this.growth=0;this.maxGrowth=100;this.stem=[];this.leaves=[];this.petals=[];this.stamens=[];this.openness=1;this.swayOffset=Math.random()*Math.PI*2;this.color=`hsl(${120+Math.random()*40},${70+Math.random()*30}%,${40+Math.random()*20}%)`;this.flowerColor=`hsl(${Math.random()*360},${70+Math.random()*30}%,${70+Math.random()*20}%)`}update(dt){if(this.growth<this.maxGrowth){this.growth+=dt*parseFloat(speedSlider.value)/500}const timeOfDay=parseFloat(timeSlider.value)/100;const targetOpenness=Math.sin(timeOfDay*Math.PI);this.openness+=(targetOpenness-this.openness)*0.1;const windStrength=parseFloat(windSlider.value)/100;this.swayOffset+=dt*windStrength*0.01;if(Math.random()<0.01&&this.growth>=this.maxGrowth&&this.openness>0.5){createParticle(this.cell,'pollen')}}draw(ctx){const height=70*Math.min(1,this.growth/this.maxGrowth);const stemSegments=10;const segmentHeight=height/stemSegments;ctx.save();ctx.translate(40,80);const windEffect=Math.sin(this.swayOffset)*parseFloat(windSlider.value)/50;ctx.rotate(windEffect);ctx.beginPath();ctx.moveTo(0,0);let x=0;for(let i=0;i<stemSegments;i++){x=Math.sin(i/2+this.swayOffset)*3;ctx.lineTo(x,-i*segmentHeight)}ctx.strokeStyle=this.color;ctx.lineWidth=3;ctx.stroke();if(this.growth>20){for(let i=2;i<stemSegments-2;i+=2){const leafSize=10*(1-i/stemSegments)*Math.min(1,(this.growth-20)/30);ctx.save();ctx.translate(x,-i*segmentHeight);ctx.rotate((i%4-1.5)*0.5+windEffect);ctx.beginPath();ctx.ellipse(0,0,leafSize,leafSize/2,0,0,Math.PI*2);ctx.fillStyle=this.color;ctx.fill();ctx.restore()}}if(this.growth>50){const flowerSize=15*Math.min(1,(this.growth-50)/50)*this.openness;const petalCount=12;for(let i=0;i<petalCount;i++){const angle=i*(Math.PI*2/petalCount);const petalX=Math.cos(angle)*flowerSize;const petalY=Math.sin(angle)*flowerSize;ctx.save();ctx.translate(x,-height+5);ctx.rotate(angle+windEffect);ctx.beginPath();ctx.ellipse(petalX/2,-petalY/2,flowerSize/2,flowerSize/4,angle,0,Math.PI*2);ctx.fillStyle=this.color;ctx.fill();ctx.restore()}ctx.save();ctx.translate(x,-height+5);ctx.beginPath();ctx.arc(0,0,flowerSize/3,0,Math.PI*2);ctx.fillStyle='#FFD700';ctx.fill();for(let i=0;i<8;i++){const angle=i*(Math.PI*2/8);const stamenLength=flowerSize/4;ctx.save();ctx.rotate(angle);ctx.beginPath();ctx.moveTo(0,0);ctx.lineTo(stamenLength,0);ctx.strokeStyle='#FFD700';ctx.lineWidth=2;ctx.stroke();ctx.restore()}ctx.restore()}ctx.restore()}}function createParticle(cell,type){const rect=cell.getBoundingClientRect();const particle={x:rect.left+rect.width/2,y:rect.top+rect.height/2,type:type,life:1,velocity:{x:(Math.random()-0.5)*2,y:type==='pollen'?-1:2}};particles.push(particle)}function updateParticles(){particles=particles.filter(p=>{p.life-=0.01;p.x+=p.velocity.x;p.y+=p.velocity.y;return p.life>0})}function drawParticles(){const canvas=document.createElement('canvas');canvas.width=window.innerWidth;canvas.height=window.innerHeight;const ctx=canvas.getContext('2d');particles.forEach(p=>{ctx.beginPath();ctx.arc(p.x,p.y,p.type==='pollen'?2:3,0,Math.PI*2);ctx.fillStyle=p.type==='pollen'?`rgba(255, 255, 0, ${p.life})`:`rgba(139, 69, 19, ${p.life})`;ctx.fill()})}for(let i=0;i<GRID_SIZE*GRID_SIZE;i++){const cell=document.createElement('div');cell.className='cell';cell.onclick=()=>{if(!cells[i].plant){cells[i].plant=new Plant(cell)}};cell.ondblclick=()=>{if(cells[i].plant&&cells[i].plant.growth>=100){for(let j=0;j<10;j++){createParticle(cell,'seed')}cells[i].plant=null}};garden.appendChild(cell);cells.push({element:cell,plant:null})}function update(){const canvas=document.createElement('canvas');canvas.width=80;canvas.height=80;const ctx=canvas.getContext('2d');const dt=16;time=parseFloat(timeSlider.value);document.body.style.background=`hsl(200,80%,${50-time/4}%)`;cells.forEach((cell,index)=>{if(cell.plant){cell.plant.update(dt);ctx.clearRect(0,0,80,80);cell.plant.draw(ctx);cell.element.style.background=`url(${canvas.toDataURL()})`}else{cell.element.style.background='rgba(139, 69, 19, 0.2)'}});updateParticles();drawParticles()}setInterval(update,16);const instructions=document.createElement('div');instructions.className='instructions';instructions.textContent='Click to plant a seed. Double-click mature plants to harvest.';document.body.appendChild(instructions);</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:41:25.015000Z",
      "updated_at": "2025-02-08T13:41:25.015000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "59e1af64-0e37-412c-a65b-32f636439e8f",
          "completion_id": "d45865c2-356e-4965-8a65-8423a2498b04",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:41:25.015000Z",
          "updated_at": "2025-02-08T13:41:25.015000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    },
    {
      "id": "f27c66eb-aa57-4b2d-a4bc-1d9ab6e9b51e",
      "completion_id": "603c4a27-d3d6-4681-a7b2-c3673837f610",
      "validator_task_id": "a99612f2-dd85-4dcd-b3f1-efaee88d72bf",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width,initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Interactive Garden</title><style>body{margin:0;overflow:hidden;background:#87CEEB;display:flex;flex-direction:column;align-items:center;justify-content:center;height:100vh;font-family:Arial,sans-serif}#garden{background:#654321;border-radius:10px;padding:10px;box-shadow:0 0 20px rgba(0,0,0,0.3)}#controls{position:fixed;bottom:20px;background:rgba(255,255,255,0.1);padding:10px;border-radius:10px;display:flex;gap:20px;align-items:center}.control{display:flex;flex-direction:column;align-items:center;color:#fff;font-size:12px}input[type=range]{width:100px}.instructions{position:fixed;top:20px;color:#fff;font-size:14px;text-align:center;background:rgba(0,0,0,0.2);padding:10px;border-radius:5px}</style></head><body><canvas id=\\\"garden\\\"></canvas><div class=\\\"instructions\\\">Click to plant seeds. Double-click mature plants to collect seeds.</div><div id=\\\"controls\\\"><div class=\\\"control\\\"><label>Time of Day</label><input id=\\\"timeSlider\\\" max=\\\"100\\\" min=\\\"0\\\" type=\\\"range\\\" value=\\\"50\\\"/></div><div class=\\\"control\\\"><label>Wind Strength</label><input id=\\\"windSlider\\\" max=\\\"100\\\" min=\\\"0\\\" type=\\\"range\\\" value=\\\"20\\\"/></div><div class=\\\"control\\\"><label>Growth Speed</label><input id=\\\"speedSlider\\\" max=\\\"100\\\" min=\\\"1\\\" type=\\\"range\\\" value=\\\"50\\\"/></div></div><script src=\\\"index.js\\\"></script><script>const canvas=document.getElementById('garden'),ctx=canvas.getContext('2d');let width=canvas.width=600,height=canvas.height=600;const GRID_SIZE=6,CELL_SIZE=width/GRID_SIZE,plants=[],timeSlider=document.getElementById('timeSlider'),windSlider=document.getElementById('windSlider'),speedSlider=document.getElementById('speedSlider');let time=0.5,wind=0.2,growthSpeed=0.5;class Plant{constructor(x,y){this.x=x;this.y=y;this.growth=0;this.stemPoints=[];this.leaves=[];this.petals=[];this.alive=true;this.swayOffset=Math.random()*Math.PI*2;this.color={stem:'#2d5a27',leaf:'#3a7a3a',petal:this.getRandomPetalColor()}}getRandomPetalColor(){const colors=['#ff69b4','#ff1493','#da70d6','#ba55d3','#9370db'];return colors[Math.floor(Math.random()*colors.length)]}update(dt){if(!this.alive)return;this.growth+=dt*growthSpeed;if(this.growth>1)this.growth=1;const windEffect=Math.sin(time*2+this.swayOffset)*wind;this.generateStem(windEffect);if(this.growth>0.3)this.generateLeaves(windEffect);if(this.growth>0.7)this.generatePetals(windEffect)}generateStem(windEffect){this.stemPoints=[];let currentY=CELL_SIZE;const segments=10;for(let i=0;i<=segments;i++){const progress=i/segments;const x=CELL_SIZE/2+Math.sin(progress*3+time+this.swayOffset)*10*windEffect;const y=CELL_SIZE-progress*CELL_SIZE*this.growth;this.stemPoints.push({x,y})}}generateLeaves(windEffect){this.leaves=[];if(this.growth<0.3)return;const leafCount=3;for(let i=0;i<leafCount;i++){const progress=(i+1)/(leafCount+1);const basePoint=this.stemPoints[Math.floor(progress*this.stemPoints.length)];if(basePoint){const angle=Math.sin(time+this.swayOffset)*0.5*windEffect;const size=15*this.growth;this.leaves.push({x:basePoint.x,y:basePoint.y,angle:angle+(i%2?1:-1)*Math.PI/4,size})}}}generatePetals(windEffect){this.petals=[];if(this.growth<0.7)return;const petalCount=12;const openness=Math.sin(time*Math.PI)*.5+.5;for(let i=0;i<petalCount;i++){const angle=i*(Math.PI*2/petalCount)+Math.sin(time+this.swayOffset)*0.1*windEffect;const distance=15*this.growth*openness;const x=this.stemPoints[0].x+Math.cos(angle)*distance;const y=this.stemPoints[0].y+Math.sin(angle)*distance;this.petals.push({x,y,angle})}}draw(){if(!this.alive)return;ctx.strokeStyle=this.color.stem;ctx.lineWidth=3;ctx.beginPath();this.stemPoints.forEach((point,i)=>{if(i===0)ctx.moveTo(this.x+point.x,this.y+point.y);else ctx.lineTo(this.x+point.x,this.y+point.y)});ctx.stroke();this.leaves.forEach(leaf=>{ctx.save();ctx.translate(this.x+leaf.x,this.y+leaf.y);ctx.rotate(leaf.angle);ctx.fillStyle=this.color.leaf;ctx.beginPath();ctx.ellipse(0,0,leaf.size,leaf.size/2,0,0,Math.PI*2);ctx.fill();ctx.restore()});if(this.growth>0.7){ctx.fillStyle='#ffd700';ctx.beginPath();ctx.arc(this.x+this.stemPoints[0].x,this.y+this.stemPoints[0].y,5,0,Math.PI*2);ctx.fill()}this.petals.forEach(petal=>{ctx.save();ctx.translate(this.x+petal.x,this.y+petal.y);ctx.rotate(petal.angle);ctx.fillStyle=this.color.petal;ctx.beginPath();ctx.ellipse(0,0,10,5,0,0,Math.PI*2);ctx.fill();ctx.restore()})}}function update(){time+=0.01;wind=windSlider.value/100;growthSpeed=speedSlider.value/100;const dayProgress=timeSlider.value/100;const skyColor=`hsl(200,60%,${Math.max(5,dayProgress*70)}%)`;document.body.style.background=skyColor;plants.forEach(plant=>plant.update(0.016));draw();requestAnimationFrame(update)}function draw(){ctx.clearRect(0,0,width,height);for(let y=0;y<GRID_SIZE;y++){for(let x=0;x<GRID_SIZE;x++){ctx.fillStyle='#3d2616';ctx.fillRect(x*CELL_SIZE,y*CELL_SIZE,CELL_SIZE,CELL_SIZE);ctx.strokeStyle='#2a1a0f';ctx.strokeRect(x*CELL_SIZE,y*CELL_SIZE,CELL_SIZE,CELL_SIZE)}}plants.forEach(plant=>plant.draw())}canvas.addEventListener('click',e=>{const rect=canvas.getBoundingClientRect();const x=Math.floor((e.clientX-rect.left)/CELL_SIZE)*CELL_SIZE;const y=Math.floor((e.clientY-rect.top)/CELL_SIZE)*CELL_SIZE;if(!plants.some(p=>p.x===x&&p.y===y)){plants.push(new Plant(x,y))}});canvas.addEventListener('dblclick',e=>{const rect=canvas.getBoundingClientRect();const x=Math.floor((e.clientX-rect.left)/CELL_SIZE)*CELL_SIZE;const y=Math.floor((e.clientY-rect.top)/CELL_SIZE)*CELL_SIZE;const index=plants.findIndex(p=>p.x===x&&p.y===y);if(index!==-1&&plants[index].growth>0.9){plants[index].alive=false;setTimeout(()=>plants.splice(index,1),1000);createSeedParticles(x+CELL_SIZE/2,y+CELL_SIZE/2)}});function createSeedParticles(x,y){for(let i=0;i<20;i++){const angle=Math.random()*Math.PI*2;const speed=2+Math.random()*2;const particle={x,y,vx:Math.cos(angle)*speed,vy:Math.sin(angle)*speed,life:1};setTimeout(()=>{ctx.fillStyle=`rgba(255,215,0,${particle.life})`;ctx.beginPath();ctx.arc(particle.x,particle.y,2,0,Math.PI*2);ctx.fill();particle.x+=particle.vx;particle.y+=particle.vy;particle.life-=0.02},i*50)}}window.addEventListener('resize',()=>{width=canvas.width=Math.min(600,window.innerWidth-40);height=canvas.height=width});update();</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:41:25.015000Z",
      "updated_at": "2025-02-08T13:41:25.015000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "07a7e1ac-e376-496c-badd-1cbd37014749",
          "completion_id": "f27c66eb-aa57-4b2d-a4bc-1d9ab6e9b51e",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:41:25.015000Z",
          "updated_at": "2025-02-08T13:41:25.015000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    },
    {
      "id": "268d6a1e-0c52-4f86-9b03-59f16d3b6cec",
      "completion_id": "5f257537-9d91-49ae-8724-3e710dac0fef",
      "validator_task_id": "a99612f2-dd85-4dcd-b3f1-efaee88d72bf",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width,initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Interactive Garden</title><style>body{margin:0;overflow:hidden;background:#87CEEB;font-family:Arial,sans-serif;display:flex;flex-direction:column;align-items:center;justify-content:center;height:100vh}#garden{background:#654321;border-radius:8px;margin:20px}.controls{position:fixed;bottom:20px;background:rgba(255,255,255,0.9);padding:15px;border-radius:8px;display:flex;gap:20px;align-items:center}.control-group{display:flex;flex-direction:column;align-items:center;gap:5px}label{font-size:12px;color:#333}.slider{width:100px}select{padding:5px;border-radius:4px}#info{position:fixed;top:20px;color:#fff;text-align:center;font-size:14px;text-shadow:1px 1px 2px rgba(0,0,0,0.5)}</style></head><body><canvas id=\\\"garden\\\"></canvas><div class=\\\"controls\\\"><div class=\\\"control-group\\\"><label>Time of Day</label><input class=\\\"slider\\\" id=\\\"timeSlider\\\" max=\\\"100\\\" min=\\\"0\\\" type=\\\"range\\\" value=\\\"50\\\"/></div><div class=\\\"control-group\\\"><label>Wind Strength</label><input class=\\\"slider\\\" id=\\\"windSlider\\\" max=\\\"100\\\" min=\\\"0\\\" type=\\\"range\\\" value=\\\"20\\\"/></div><div class=\\\"control-group\\\"><label>Growth Speed</label><input class=\\\"slider\\\" id=\\\"speedSlider\\\" max=\\\"100\\\" min=\\\"1\\\" type=\\\"range\\\" value=\\\"50\\\"/></div><div class=\\\"control-group\\\"><label>Weather</label><select id=\\\"weather\\\"><option value=\\\"sunny\\\">Sunny</option><option value=\\\"rainy\\\">Rainy</option><option value=\\\"cloudy\\\">Cloudy</option></select></div></div><div id=\\\"info\\\">Click to plant seeds. Double-click mature plants to collect seeds.</div><script src=\\\"index.js\\\"></script><script>const canvas=document.getElementById('garden'),ctx=canvas.getContext('2d');let width=canvas.width=600,height=canvas.height=600;const GRID_SIZE=6,CELL_SIZE=width/GRID_SIZE,plants=[],particles=[];let time=50,wind=20,growthSpeed=50,weather='sunny',frame=0;class Plant{constructor(x,y){this.x=x*CELL_SIZE+CELL_SIZE/2;this.y=(y+1)*CELL_SIZE;this.gridX=x;this.gridY=y;this.height=0;this.maxHeight=CELL_SIZE*.8;this.growth=0;this.leaves=[];this.petals=[];this.stamens=[];this.swayOffset=Math.random()*Math.PI*2;this.alive=true}update(){if(!this.alive)return;this.growth+=growthSpeed/1000;if(this.growth>1)this.growth=1;this.height=this.maxHeight*Math.min(this.growth,1);if(this.growth>.3&&this.leaves.length<3){this.leaves.push({height:this.height*.3+this.leaves.length*20,angle:this.leaves.length%2?-.3:.3,size:10})}if(this.growth>.7&&this.petals.length<8){const angle=this.petals.length*(Math.PI*2/8);this.petals.push({angle,openness:0})}if(this.growth>.8&&this.stamens.length<5){this.stamens.push({angle:Math.random()*Math.PI*2,length:5})}this.petals.forEach(p=>{const targetOpen=time>50&&weather!=='rainy'?1:0;p.openness+=(targetOpen-p.openness)*.1})}draw(){const windOffset=Math.sin(this.swayOffset+frame/20)*wind/500;ctx.save();ctx.translate(this.x,this.y);ctx.rotate(windOffset);ctx.beginPath();ctx.moveTo(0,0);ctx.quadraticCurveTo(windOffset*50,-this.height/2,0,-this.height);ctx.strokeStyle='#228B22';ctx.lineWidth=3;ctx.stroke();this.leaves.forEach(leaf=>{ctx.save();ctx.translate(0,-leaf.height);ctx.rotate(leaf.angle+windOffset);ctx.beginPath();ctx.ellipse(0,0,leaf.size,leaf.size/2,0,0,Math.PI*2);ctx.fillStyle='#32CD32';ctx.fill();ctx.restore()});if(this.growth>.7){ctx.save();ctx.translate(0,-this.height);this.petals.forEach(petal=>{ctx.save();ctx.rotate(petal.angle);ctx.translate(10*petal.openness,0);ctx.beginPath();ctx.ellipse(0,0,15,8,0,0,Math.PI*2);ctx.fillStyle='#FF69B4';ctx.fill();ctx.restore()});this.stamens.forEach(stamen=>{ctx.save();ctx.rotate(stamen.angle);ctx.beginPath();ctx.moveTo(0,0);ctx.lineTo(stamen.length,0);ctx.strokeStyle='#FFD700';ctx.lineWidth=2;ctx.stroke();ctx.beginPath();ctx.arc(stamen.length,0,2,0,Math.PI*2);ctx.fillStyle='#FFD700';ctx.fill();ctx.restore()});ctx.restore()}ctx.restore()}remove(){this.alive=false}}class Particle{constructor(x,y,type){this.x=x;this.y=y;this.type=type;this.life=1;this.vx=(Math.random()-.5)*2;this.vy=-Math.random()*2;if(type==='rain'){this.x=Math.random()*width;this.y=0;this.vy=5+Math.random()*5;this.life=.7}}update(){this.x+=this.vx+wind/20;this.y+=this.vy;if(this.type==='rain')this.life-=.01;else this.life-=.02;return this.life>0}draw(){ctx.beginPath();if(this.type==='rain'){ctx.moveTo(this.x,this.y);ctx.lineTo(this.x+wind/20,this.y+10);ctx.strokeStyle=`rgba(200, 200, 255, ${this.life})`;ctx.stroke()}else{ctx.arc(this.x,this.y,2,0,Math.PI*2);ctx.fillStyle=this.type==='pollen'?`rgba(255, 255, 0, ${this.life})`:`rgba(255, 255, 255, ${this.life})`;ctx.fill()}}}function createGrid(){const grid=[];for(let i=0;i<GRID_SIZE;i++){grid[i]=[];for(let j=0;j<GRID_SIZE;j++)grid[i][j]=null}return grid}let grid=createGrid();function addPlant(x,y){if(!grid[x][y]){const plant=new Plant(x,y);plants.push(plant);grid[x][y]=plant}}function update(){frame++;const daytime=(Math.sin(frame/200)+1)/2;time=daytime*100;if(weather==='rainy'&&frame%5===0)particles.push(new Particle(0,0,'rain'));plants.forEach(plant=>{if(plant.growth>.9&&Math.random()<.01)particles.push(new Particle(plant.x,plant.y-plant.height,'pollen'));plant.update()});particles.forEach((p,i)=>{if(!p.update())particles.splice(i,1)})}function draw(){ctx.fillStyle=`rgb(${time/2+30}, ${time/2+30}, ${time/2+50})`;ctx.fillRect(0,0,width,height);if(weather==='cloudy'){ctx.fillStyle='rgba(255, 255, 255, 0.3)';for(let i=0;i<3;i++){const x=((frame/100)+i*200)%800-100;ctx.beginPath();ctx.ellipse(x,100,50,30,0,0,Math.PI*2);ctx.fill()}}particles.forEach(p=>p.draw());plants.forEach(p=>p.draw())}function animate(){update();draw();requestAnimationFrame(animate)}canvas.addEventListener('click',e=>{const rect=canvas.getBoundingClientRect();const x=Math.floor((e.clientX-rect.left)/CELL_SIZE);const y=Math.floor((e.clientY-rect.top)/CELL_SIZE);if(x>=0&&x<GRID_SIZE&&y>=0&&y<GRID_SIZE)addPlant(x,y)});canvas.addEventListener('dblclick',e=>{const rect=canvas.getBoundingClientRect();const x=Math.floor((e.clientX-rect.left)/CELL_SIZE);const y=Math.floor((e.clientY-rect.top)/CELL_SIZE);if(grid[x][y]&&grid[x][y].growth>.7){for(let i=0;i<10;i++)particles.push(new Particle(grid[x][y].x,grid[x][y].y-grid[x][y].height,'seed'));grid[x][y].remove();grid[x][y]=null}});document.getElementById('timeSlider').addEventListener('input',e=>time=parseInt(e.target.value));document.getElementById('windSlider').addEventListener('input',e=>wind=parseInt(e.target.value));document.getElementById('speedSlider').addEventListener('input',e=>growthSpeed=parseInt(e.target.value));document.getElementById('weather').addEventListener('change',e=>weather=e.target.value);window.addEventListener('resize',()=>{width=canvas.width=600;height=canvas.height=600});animate();</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:41:25.015000Z",
      "updated_at": "2025-02-08T13:41:25.015000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "38ab2a18-9513-4f23-9558-14eccf2715cf",
          "completion_id": "268d6a1e-0c52-4f86-9b03-59f16d3b6cec",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:41:25.015000Z",
          "updated_at": "2025-02-08T13:41:25.015000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    },
    {
      "id": "cc6197d8-80cf-47d3-8559-91a32987bffa",
      "completion_id": "40142db7-1e1d-4e29-bd78-bf26e1fa7972",
      "validator_task_id": "a99612f2-dd85-4dcd-b3f1-efaee88d72bf",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width,initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Coral Reef Simulation</title><style>body{margin:0;overflow:hidden;background:#04264D;font-family:Arial,sans-serif;display:flex;justify-content:center;align-items:center;min-height:100vh}.container{position:relative;width:600px;height:600px}.grid{display:grid;grid-template-columns:repeat(6,1fr);gap:2px;width:100%;height:100%;background:rgba(4,38,77,0.5);border-radius:8px;overflow:hidden}.cell{position:relative;background:rgba(255,255,255,0.05);cursor:pointer;transition:background 0.3s}.cell:hover{background:rgba(255,255,255,0.1)}.controls{position:fixed;bottom:20px;background:rgba(0,20,40,0.8);padding:15px;border-radius:10px;color:#fff}.control-group{margin:10px 0}.control-label{display:block;margin-bottom:5px;font-size:12px}.slider{width:200px;margin:5px 0}.instructions{position:fixed;top:20px;color:#fff;font-size:14px;text-align:center;background:rgba(0,20,40,0.8);padding:10px;border-radius:5px;opacity:0.8}</style></head><body><div class=\\\"instructions\\\">Click to place coral larvae. Use controls below to adjust environment.</div><div class=\\\"container\\\"><div class=\\\"grid\\\" id=\\\"coralGrid\\\"></div></div><div class=\\\"controls\\\"><div class=\\\"control-group\\\"><label class=\\\"control-label\\\">Time of Day</label><input class=\\\"slider\\\" id=\\\"timeSlider\\\" max=\\\"100\\\" min=\\\"0\\\" type=\\\"range\\\" value=\\\"50\\\"/></div><div class=\\\"control-group\\\"><label class=\\\"control-label\\\">Current Strength</label><input class=\\\"slider\\\" id=\\\"currentSlider\\\" max=\\\"100\\\" min=\\\"0\\\" type=\\\"range\\\" value=\\\"30\\\"/></div><div class=\\\"control-group\\\"><label class=\\\"control-label\\\">Growth Speed</label><input class=\\\"slider\\\" id=\\\"speedSlider\\\" max=\\\"100\\\" min=\\\"1\\\" type=\\\"range\\\" value=\\\"50\\\"/></div></div><canvas id=\\\"particleCanvas\\\" style=\\\"position:fixed;top:0;left:0;pointer-events:none\\\"></canvas><script src=\\\"index.js\\\"></script><script>const grid=document.getElementById('coralGrid'),canvas=document.getElementById('particleCanvas'),ctx=canvas.getContext('2d');let width=canvas.width=window.innerWidth,height=canvas.height=window.innerHeight;const timeSlider=document.getElementById('timeSlider'),currentSlider=document.getElementById('currentSlider'),speedSlider=document.getElementById('speedSlider'),cells=new Array(36).fill(null),particles=[],corals=[];class Coral{constructor(cell){this.cell=cell;this.growth=0;this.tentacles=[];this.polyp={size:0,tentacles:[]};this.position={x:cell.offsetLeft+cell.offsetWidth/2,y:cell.offsetTop+cell.offsetHeight/2};this.baseHeight=0;this.color=`hsl(${Math.random()*60+180},70%,50%)`;this.glowColor=`hsl(${Math.random()*60+180},90%,70%)`;this.swayOffset=Math.random()*Math.PI*2;this.maturity=0}update(deltaTime,timeOfDay,currentStrength){const growthRate=parseFloat(speedSlider.value)/1000;this.growth=Math.min(1,this.growth+growthRate*deltaTime);if(this.growth>0.3&&this.baseHeight<30){this.baseHeight+=growthRate*20*deltaTime}if(this.growth>0.5&&this.tentacles.length<5&&Math.random()<0.05){this.tentacles.push({length:0,angle:Math.random()*Math.PI*2})}this.tentacles.forEach(t=>{if(t.length<15){t.length+=growthRate*10*deltaTime}});if(this.growth>0.8){this.polyp.size=Math.min(10,this.polyp.size+growthRate*5*deltaTime);if(this.polyp.tentacles.length<8&&Math.random()<0.1){this.polyp.tentacles.push({length:0,angle:Math.random()*Math.PI*2})}}this.polyp.tentacles.forEach(t=>{if(t.length<5){t.length+=growthRate*3*deltaTime}});if(this.growth>=1){this.maturity=Math.min(1,this.maturity+growthRate*deltaTime)}const openness=Math.cos(timeOfDay*Math.PI*2)*0.5+0.5;const sway=Math.sin(Date.now()/1000+this.swayOffset)*currentStrength/100*5;this.currentSway=sway;if(Math.random()<0.01*openness&&this.maturity>0.5){createParticle(this.position.x,this.position.y-this.baseHeight,'plankton')}}draw(ctx){const{x,y}=this.position;ctx.save();ctx.translate(x,y);ctx.rotate(this.currentSway*0.1);ctx.beginPath();ctx.moveTo(0,0);ctx.lineTo(Math.sin(this.currentSway*0.2)*5,-this.baseHeight);ctx.strokeStyle=this.color;ctx.lineWidth=3;ctx.stroke();this.tentacles.forEach(t=>{ctx.save();ctx.rotate(t.angle+this.currentSway*0.2);ctx.beginPath();ctx.moveTo(0,-this.baseHeight*0.7);ctx.lineTo(Math.sin(this.currentSway*0.3)*3,-this.baseHeight*0.7-t.length);ctx.strokeStyle=this.color;ctx.lineWidth=2;ctx.stroke();ctx.restore()});if(this.polyp.size>0){ctx.save();ctx.translate(Math.sin(this.currentSway*0.2)*5,-this.baseHeight);this.polyp.tentacles.forEach(t=>{ctx.save();ctx.rotate(t.angle+this.currentSway*0.3);ctx.beginPath();ctx.moveTo(0,0);ctx.lineTo(Math.sin(this.currentSway*0.4)*2,-t.length);ctx.strokeStyle=this.glowColor;ctx.lineWidth=1;ctx.stroke();ctx.restore()});ctx.beginPath();ctx.arc(0,0,this.polyp.size/3,0,Math.PI*2);ctx.fillStyle=this.glowColor;ctx.fill();ctx.restore()}ctx.restore()}}class Particle{constructor(x,y,type){this.x=x;this.y=y;this.type=type;this.vx=(Math.random()-0.5)*2;this.vy=-Math.random()*2;this.life=1;this.size=type==='larvae'?3:1}update(){this.x+=this.vx+Math.sin(Date.now()/1000)*0.5;this.y+=this.vy;this.vy+=0.02;this.life-=0.01;return this.life>0}draw(ctx){ctx.beginPath();ctx.arc(this.x,this.y,this.size,0,Math.PI*2);ctx.fillStyle=this.type==='larvae'?'rgba(255,220,150,'+this.life+')':'rgba(255,255,255,'+this.life+')';ctx.fill()}}function createParticle(x,y,type){particles.push(new Particle(x,y,type))}function init(){for(let i=0;i<36;i++){const cell=document.createElement('div');cell.className='cell';cell.addEventListener('click',()=>handleCellClick(i));grid.appendChild(cell)}animate()}function handleCellClick(index){if(!cells[index]){const cell=grid.children[index];cells[index]=new Coral(cell)}}function animate(){const timeOfDay=timeSlider.value/100;const currentStrength=currentSlider.value;document.body.style.background=`rgb(${4+timeOfDay*20},${38+timeOfDay*20},${77+timeOfDay*20})`;ctx.clearRect(0,0,width,height);const now=Date.now();const deltaTime=1/60;cells.forEach((coral,i)=>{if(coral){coral.update(deltaTime,timeOfDay,currentStrength);coral.draw(ctx)}});particles.forEach((particle,i)=>{if(!particle.update()){particles.splice(i,1)}else{particle.draw(ctx)}});if(timeOfDay>0.4&&timeOfDay<0.6){for(let i=0;i<3;i++){const x=Math.random()*width;ctx.beginPath();ctx.moveTo(x,0);ctx.lineTo(x+100,height);ctx.strokeStyle='rgba(255,255,255,0.1)';ctx.stroke()}}requestAnimationFrame(animate)}window.addEventListener('resize',()=>{width=canvas.width=window.innerWidth;height=canvas.height=window.innerHeight});init();</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:41:25.015000Z",
      "updated_at": "2025-02-08T13:41:25.015000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "0992fc91-26a8-409c-8ca8-1fd124947926",
          "completion_id": "cc6197d8-80cf-47d3-8559-91a32987bffa",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:41:25.015000Z",
          "updated_at": "2025-02-08T13:41:25.015000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    }
  ],
  "ground_truths": [
    {
      "id": "a69de40a-331d-40b2-a37b-51ae539371e9",
      "validator_task_id": "a99612f2-dd85-4dcd-b3f1-efaee88d72bf",
      "obfuscated_model_id": "3ff4756e-233c-4a23-9aa1-f8bd01ec220f",
      "real_model_id": "3ff4756e-233c-4a23-9aa1-f8bd01ec220f",
      "rank_id": 0,
      "ground_truth_score": 0.0,
      "created_at": "2025-02-08T13:41:25.015000Z",
      "updated_at": "2025-02-08T13:41:25.015000Z",
      "validator_task_relation": null
    },
    {
      "id": "4a492434-ec0d-45d4-8e9c-4b88ba88fa9d",
      "validator_task_id": "a99612f2-dd85-4dcd-b3f1-efaee88d72bf",
      "obfuscated_model_id": "603c4a27-d3d6-4681-a7b2-c3673837f610",
      "real_model_id": "603c4a27-d3d6-4681-a7b2-c3673837f610",
      "rank_id": 1,
      "ground_truth_score": 1.0,
      "created_at": "2025-02-08T13:41:25.015000Z",
      "updated_at": "2025-02-08T13:41:25.015000Z",
      "validator_task_relation": null
    },
    {
      "id": "a591a018-f6f9-4c2c-8fc3-f3cbe9c319d6",
      "validator_task_id": "a99612f2-dd85-4dcd-b3f1-efaee88d72bf",
      "obfuscated_model_id": "5f257537-9d91-49ae-8724-3e710dac0fef",
      "real_model_id": "5f257537-9d91-49ae-8724-3e710dac0fef",
      "rank_id": 2,
      "ground_truth_score": 2.0,
      "created_at": "2025-02-08T13:41:25.015000Z",
      "updated_at": "2025-02-08T13:41:25.015000Z",
      "validator_task_relation": null
    },
    {
      "id": "ecb1d7c1-0159-4507-afed-d294ebdfef8a",
      "validator_task_id": "a99612f2-dd85-4dcd-b3f1-efaee88d72bf",
      "obfuscated_model_id": "40142db7-1e1d-4e29-bd78-bf26e1fa7972",
      "real_model_id": "40142db7-1e1d-4e29-bd78-bf26e1fa7972",
      "rank_id": 3,
      "ground_truth_score": 3.0,
      "created_at": "2025-02-08T13:41:25.015000Z",
      "updated_at": "2025-02-08T13:41:25.015000Z",
      "validator_task_relation": null
    }
  ],
  "miner_responses": [
    {
      "id": "e0f10bfe-a27f-4582-95a7-1bc810c66dd3",
      "validator_task_id": "a99612f2-dd85-4dcd-b3f1-efaee88d72bf",
      "dojo_task_id": "a55af4e7-7908-4d2b-8a70-7681ba52969a",
      "hotkey": "5HBm7gmcyrqjCpyFwMBM6HzZrNmM3JBHKJHW2HsDUvwNFJUS",
      "coldkey": "5HU3tezTitX4gq5emvpbspqFzzV9dfuR2BEkx3SG4Zf1ucym",
      "task_result": "{}",
      "created_at": "2025-02-08T13:41:25.015000Z",
      "updated_at": "2025-02-08T13:41:25.015000Z",
      "validator_task_relation": null,
      "scores": []
    },
    {
      "id": "b5ce9134-7ef3-4e44-9f1a-d28ed4ff0c3c",
      "validator_task_id": "a99612f2-dd85-4dcd-b3f1-efaee88d72bf",
      "dojo_task_id": "c86afb3a-9229-47ef-a007-45727a84d020",
      "hotkey": "5DyMoTsYaP1cjoYahSHtGKmwu6bRva6XJ3ha6i1uMpm5oSS2",
      "coldkey": "5D8ARXP7kza9qrdNgGtXgMHTf6SxsLLeVjE8cf3C4FAhEpNe",
      "task_result": "{}",
      "created_at": "2025-02-08T13:41:25.015000Z",
      "updated_at": "2025-02-08T13:41:25.015000Z",
      "validator_task_relation": null,
      "scores": []
    }
  ],
  "created_at": "2025-02-08T13:41:25.015000+00:00",
  "metadata": null
}
{
  "validator_task_id": "f9204589-9e3f-4b2c-b64a-c8ec3554f0ef",
  "validator_hotkey": "5DWuP51n8GYLRrYfmyEgKxRgeNGiXLN7mBdLvyeqTeKgBnXb",
  "completions": [
    {
      "id": "befc9f86-f05f-4ee2-98e1-ee70967f900b",
      "completion_id": "41dee05a-9b2e-4c45-a448-044a38f91c01",
      "validator_task_id": "f9204589-9e3f-4b2c-b64a-c8ec3554f0ef",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width,initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Project Pipeline</title><style>body,html{margin:0;padding:0;height:100%;overflow:hidden;font-family:Arial,sans-serif;background:#E0E0E0}#gameContainer{position:relative;width:100vmin;height:75vmin;margin:auto}#gameCanvas{position:absolute;top:0;left:0;width:100%;height:100%;background:#F0F0F0}#gameOver{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);background:rgba(255,255,255,0.95);padding:20px;border-radius:10px;text-align:center;display:none;flex-direction:column;align-items:center;box-shadow:0 0 20px rgba(0,0,0,0.1)}#restartButton{margin-top:20px;padding:10px 20px;font-size:16px;background:#4A90E2;color:white;border:none;border-radius:5px;cursor:pointer}#restartButton:hover{background:#357ABD}#controls{position:absolute;bottom:10px;left:50%;transform:translateX(-50%);color:#666;font-size:14px;text-align:center}</style></head><body><div id=\\\"gameContainer\\\"><canvas id=\\\"gameCanvas\\\"></canvas><div id=\\\"gameOver\\\"><h2>Game Over</h2><p>Team morale has dropped to zero!</p><button id=\\\"restartButton\\\">Try Again</button></div><div id=\\\"controls\\\">\\u2191/\\u2193 - Move Tasks | SPACE - Mentor Mode</div></div><script src=\\\"index.js\\\"></script><script>const canvas=document.getElementById('gameCanvas');const ctx=canvas.getContext('2d');const LANE_HEIGHT=150;const CARD_WIDTH=80;const CARD_HEIGHT=100;const GAME_WIDTH=800;const GAME_HEIGHT=600;let scale=1;function resizeCanvas(){const container=document.getElementById('gameContainer');const containerWidth=container.clientWidth;const containerHeight=container.clientHeight;scale=Math.min(containerWidth/GAME_WIDTH,containerHeight/GAME_HEIGHT);canvas.width=GAME_WIDTH*scale;canvas.height=GAME_HEIGHT*scale;ctx.scale(scale,scale);}window.addEventListener('resize',resizeCanvas);resizeCanvas();class Task{constructor(){this.x=0;this.y=LANE_HEIGHT+LANE_HEIGHT/2;this.width=CARD_WIDTH;this.height=CARD_HEIGHT;this.lane=1;this.speed=2+Math.random()*2;this.priority=Math.floor(Math.random()*3);this.colors=['#4A90E2','#50C878','#FFB347'];this.color=this.colors[this.priority];}update(){this.x+=this.speed;}draw(){ctx.fillStyle=this.color;ctx.fillRect(this.x,this.y-this.height/2,this.width,this.height);ctx.strokeStyle='#FFFFFF';ctx.strokeRect(this.x,this.y-this.height/2,this.width,this.height);ctx.fillStyle='#FFFFFF';ctx.font='20px Arial';ctx.fillText('Task',this.x+10,this.y);}}class Blocker{constructor(lane){this.x=GAME_WIDTH;this.y=lane*LANE_HEIGHT+LANE_HEIGHT/2;this.width=40;this.height=40;this.lane=lane;}update(){this.x-=1;}draw(){ctx.fillStyle='#FF4444';ctx.beginPath();ctx.moveTo(this.x,this.y-this.height/2);ctx.lineTo(this.x+this.width,this.y);ctx.lineTo(this.x,this.y+this.height/2);ctx.closePath();ctx.fill();}}class Game{constructor(){this.tasks=[];this.blockers=[];this.score=0;this.multiplier=1;this.morale=100;this.mentorCooldown=0;this.lastTaskTime=0;this.lastBlockerTime=0;this.gameOver=false;}spawnTask(){if(Date.now()-this.lastTaskTime>2000){this.tasks.push(new Task());this.lastTaskTime=Date.now();}}spawnBlocker(){if(Date.now()-this.lastBlockerTime>3000){const lane=Math.floor(Math.random()*3);this.blockers.push(new Blocker(lane));this.lastBlockerTime=Date.now();}}checkCollisions(){this.tasks.forEach(task=>{this.blockers.forEach(blocker=>{if(task.lane===blocker.lane&&Math.abs(task.x-blocker.x)<40){this.morale-=10;this.multiplier=1;this.tasks=this.tasks.filter(t=>t!==task);}});if(task.x>GAME_WIDTH-100){this.score+=100*this.multiplier;this.multiplier+=0.1;this.tasks=this.tasks.filter(t=>t!==task);}});}drawBackground(){ctx.fillStyle='#F0F0F0';ctx.fillRect(0,0,GAME_WIDTH,GAME_HEIGHT);for(let i=0;i<3;i++){ctx.fillStyle=i%2===0?'#E8E8E8':'#F8F8F8';ctx.fillRect(0,i*LANE_HEIGHT,GAME_WIDTH,LANE_HEIGHT);}ctx.strokeStyle='#CCCCCC';ctx.setLineDash([5,5]);for(let i=1;i<3;i++){ctx.beginPath();ctx.moveTo(0,i*LANE_HEIGHT);ctx.lineTo(GAME_WIDTH,i*LANE_HEIGHT);ctx.stroke();}ctx.setLineDash([]);}drawHUD(){ctx.fillStyle='#333333';ctx.font='20px Arial';ctx.fillText(`Score: ${Math.floor(this.score)}`,GAME_WIDTH-150,30);ctx.fillText(`Multiplier: x${this.multiplier.toFixed(1)}`,GAME_WIDTH-150,60);ctx.fillStyle='#4A90E2';ctx.fillRect(10,10,200*(this.morale/100),20);ctx.strokeStyle='#333333';ctx.strokeRect(10,10,200,20);if(this.mentorCooldown>0){ctx.fillStyle='#333333';ctx.fillText(`Mentor: ${Math.ceil(this.mentorCooldown/60)}s`,10,60);}}update(){if(!this.gameOver){this.spawnTask();this.spawnBlocker();this.tasks.forEach(task=>task.update());this.blockers=this.blockers.filter(blocker=>{blocker.update();return blocker.x>-50;});this.checkCollisions();if(this.mentorCooldown>0)this.mentorCooldown--;let laneCounts=[0,0,0];this.tasks.forEach(task=>laneCounts[task.lane]++);laneCounts.forEach(count=>{if(count>5)this.morale-=0.1;});if(this.morale<=0){this.gameOver=true;document.getElementById('gameOver').style.display='flex';}}}draw(){this.drawBackground();this.tasks.forEach(task=>task.draw());this.blockers.forEach(blocker=>blocker.draw());this.drawHUD();}}const game=new Game();function gameLoop(){game.update();game.draw();requestAnimationFrame(gameLoop);}document.addEventListener('keydown',e=>{if(!game.gameOver){if(e.code==='ArrowUp'||e.code==='ArrowDown'){e.preventDefault();game.tasks.forEach(task=>{if(task.x<GAME_WIDTH/4){if(e.code==='ArrowUp'&&task.lane>0){task.lane--;task.y-=LANE_HEIGHT;}if(e.code==='ArrowDown'&&task.lane<2){task.lane++;task.y+=LANE_HEIGHT;}}})}if(e.code==='Space'&&game.mentorCooldown===0){e.preventDefault();game.mentorCooldown=1200;game.tasks.forEach(task=>task.speed*=2);setTimeout(()=>game.tasks.forEach(task=>task.speed/=2),3000);game.blockers=[];}}});document.getElementById('restartButton').addEventListener('click',()=>{game.tasks=[];game.blockers=[];game.score=0;game.multiplier=1;game.morale=100;game.mentorCooldown=0;game.gameOver=false;document.getElementById('gameOver').style.display='none';});gameLoop();</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:40:20.315000Z",
      "updated_at": "2025-02-08T13:40:20.315000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "d5a66545-0cad-4c28-ba6f-b1550ee1f1ad",
          "completion_id": "befc9f86-f05f-4ee2-98e1-ee70967f900b",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:40:20.315000Z",
          "updated_at": "2025-02-08T13:40:20.315000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    },
    {
      "id": "236fe0e2-4b33-464c-966f-bc7594f2a044",
      "completion_id": "2def7a7c-587b-45b4-83eb-0b90bb6813d9",
      "validator_task_id": "f9204589-9e3f-4b2c-b64a-c8ec3554f0ef",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width,initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Project Pipeline</title><style>body,html{margin:0;padding:0;height:100%;overflow:hidden;font-family:'Segoe UI',Arial,sans-serif;background:#E8E8E8}#gameContainer{position:relative;width:100vmin;height:100vmin;margin:auto;background:#FFF;box-shadow:0 0 20px rgba(0,0,0,0.1)}#gameCanvas{position:absolute;top:0;left:0;width:100%;height:100%}#hud{position:absolute;top:10px;left:10px;right:10px;display:flex;justify-content:space-between;align-items:center;padding:10px;font-size:18px;color:#333}#moraleContainer{flex:1;height:20px;background:#DDD;border-radius:10px;margin-right:20px;overflow:hidden}#moraleBar{height:100%;width:100%;background:#4CAF50;transition:width 0.3s,background-color 0.3s}#scoreContainer{display:flex;align-items:center;gap:10px}#multiplier{color:#4A90E2;font-weight:bold}#mentorCooldown{color:#666;font-size:14px}#gameOver{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);background:rgba(255,255,255,0.95);padding:30px;border-radius:10px;text-align:center;display:none;flex-direction:column;align-items:center;box-shadow:0 0 20px rgba(0,0,0,0.2)}#tryAgain{margin-top:20px;padding:10px 20px;font-size:18px;background:#4A90E2;color:white;border:none;border-radius:5px;cursor:pointer;transition:background 0.3s}#tryAgain:hover{background:#357ABD}#controls{position:absolute;bottom:10px;left:50%;transform:translateX(-50%);color:#666;font-size:14px;text-align:center}</style></head><body><div id=\\\"gameContainer\\\"><canvas id=\\\"gameCanvas\\\"></canvas><div id=\\\"hud\\\"><div id=\\\"moraleContainer\\\"><div id=\\\"moraleBar\\\"></div></div><div id=\\\"scoreContainer\\\"><span id=\\\"score\\\">Score: 0</span><span id=\\\"multiplier\\\">\\u00d71.0</span></div><span id=\\\"mentorCooldown\\\">Mentor Ready</span></div><div id=\\\"gameOver\\\"><h2>Project Deadline Missed!</h2><p>Final Score: <span id=\\\"finalScore\\\">0</span></p><button id=\\\"tryAgain\\\">Try Again</button></div><div id=\\\"controls\\\">\\u2191/\\u2193 - Move Tasks | SPACE - Activate Mentor Mode</div></div><script src=\\\"index.js\\\"></script><script>const canvas=document.getElementById('gameCanvas');const ctx=canvas.getContext('2d');const moraleBar=document.getElementById('moraleBar');const scoreElement=document.getElementById('score');const multiplierElement=document.getElementById('multiplier');const gameOverScreen=document.getElementById('gameOver');const finalScoreElement=document.getElementById('finalScore');const tryAgainButton=document.getElementById('tryAgain');const mentorCooldownElement=document.getElementById('mentorCooldown');let canvasWidth=800;let canvasHeight=800;let scale=1;function resizeCanvas(){const container=document.getElementById('gameContainer');const containerWidth=container.clientWidth;const containerHeight=container.clientHeight;scale=Math.min(containerWidth/canvasWidth,containerHeight/canvasHeight);canvas.width=canvasWidth*scale;canvas.height=canvasHeight*scale;ctx.scale(scale,scale);}window.addEventListener('resize',resizeCanvas);resizeCanvas();const LANE_HEIGHT=canvasHeight/3;const TASK_WIDTH=60;const TASK_HEIGHT=40;const TASK_COLORS=['#4A90E2','#50C878','#FFB347'];const COMPLETION_ZONE_WIDTH=100;class Task{constructor(){this.x=0;this.y=LANE_HEIGHT/2+Math.floor(Math.random()*3)*LANE_HEIGHT;this.lane=Math.floor(this.y/LANE_HEIGHT);this.width=TASK_WIDTH;this.height=TASK_HEIGHT;this.speed=2+Math.random()*2;this.color=TASK_COLORS[Math.floor(Math.random()*TASK_COLORS.length)];this.trail=[];}update(){this.trail.push({x:this.x,y:this.y});if(this.trail.length>10)this.trail.shift();this.x+=this.speed;}draw(){this.trail.forEach((pos,i)=>{ctx.fillStyle=`${this.color}${Math.floor(i/this.trail.length*99).toString(16)}`;ctx.fillRect(pos.x,pos.y-this.height/2,this.width,this.height);});ctx.fillStyle=this.color;ctx.fillRect(this.x,this.y-this.height/2,this.width,this.height);ctx.strokeStyle='#FFFFFF';ctx.strokeRect(this.x,this.y-this.height/2,this.width,this.height);ctx.fillStyle='#FFFFFF';ctx.fillRect(this.x+10,this.y-this.height/4,this.width-20,2);ctx.fillRect(this.x+10,this.y,this.width-20,2);}}class Blocker{constructor(lane){this.x=Math.random()*(canvasWidth-400)+200;this.lane=lane;this.y=LANE_HEIGHT/2+lane*LANE_HEIGHT;this.width=30;this.height=30;this.warning=true;this.warningTime=60;}update(){if(this.warning){this.warningTime--;if(this.warningTime<=0)this.warning=false;}}draw(){if(this.warning){ctx.fillStyle=`rgba(255,0,0,${0.3+Math.sin(Date.now()/200)*0.2})`;ctx.beginPath();ctx.moveTo(this.x,this.y-20);ctx.lineTo(this.x+20,this.y+10);ctx.lineTo(this.x-20,this.y+10);ctx.closePath();ctx.fill();}else{ctx.fillStyle='#FF0000';ctx.beginPath();ctx.arc(this.x,this.y,15,0,Math.PI*2);ctx.fill();}}}class PowerUp{constructor(){this.x=Math.random()*(canvasWidth-400)+200;this.lane=Math.floor(Math.random()*3);this.y=LANE_HEIGHT/2+this.lane*LANE_HEIGHT;this.width=30;this.height=30;this.rotation=0;}update(){this.rotation+=0.05;}draw(){ctx.save();ctx.translate(this.x,this.y);ctx.rotate(this.rotation);ctx.fillStyle='#FFD700';ctx.beginPath();for(let i=0;i<5;i++){ctx.lineTo(Math.cos((i*4*Math.PI)/5)*15,Math.sin((i*4*Math.PI)/5)*15);ctx.lineTo(Math.cos((i*4*Math.PI)/5+Math.PI/5)*7,Math.sin((i*4*Math.PI)/5+Math.PI/5)*7);}ctx.closePath();ctx.fill();ctx.restore();}}class Game{constructor(){this.tasks=[];this.blockers=[];this.powerUps=[];this.score=0;this.multiplier=1;this.morale=100;this.lastTaskTime=0;this.lastBlockerTime=0;this.lastPowerUpTime=0;this.mentorCooldown=0;this.gameOver=false;}spawnTask(){if(Date.now()-this.lastTaskTime>2000&&this.tasks.length<10){this.tasks.push(new Task());this.lastTaskTime=Date.now();}}spawnBlocker(){if(Date.now()-this.lastBlockerTime>5000){for(let i=0;i<3;i++){if(Math.random()<0.3){this.blockers.push(new Blocker(i));}}this.lastBlockerTime=Date.now();}}spawnPowerUp(){if(Date.now()-this.lastPowerUpTime>10000){this.powerUps.push(new PowerUp());this.lastPowerUpTime=Date.now();}}checkCollisions(){this.tasks.forEach(task=>{this.blockers.forEach(blocker=>{if(!blocker.warning&&task.lane===blocker.lane&&Math.abs(task.x-blocker.x)<20){this.morale-=10;this.multiplier=1;this.tasks=this.tasks.filter(t=>t!==task);}});this.powerUps.forEach(powerUp=>{if(task.lane===powerUp.lane&&Math.abs(task.x-powerUp.x)<20){this.activateMentorMode(task.lane);this.powerUps=this.powerUps.filter(p=>p!==powerUp);}});});}activateMentorMode(lane){if(this.mentorCooldown===0){this.tasks.forEach(task=>{if(task.lane===lane)task.speed*=2;});this.blockers=this.blockers.filter(b=>b.lane!==lane);this.mentorCooldown=1200;}}checkLaneOvercrowding(){const laneCounts=[0,0,0];this.tasks.forEach(task=>laneCounts[task.lane]++);laneCounts.forEach(count=>{if(count>4)this.morale-=0.1;});}update(){if(!this.gameOver){this.spawnTask();this.spawnBlocker();this.spawnPowerUp();this.tasks.forEach(task=>task.update());this.blockers.forEach(blocker=>blocker.update());this.powerUps.forEach(powerUp=>powerUp.update());this.checkCollisions();this.checkLaneOvercrowding();if(this.mentorCooldown>0)this.mentorCooldown--;this.tasks=this.tasks.filter(task=>{if(task.x>canvasWidth-COMPLETION_ZONE_WIDTH){this.score+=100*this.multiplier;this.multiplier+=0.1;this.morale=Math.min(100,this.morale+5);return false;}return task.x<canvasWidth;});if(this.morale<=0)this.endGame();}}draw(){ctx.fillStyle='#F0F0F0';ctx.fillRect(0,0,canvasWidth,canvasHeight);for(let i=0;i<3;i++){ctx.fillStyle=i%2===0?'#FFFFFF':'#F8F8F8';ctx.fillRect(0,i*LANE_HEIGHT,canvasWidth,LANE_HEIGHT);ctx.strokeStyle='#E0E0E0';ctx.setLineDash([5,5]);ctx.beginPath();ctx.moveTo(0,(i+1)*LANE_HEIGHT);ctx.lineTo(canvasWidth,(i+1)*LANE_HEIGHT);ctx.stroke();ctx.setLineDash([]);}ctx.fillStyle='rgba(0,255,0,0.1)';ctx.fillRect(canvasWidth-COMPLETION_ZONE_WIDTH,0,COMPLETION_ZONE_WIDTH,canvasHeight);ctx.strokeStyle='#00FF00';ctx.setLineDash([5,5]);ctx.strokeRect(canvasWidth-COMPLETION_ZONE_WIDTH,0,COMPLETION_ZONE_WIDTH,canvasHeight);ctx.setLineDash([]);this.tasks.forEach(task=>task.draw());this.blockers.forEach(blocker=>blocker.draw());this.powerUps.forEach(powerUp=>powerUp.draw());}endGame(){this.gameOver=true;finalScoreElement.textContent=Math.floor(this.score);gameOverScreen.style.display='flex';}reset(){this.tasks=[];this.blockers=[];this.powerUps=[];this.score=0;this.multiplier=1;this.morale=100;this.lastTaskTime=0;this.lastBlockerTime=0;this.lastPowerUpTime=0;this.mentorCooldown=0;this.gameOver=false;gameOverScreen.style.display='none';}}const game=new Game;function gameLoop(){game.update();game.draw();moraleBar.style.width=`${game.morale}%`;moraleBar.style.backgroundColor=`hsl(${game.morale},70%,50%)`;scoreElement.textContent=`Score: ${Math.floor(game.score)}`;multiplierElement.textContent=`\\u00d7${game.multiplier.toFixed(1)}`;mentorCooldownElement.textContent=game.mentorCooldown>0?`Mentor: ${Math.ceil(game.mentorCooldown/60)}s`:'Mentor Ready';requestAnimationFrame(gameLoop);}document.addEventListener('keydown',e=>{if(['ArrowUp','ArrowDown','Space'].includes(e.code)){e.preventDefault();if(e.code==='ArrowUp'){game.tasks.forEach(task=>{if(task.lane>0){task.lane--;task.y-=LANE_HEIGHT;}});}else if(e.code==='ArrowDown'){game.tasks.forEach(task=>{if(task.lane<2){task.lane++;task.y+=LANE_HEIGHT;}});}else if(e.code==='Space'){game.activateMentorMode(Math.floor(game.tasks[0]?.lane||0));}}});tryAgainButton.addEventListener('click',()=>{game.reset();});gameLoop();</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:40:20.315000Z",
      "updated_at": "2025-02-08T13:40:20.315000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "46b975be-5c58-4120-8818-4700ddf19002",
          "completion_id": "236fe0e2-4b33-464c-966f-bc7594f2a044",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:40:20.315000Z",
          "updated_at": "2025-02-08T13:40:20.315000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    },
    {
      "id": "f596bd2f-bbb8-4d02-ad2f-500031bfb5e1",
      "completion_id": "264b6423-1b8d-46a8-91b3-27a3d22290a8",
      "validator_task_id": "f9204589-9e3f-4b2c-b64a-c8ec3554f0ef",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width,initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Project Pipeline</title><style>body,html{margin:0;padding:0;height:100%;overflow:hidden;font-family:Arial,sans-serif;background:#f0f0f0}#gameContainer{position:relative;width:100vmin;height:100vmin;margin:auto}#gameCanvas{position:absolute;top:0;left:0;width:100%;height:100%;box-shadow:0 0 10px rgba(0,0,0,0.1)}#gameOver{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);background:rgba(255,255,255,0.95);padding:20px;border-radius:10px;text-align:center;display:none;flex-direction:column;align-items:center;box-shadow:0 0 20px rgba(0,0,0,0.2)}#finalScore{font-size:24px;color:#2196F3;margin:10px 0}#playAgain{margin-top:20px;padding:10px 20px;font-size:18px;background:#2196F3;color:white;border:none;border-radius:5px;cursor:pointer;transition:background 0.3s}#playAgain:hover{background:#1976D2}#controls{position:absolute;bottom:10px;left:50%;transform:translateX(-50%);color:#666;font-size:14px;text-align:center}</style></head><body><div id=\\\"gameContainer\\\"><canvas id=\\\"gameCanvas\\\"></canvas><div id=\\\"gameOver\\\"><h2>Project Deadline Missed!</h2><p>Final Score: <span id=\\\"finalScore\\\">0</span></p><button id=\\\"playAgain\\\">Try Again</button></div><div id=\\\"controls\\\">\\u2191/\\u2193 - Move Tasks | SPACE - Mentor Mode | 1,2,3 - Assign Team Members</div></div><script src=\\\"index.js\\\"></script><script>const canvas=document.getElementById(\\\"gameCanvas\\\"),ctx=canvas.getContext(\\\"2d\\\");let canvasWidth=800,canvasHeight=800,scale=1;function resizeCanvas(){const e=document.getElementById(\\\"gameContainer\\\"),t=e.clientWidth,n=e.clientHeight;scale=Math.min(t/canvasWidth,n/canvasHeight),canvas.width=canvasWidth*scale,canvas.height=canvasHeight*scale,ctx.scale(scale,scale)}window.addEventListener(\\\"resize\\\",resizeCanvas),resizeCanvas();const LANE_HEIGHT=canvasHeight/3,TASK_WIDTH=60,TASK_HEIGHT=40,TEAM_MEMBER_SIZE=30,COMPLETION_ZONE_WIDTH=100;class Task{constructor(e){this.x=0,this.y=LANE_HEIGHT*e+LANE_HEIGHT/2-TASK_HEIGHT/2,this.width=TASK_WIDTH,this.height=TASK_HEIGHT,this.lane=e,this.speed=2+Math.random(),this.priority=Math.floor(3*Math.random()),this.color=[\\\"#4CAF50\\\",\\\"#FFC107\\\",\\\"#F44336\\\"][this.priority],this.trail=[]}update(){this.x+=this.speed,this.trail.unshift({x:this.x,y:this.y}),this.trail.length>10&&this.trail.pop()}draw(){ctx.fillStyle=this.color,this.trail.forEach((e,t)=>{ctx.globalAlpha=(10-t)/20,ctx.fillRect(e.x,e.y,this.width,this.height)}),ctx.globalAlpha=1,ctx.fillRect(this.x,this.y,this.width,this.height),ctx.strokeStyle=\\\"#fff\\\",ctx.strokeRect(this.x,this.y,this.width,this.height),ctx.fillStyle=\\\"#fff\\\",ctx.font=\\\"20px Arial\\\",ctx.fillText(\\\"\\ud83d\\udcc4\\\",this.x+this.width/4,this.y+this.height/1.5)}}class Blocker{constructor(e){this.x=canvasWidth*(.3+.4*Math.random()),this.y=LANE_HEIGHT*e+LANE_HEIGHT/2-TASK_HEIGHT/2,this.width=40,this.height=40,this.lane=e}draw(){ctx.fillStyle=\\\"#FF0000\\\",ctx.beginPath(),ctx.moveTo(this.x+this.width/2,this.y),ctx.lineTo(this.x+this.width,this.y+this.height),ctx.lineTo(this.x,this.y+this.height),ctx.closePath(),ctx.fill(),ctx.fillStyle=\\\"#fff\\\",ctx.font=\\\"20px Arial\\\",ctx.fillText(\\\"\\u26a0\\ufe0f\\\",this.x+5,this.y+30)}}class TeamMember{constructor(e){this.lane=e,this.x=50,this.y=LANE_HEIGHT*e+LANE_HEIGHT/2}draw(){ctx.fillStyle=\\\"#2196F3\\\",ctx.beginPath(),ctx.arc(this.x,this.y,TEAM_MEMBER_SIZE/2,0,2*Math.PI),ctx.fill(),ctx.fillStyle=\\\"#fff\\\",ctx.font=\\\"20px Arial\\\",ctx.fillText(\\\"\\ud83d\\udc64\\\",this.x-10,this.y+7)}}class Game{constructor(){this.tasks=[],this.blockers=[],this.teamMembers=[new TeamMember(0),new TeamMember(1),new TeamMember(2)],this.score=0,this.multiplier=1,this.morale=100,this.lastTaskTime=0,this.lastBlockerTime=0,this.mentorModeActive=!1,this.mentorModeCooldown=0,this.gameOver=!1}spawnTask(){Date.now()-this.lastTaskTime>2e3&&(this.tasks.push(new Task(Math.floor(3*Math.random()))),this.lastTaskTime=Date.now())}spawnBlocker(){Date.now()-this.lastBlockerTime>3e3&&(this.blockers.push(new Blocker(Math.floor(3*Math.random()))),this.lastBlockerTime=Date.now())}moveTask(e,t){const n=this.tasks.find(t=>t.lane===e);n&&(n.lane=t,n.y=LANE_HEIGHT*t+LANE_HEIGHT/2-TASK_HEIGHT/2)}moveTeamMember(e,t){const n=this.teamMembers.find(t=>t.lane===e);n&&(n.lane=t,n.y=LANE_HEIGHT*t+LANE_HEIGHT/2)}activateMentorMode(){0===this.mentorModeCooldown&&(this.mentorModeActive=!0,setTimeout(()=>{this.mentorModeActive=!1},5e3),this.mentorModeCooldown=1200)}checkCollisions(){this.tasks.forEach(e=>{this.blockers.forEach(t=>{t.lane===e.lane&&Math.abs(e.x-t.x)<TASK_WIDTH&&(this.morale-=10,this.multiplier=1,this.tasks=this.tasks.filter(t=>t!==e))})})}update(){if(!this.gameOver){this.spawnTask(),this.spawnBlocker(),this.mentorModeCooldown>0&&this.mentorModeCooldown--,this.checkCollisions();const e={};this.tasks.forEach(t=>{e[t.lane]=(e[t.lane]||0)+1,e[t.lane]>5&&(this.morale-=.1)}),this.tasks.forEach(e=>{e.update(),this.mentorModeActive&&(e.speed*=1.5),e.x>canvasWidth-COMPLETION_ZONE_WIDTH&&(this.score+=100*this.multiplier,this.morale=Math.min(100,this.morale+5),this.multiplier+=.1,this.tasks=this.tasks.filter(t=>t!==e))}),this.morale<=0&&this.endGame()}}drawBackground(){ctx.fillStyle=\\\"#F5F5F5\\\",ctx.fillRect(0,0,canvasWidth,canvasHeight);for(let e=1;e<3;e++){const t=e*LANE_HEIGHT;ctx.strokeStyle=\\\"#E0E0E0\\\",ctx.beginPath(),ctx.moveTo(0,t),ctx.lineTo(canvasWidth,t),ctx.stroke()}ctx.strokeStyle=\\\"#90CAF9\\\",ctx.setLineDash([5,5]);for(let e=0;e<3;e++){const t=canvasWidth-COMPLETION_ZONE_WIDTH,n=e*LANE_HEIGHT;ctx.strokeRect(t,n,COMPLETION_ZONE_WIDTH,LANE_HEIGHT)}ctx.setLineDash([])}drawHUD(){ctx.fillStyle=\\\"#2196F3\\\",ctx.fillRect(10,10,200*this.morale/100,20),ctx.strokeStyle=\\\"#1976D2\\\",ctx.strokeRect(10,10,200,20),ctx.fillStyle=\\\"#333\\\",ctx.font=\\\"20px Arial\\\",ctx.fillText(`Score: ${Math.floor(this.score)} (x${this.multiplier.toFixed(1)})`,canvasWidth-200,30),ctx.fillText(this.mentorModeCooldown>0?`Mentor Mode: ${Math.ceil(this.mentorModeCooldown/60)}s`:\\\"Mentor Mode Ready\\\",10,50)}draw(){this.drawBackground(),this.teamMembers.forEach(e=>e.draw()),this.tasks.forEach(e=>e.draw()),this.blockers.forEach(e=>e.draw()),this.drawHUD()}endGame(){this.gameOver=!0,document.getElementById(\\\"finalScore\\\").textContent=Math.floor(this.score),document.getElementById(\\\"gameOver\\\").style.display=\\\"flex\\\"}reset(){this.tasks=[],this.blockers=[],this.teamMembers=[new TeamMember(0),new TeamMember(1),new TeamMember(2)],this.score=0,this.multiplier=1,this.morale=100,this.lastTaskTime=0,this.lastBlockerTime=0,this.mentorModeActive=!1,this.mentorModeCooldown=0,this.gameOver=!1,document.getElementById(\\\"gameOver\\\").style.display=\\\"none\\\"}}const game=new Game;function gameLoop(){game.update(),game.draw(),requestAnimationFrame(gameLoop)}document.addEventListener(\\\"keydown\\\",e=>{if([\\\"ArrowUp\\\",\\\"ArrowDown\\\",\\\"Space\\\",\\\"Digit1\\\",\\\"Digit2\\\",\\\"Digit3\\\"].includes(e.code)&&e.preventDefault(),!game.gameOver)if(\\\"ArrowUp\\\"===e.code){const e=game.tasks.findIndex(e=>e.x<canvasWidth-COMPLETION_ZONE_WIDTH);if(-1!==e){const t=game.tasks[e].lane;t>0&&game.moveTask(t,t-1)}}else if(\\\"ArrowDown\\\"===e.code){const e=game.tasks.findIndex(e=>e.x<canvasWidth-COMPLETION_ZONE_WIDTH);if(-1!==e){const t=game.tasks[e].lane;t<2&&game.moveTask(t,t+1)}}else if(\\\"Space\\\"===e.code)game.activateMentorMode();else if(e.code.startsWith(\\\"Digit\\\")){const t=parseInt(e.code.slice(-1))-1;t>=0&&t<=2&&game.teamMembers.length>0&&game.moveTeamMember(game.teamMembers[0].lane,t)}}),document.getElementById(\\\"playAgain\\\").addEventListener(\\\"click\\\",()=>{game.reset()}),gameLoop();</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:40:20.315000Z",
      "updated_at": "2025-02-08T13:40:20.315000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "a4cbf3e2-d013-46d4-9df9-833d3cabf7e1",
          "completion_id": "f596bd2f-bbb8-4d02-ad2f-500031bfb5e1",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:40:20.315000Z",
          "updated_at": "2025-02-08T13:40:20.315000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    },
    {
      "id": "7bc8c324-8e2e-4f3c-8652-c70e1f2962cc",
      "completion_id": "93e02928-dc5d-4902-aa95-d36321d0a47b",
      "validator_task_id": "f9204589-9e3f-4b2c-b64a-c8ec3554f0ef",
      "model": "anthropic/claude-3.5-sonnet",
      "completion": "{\"files\": [{\"filename\": \"index.html\", \"content\": \"<!DOCTYPE html>\\n<html lang=\\\"en\\\"><head><meta charset=\\\"utf-8\\\"/><meta content=\\\"width=device-width,initial-scale=1.0\\\" name=\\\"viewport\\\"/><title>Hospital Flow</title><style>body,html{margin:0;padding:0;height:100%;overflow:hidden;font-family:'Arial',sans-serif;background:#f0f0f0}#gameContainer{position:relative;width:100vmin;height:100vmin;margin:auto}#gameCanvas{position:absolute;top:0;left:0;width:100%;height:100%}#satisfactionMeter{position:absolute;top:10px;left:10px;width:200px;height:20px;background-color:rgba(255,255,255,0.5);border:2px solid #4A90E2;border-radius:10px;overflow:hidden}#satisfactionFill{width:100%;height:100%;background:linear-gradient(90deg,#4A90E2,#57B8FF);transition:width 0.3s}#score,#multiplier{position:absolute;top:10px;right:10px;color:#4A90E2;font-size:24px;font-weight:bold}#multiplier{top:40px}#specialistCooldown{position:absolute;bottom:10px;left:10px;color:#4A90E2;font-size:18px}#gameOver{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);background:rgba(255,255,255,0.95);padding:20px;border-radius:10px;text-align:center;display:none;flex-direction:column;align-items:center;border:2px solid #4A90E2;box-shadow:0 0 20px rgba(74,144,226,0.2)}#playAgain{margin-top:20px;padding:10px 20px;font-size:18px;background:#4A90E2;color:white;border:none;border-radius:5px;cursor:pointer;transition:background 0.3s}#playAgain:hover{background:#57B8FF}</style></head><body><div id=\\\"gameContainer\\\"><canvas id=\\\"gameCanvas\\\"></canvas><div id=\\\"satisfactionMeter\\\"><div id=\\\"satisfactionFill\\\"></div></div><div id=\\\"score\\\">Score: 0</div><div id=\\\"multiplier\\\">x1.0</div><div id=\\\"specialistCooldown\\\">Specialist Mode: Ready</div><div id=\\\"gameOver\\\"><h2>Hospital Overload!</h2><p>Final Score: <span id=\\\"finalScore\\\">0</span></p><button id=\\\"playAgain\\\">Try Again</button></div></div><script src=\\\"index.js\\\"></script><script>const canvas=document.getElementById('gameCanvas'),ctx=canvas.getContext('2d'),satisfactionMeter=document.getElementById('satisfactionFill'),scoreElement=document.getElementById('score'),multiplierElement=document.getElementById('multiplier'),gameOverScreen=document.getElementById('gameOver'),finalScoreElement=document.getElementById('finalScore'),specialistCooldownElement=document.getElementById('specialistCooldown');let canvasWidth=800,canvasHeight=800,scale=1;function resizeCanvas(){const e=document.getElementById('gameContainer');scale=Math.min(e.clientWidth/canvasWidth,e.clientHeight/canvasHeight),canvas.width=canvasWidth*scale,canvas.height=canvasHeight*scale,ctx.scale(scale,scale)}window.addEventListener('resize',resizeCanvas),resizeCanvas();const LANE_HEIGHT=canvasHeight/3,lanes=[{y:0,patients:[],complications:[]},{y:LANE_HEIGHT,patients:[],complications:[]},{y:2*LANE_HEIGHT,patients:[],complications:[]}];let satisfaction=100,score=0,multiplier=1,gameOver=false,specialistMode=false,specialistTimer=0,lastTime=0;const SPECIALIST_DURATION=5e3,SPECIALIST_COOLDOWN=2e4;class Patient{constructor(e){this.x=0,this.y=e+LANE_HEIGHT/2,this.lane=Math.floor(e/LANE_HEIGHT),this.speed=2+2*Math.random(),this.urgency=Math.floor(3*Math.random()),this.size=30,this.trail=[]}}class Complication{constructor(e){this.x=canvasWidth,this.y=e+LANE_HEIGHT/2,this.lane=Math.floor(e/LANE_HEIGHT),this.size=20}}function createPatient(){const e=Math.floor(3*Math.random())*LANE_HEIGHT;lanes[Math.floor(e/LANE_HEIGHT)].patients.push(new Patient(e))}function createComplication(){const e=Math.floor(3*Math.random())*LANE_HEIGHT;lanes[Math.floor(e/LANE_HEIGHT)].complications.push(new Complication(e))}function drawPatient(e){const t=['#4A90E2','#F5A623','#D0021B'][e.urgency];ctx.fillStyle=t,ctx.beginPath(),ctx.arc(e.x,e.y,e.size/2,0,2*Math.PI),ctx.fill(),e.trail.forEach((e,n)=>{ctx.fillStyle=`${t}${Math.floor(25.5*(10-n)).toString(16)}`,ctx.beginPath(),ctx.arc(e.x,e.y,15-1.5*n,0,2*Math.PI),ctx.fill()})}function drawComplication(e){ctx.fillStyle='#D0021B',ctx.beginPath(),ctx.moveTo(e.x,e.y-e.size/2),ctx.lineTo(e.x+e.size/2,e.y+e.size/2),ctx.lineTo(e.x-e.size/2,e.y+e.size/2),ctx.closePath(),ctx.fill()}function drawLanes(){ctx.fillStyle='#F5F5F5',ctx.fillRect(0,0,canvasWidth,canvasHeight);for(let e=1;e<3;e++){const t=e*LANE_HEIGHT;ctx.strokeStyle='#E0E0E0',ctx.setLineDash([5,5]),ctx.beginPath(),ctx.moveTo(0,t),ctx.lineTo(canvasWidth,t),ctx.stroke(),ctx.setLineDash([])}ctx.strokeStyle='#4A90E2',ctx.setLineDash([10,10]);for(let e=0;e<3;e++){const t=e*LANE_HEIGHT+LANE_HEIGHT;ctx.beginPath(),ctx.moveTo(canvasWidth-50,t-LANE_HEIGHT),ctx.lineTo(canvasWidth-50,t),ctx.stroke()}ctx.setLineDash([])}function updatePatients(e){lanes.forEach((t,n)=>{t.patients.forEach((t,i)=>{t.trail.unshift({x:t.x,y:t.y}),t.trail.length>10&&t.trail.pop(),t.x+=t.speed*(specialistMode&&n===selectedLane?2:1)*e*60,t.x>canvasWidth-50&&(score+=100*multiplier,createDischargeEffect(t.x,t.y),t.patients.splice(i,1))}),t.complications.forEach((t,n)=>{t.x-=1*e*60,t.x<0&&t.complications.splice(n,1)})})}function checkCollisions(){lanes.forEach(e=>{e.patients.forEach((t,n)=>{e.complications.forEach((e,i)=>{Math.abs(t.x-e.x)<20&&Math.abs(t.y-e.y)<20&&(satisfaction-=10,e.complications.splice(i,1))})})})}function createDischargeEffect(e,t){for(let n=0;n<10;n++){const i={x:e,y:t,dx:2*Math.random()-1,dy:2*Math.random()-1,life:1};particles.push(i)}}function updateParticles(e){particles.forEach((t,n)=>{t.x+=t.dx*e*60,t.y+=t.dy*e*60,t.life-=.02*e*60,t.life<=0&&particles.splice(n,1)})}function drawParticles(){ctx.fillStyle='#4A90E2',particles.forEach(e=>{ctx.globalAlpha=e.life,ctx.beginPath(),ctx.arc(e.x,e.y,3,0,2*Math.PI),ctx.fill()}),ctx.globalAlpha=1}let selectedLane=1,particles=[];function updateGame(e){if(!gameOver){if(updatePatients(e),checkCollisions(),updateParticles(e),Math.random()<.02*e*60&&createPatient(),Math.random()<.01*e*60&&createComplication(),specialistMode?(specialistTimer-=1e3*e,specialistTimer<=0&&(specialistMode=!1,specialistTimer=SPECIALIST_COOLDOWN)):specialistTimer>0&&(specialistTimer-=1e3*e),satisfaction<=0)return void endGame();satisfaction=Math.min(100,satisfaction+.1*e*60),satisfactionMeter.style.width=`${satisfaction}%`,scoreElement.textContent=`Score: ${Math.floor(score)}`,multiplierElement.textContent=`x${multiplier.toFixed(1)}`,specialistMode?specialistCooldownElement.textContent=`Specialist Mode: ${Math.ceil(specialistTimer/1e3)}s`:specialistTimer>0?specialistCooldownElement.textContent=`Cooldown: ${Math.ceil(specialistTimer/1e3)}s`:specialistCooldownElement.textContent='Specialist Mode: Ready'}}function drawGame(){drawLanes(),lanes.forEach(e=>{e.complications.forEach(drawComplication),e.patients.forEach(drawPatient)}),drawParticles()}function gameLoop(e){0===lastTime&&(lastTime=e);const t=(e-lastTime)/1e3;lastTime=e,gameOver||(updateGame(t),drawGame()),requestAnimationFrame(gameLoop)}function startGame(){satisfaction=100,score=0,multiplier=1,gameOver=!1,specialistMode=!1,specialistTimer=0,lastTime=0,selectedLane=1,particles=[],lanes.forEach(e=>{e.patients=[],e.complications=[]}),gameOverScreen.style.display='none',requestAnimationFrame(gameLoop)}function endGame(){gameOver=!0,finalScoreElement.textContent=Math.floor(score),gameOverScreen.style.display='flex'}document.addEventListener('keydown',e=>{if(!gameOver)switch(e.code){case'ArrowUp':selectedLane=Math.max(0,selectedLane-1),e.preventDefault();break;case'ArrowDown':selectedLane=Math.min(2,selectedLane+1),e.preventDefault();break;case'Space':specialistTimer<=0&&(specialistMode=!0,specialistTimer=SPECIALIST_DURATION),e.preventDefault()}}),document.getElementById('playAgain').addEventListener('click',startGame),startGame();</script></body></html>\", \"language\": \"html\"}]}",
      "created_at": "2025-02-08T13:40:20.315000Z",
      "updated_at": "2025-02-08T13:40:20.315000Z",
      "validator_task_relation": null,
      "Criterion": [
        {
          "id": "c61ce0e1-778b-4826-953d-5b47946cef22",
          "completion_id": "7bc8c324-8e2e-4f3c-8652-c70e1f2962cc",
          "criteria_type": "SCORE",
          "config": "{\"min\": 1.0, \"max\": 100.0}",
          "created_at": "2025-02-08T13:40:20.315000Z",
          "updated_at": "2025-02-08T13:40:20.315000Z",
          "completion_relation": null,
          "scores": null
        }
      ]
    }
  ],
  "ground_truths": [
    {
      "id": "e73837d2-8f15-46bd-a078-ba383e3f3c38",
      "validator_task_id": "f9204589-9e3f-4b2c-b64a-c8ec3554f0ef",
      "obfuscated_model_id": "41dee05a-9b2e-4c45-a448-044a38f91c01",
      "real_model_id": "41dee05a-9b2e-4c45-a448-044a38f91c01",
      "rank_id": 0,
      "ground_truth_score": 0.0,
      "created_at": "2025-02-08T13:40:20.315000Z",
      "updated_at": "2025-02-08T13:40:20.315000Z",
      "validator_task_relation": null
    },
    {
      "id": "d848a7b5-c75a-437b-98dc-52a0b0e32fa2",
      "validator_task_id": "f9204589-9e3f-4b2c-b64a-c8ec3554f0ef",
      "obfuscated_model_id": "2def7a7c-587b-45b4-83eb-0b90bb6813d9",
      "real_model_id": "2def7a7c-587b-45b4-83eb-0b90bb6813d9",
      "rank_id": 1,
      "ground_truth_score": 1.0,
      "created_at": "2025-02-08T13:40:20.315000Z",
      "updated_at": "2025-02-08T13:40:20.315000Z",
      "validator_task_relation": null
    },
    {
      "id": "e11facc8-178d-4499-953f-fce14d2f3972",
      "validator_task_id": "f9204589-9e3f-4b2c-b64a-c8ec3554f0ef",
      "obfuscated_model_id": "264b6423-1b8d-46a8-91b3-27a3d22290a8",
      "real_model_id": "264b6423-1b8d-46a8-91b3-27a3d22290a8",
      "rank_id": 2,
      "ground_truth_score": 2.0,
      "created_at": "2025-02-08T13:40:20.315000Z",
      "updated_at": "2025-02-08T13:40:20.315000Z",
      "validator_task_relation": null
    },
    {
      "id": "999f97fd-0c5a-45cb-b22e-e0169a9817a6",
      "validator_task_id": "f9204589-9e3f-4b2c-b64a-c8ec3554f0ef",
      "obfuscated_model_id": "93e02928-dc5d-4902-aa95-d36321d0a47b",
      "real_model_id": "93e02928-dc5d-4902-aa95-d36321d0a47b",
      "rank_id": 3,
      "ground_truth_score": 3.0,
      "created_at": "2025-02-08T13:40:20.315000Z",
      "updated_at": "2025-02-08T13:40:20.315000Z",
      "validator_task_relation": null
    }
  ],
  "miner_responses": [
    {
      "id": "cdb4e268-4f9a-49c6-9002-338f8b4f19b6",
      "validator_task_id": "f9204589-9e3f-4b2c-b64a-c8ec3554f0ef",
      "dojo_task_id": "119645f2-2510-4860-bc37-f81ea0edb12a",
      "hotkey": "5HBm7gmcyrqjCpyFwMBM6HzZrNmM3JBHKJHW2HsDUvwNFJUS",
      "coldkey": "5HU3tezTitX4gq5emvpbspqFzzV9dfuR2BEkx3SG4Zf1ucym",
      "task_result": "{}",
      "created_at": "2025-02-08T13:40:20.315000Z",
      "updated_at": "2025-02-08T13:40:20.315000Z",
      "validator_task_relation": null,
      "scores": []
    },
    {
      "id": "2ab86517-bbf9-4861-ad53-7b9b4269a718",
      "validator_task_id": "f9204589-9e3f-4b2c-b64a-c8ec3554f0ef",
      "dojo_task_id": "b770c419-aacf-4559-b2e9-56f4d5614e6f",
      "hotkey": "5DyMoTsYaP1cjoYahSHtGKmwu6bRva6XJ3ha6i1uMpm5oSS2",
      "coldkey": "5D8ARXP7kza9qrdNgGtXgMHTf6SxsLLeVjE8cf3C4FAhEpNe",
      "task_result": [
        {
          "id": "f5bff2da-e769-4809-ac55-dc126a4d2970",
          "status": "COMPLETED",
          "worker_id": "aea87a24-1379-4b32-93b8-d12b4e188d36",
          "created_at": "2025-02-08T13:41:18.931000+00:00",
          "updated_at": "2025-02-08T13:41:18.931000+00:00",
          "result_data": [
            {
              "model": "41dee05a-9b2e-4c45-a448-044a38f91c01",
              "criteria": [
                {
                  "max": 100,
                  "min": 1,
                  "type": "score",
                  "value": 78
                }
              ]
            },
            {
              "model": "2def7a7c-587b-45b4-83eb-0b90bb6813d9",
              "criteria": [
                {
                  "max": 100,
                  "min": 1,
                  "type": "score",
                  "value": 89
                }
              ]
            },
            {
              "model": "93e02928-dc5d-4902-aa95-d36321d0a47b",
              "criteria": [
                {
                  "max": 100,
                  "min": 1,
                  "type": "score",
                  "value": 12
                }
              ]
            },
            {
              "model": "264b6423-1b8d-46a8-91b3-27a3d22290a8",
              "criteria": [
                {
                  "max": 100,
                  "min": 1,
                  "type": "score",
                  "value": 23
                }
              ]
            }
          ],
          "dojo_task_id": "b770c419-aacf-4559-b2e9-56f4d5614e6f",
          "stake_amount": null,
          "finalised_loss": null,
          "potential_loss": null,
          "finalised_reward": null,
          "potential_reward": null
        }
      ],
      "created_at": "2025-02-08T13:40:20.315000Z",
      "updated_at": "2025-02-08T13:44:52.289000Z",
      "validator_task_relation": null,
      "scores": [
        {
          "id": "1fbfb71f-8630-4901-a759-b58c690ea244",
          "criterion_id": "d5a66545-0cad-4c28-ba6f-b1550ee1f1ad",
          "miner_response_id": "2ab86517-bbf9-4861-ad53-7b9b4269a718",
          "scores": "{\"raw_score\": 1.0, \"rank_id\": null, \"normalised_score\": 0.5, \"ground_truth_score\": 0.41314553990610325, \"cosine_similarity_score\": 0.9596034934620882, \"normalised_cosine_similarity_score\": 1.0, \"cubic_reward_score\": 0.704}",
          "created_at": "2025-02-08T13:44:52.358000Z",
          "updated_at": "2025-02-08T13:44:52.552000Z",
          "criterion_relation": null,
          "miner_response_relation": null
        },
        {
          "id": "c16e6b22-6919-425a-a91a-c5ba47d2f645",
          "criterion_id": "46b975be-5c58-4120-8818-4700ddf19002",
          "miner_response_id": "2ab86517-bbf9-4861-ad53-7b9b4269a718",
          "scores": "{\"raw_score\": 1.0, \"rank_id\": null, \"normalised_score\": 0.5, \"ground_truth_score\": 0.41314553990610325, \"cosine_similarity_score\": 0.9596034934620882, \"normalised_cosine_similarity_score\": 1.0, \"cubic_reward_score\": 0.704}",
          "created_at": "2025-02-08T13:44:52.358000Z",
          "updated_at": "2025-02-08T13:44:52.552000Z",
          "criterion_relation": null,
          "miner_response_relation": null
        },
        {
          "id": "36298d0c-8a59-43f7-a201-3ec10b0cee63",
          "criterion_id": "a4cbf3e2-d013-46d4-9df9-833d3cabf7e1",
          "miner_response_id": "2ab86517-bbf9-4861-ad53-7b9b4269a718",
          "scores": "{\"raw_score\": 1.0, \"rank_id\": null, \"normalised_score\": 0.5, \"ground_truth_score\": 0.41314553990610325, \"cosine_similarity_score\": 0.9596034934620882, \"normalised_cosine_similarity_score\": 1.0, \"cubic_reward_score\": 0.704}",
          "created_at": "2025-02-08T13:44:52.358000Z",
          "updated_at": "2025-02-08T13:44:52.552000Z",
          "criterion_relation": null,
          "miner_response_relation": null
        },
        {
          "id": "b53a9d8b-88da-4d02-bdce-3db6120150b2",
          "criterion_id": "c61ce0e1-778b-4826-953d-5b47946cef22",
          "miner_response_id": "2ab86517-bbf9-4861-ad53-7b9b4269a718",
          "scores": "{\"raw_score\": 1.0, \"rank_id\": null, \"normalised_score\": 0.5, \"ground_truth_score\": 0.41314553990610325, \"cosine_similarity_score\": 0.9596034934620882, \"normalised_cosine_similarity_score\": 1.0, \"cubic_reward_score\": 0.704}",
          "created_at": "2025-02-08T13:44:52.358000Z",
          "updated_at": "2025-02-08T13:44:52.552000Z",
          "criterion_relation": null,
          "miner_response_relation": null
        }
      ]
    }
  ],
  "created_at": "2025-02-08T13:40:20.315000+00:00",
  "metadata": null
}
